		//0x1800		VoC_code_section_2
		//0x1800		Agc1_Main
0xF000DFE9,	//0x1800		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF01DF01C,	//0x1802		VoC_lw16i_short(WRAP1,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF01FF01E,	//0x1804		VoC_lw16i_short(WRAP3,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x7FC11540,	//0x1806		VoC_sw16_d(REG0,0xffc1)
0x003F0A96,	//0x1808		VoC_lw16i(STATUS,0x3f)
0xF140F01B,	//0x180a		VoC_lw16i_short(REG0,0xa,DEFAULT)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x1F400A81,	//0x180c		VoC_lw16i(REG1,0x1f40)
0x12C81500,	//0x180e		VoC_sw16_d(REG0,0x12c8)
0x12CA1501,	//0x1810		VoC_sw16_d(REG1,0x12ca)
0x19CA2B80,	//0x1812		VoC_jal(Agc_Init)
0x12C01804,	//0x1814		VoC_lw16i_set_inc(REG0,0x12c0,0x1)
0x12991805,	//0x1816		VoC_lw16i_set_inc(REG1,0x1299,0x1)
0xD882E8E3,	//0x1818		VoC_lw16inc_p(REG2,REG0,DEFAULT)	|	VoC_loop_i_short(0x7,DEFAULT)
0xDC92FFC0,	//0x181a		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_NOP
		//0x181b		VoC_endloop0
0xFFC0D802,	//0x181c		VoC_NOP	|	VoC_lw16_p(REG2,REG0,DEFAULT)
0x12BB1502,	//0x181e		VoC_sw16_d(REG2,0x12bb)
0x1401F019,	//0x1820		VoC_lw16_d(REG1,0x12be)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x140212BE,	//0x1822		VoC_lw16_d(REG2,0x12bf)(lo)	|	VoC_lw16_d(REG1,0x12be)(hi)
0x140312BF,	//0x1824		VoC_lw16_d(REG3,0x12be)(lo)	|	VoC_lw16_d(REG2,0x12bf)(hi)
0x140412BE,	//0x1826		VoC_lw16_d(REG4,0x13d1)(lo)	|	VoC_lw16_d(REG3,0x12be)(hi)
0xC25D13D1,	//0x1828		VoC_sub16_rr(REG5,REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG4,0x13d1)(hi)
0x13D707A6,	//0x182a		VoC_sub16_rd(REG6,REG4,0x13d7)
0xF68A4D74,	//0x182c		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG6,DEFAULT)
0x12BD079F,	//0x182e		VoC_sub16_rd(REG7,REG3,0x12bd)
0xF80C7005,	//0x1830		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xE00B4914,	//0x1832		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x19F62B80,	//0x1834		VoC_jal(CII_div_mode32)
0xC1EDE1C5,	//0x1836		VoC_add16_rr(REG5,REG7,REG5,DEFAULT)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x183C34BD,	//0x1838		VoC_bngt16_rr(LABLE_MAX_GAIN,REG7,REG5)
0xFFC060E5,	//0x183a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG7,DEFAULT)
		//0x183c		LABLE_MAX_GAIN
0x12E01505,	//0x183c		VoC_sw16_d(REG5,0x12e0)
0x4D7CE147,	//0x183e		VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)	|	VoC_movreg16(REG7,ACC1_LO,DEFAULT)
0x7007F6CA,	//0x1840		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG6,IN_PARALLEL)
0xC91CF80E,	//0x1842		VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x19F62B80,	//0x1844		VoC_jal(CII_div_mode32)
0xC27DE1C7,	//0x1846		VoC_sub16_rr(REG5,REG1,REG7,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0x1854340B,	//0x1848		VoC_bgt16_rr(Agc_Set_Config_L0,REG1,REG3)
0x18543182,	//0x184a		VoC_bez16_r(Agc_Set_Config_L0,REG2)
0x13D31406,	//0x184c		VoC_lw16_d(REG6,0x13d3)
0xE00242CF,	//0x184e		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG3,REG1,DEFAULT)
0xC17DC1F7,	//0x1850		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
0x13D61502,	//0x1852		VoC_sw16_d(REG2,0x13d6)
		//0x1854		Agc_Set_Config_L0
0x12E11505,	//0x1854		VoC_sw16_d(REG5,0x12e1)
0x4C54E142,	//0x1856		VoC_multf32_rr(ACC0,REG1,REG2,DEFAULT)	|	VoC_movreg16(REG2,ACC1_LO,DEFAULT)
0x140AE005,	//0x1858		VoC_lw16_d(ACC1_LO,0x13d1)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xC91413D1,	//0x185a		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_lw16_d(ACC1_LO,0x13d1)(hi)
0x19F62B80,	//0x185c		VoC_jal(CII_div_mode32)
0x3205E1C5,	//0x185e		VoC_bltz16_r(Agc_Set_Config_L1,REG5)(lo)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x481D1863,	//0x1860		VoC_blt16_rd(Agc_Set_Config_L2,REG5,0x13c0)(lo)	|	VoC_bltz16_r(Agc_Set_Config_L1,REG5)(hi)
0xE58013C0,	//0x1862		VoC_return	|	VoC_blt16_rd(Agc_Set_Config_L2,REG5,0x13c0)(hi)
		//0x1863		Agc_Set_Config_L1
		//0x1864		Agc_Set_Config_L2
0x12E21505,	//0x1864		VoC_sw16_d(REG5,0x12e2)
0x13400A80,	//0x1866		VoC_lw16i(REG0,0x1340)
0x1406C028,	//0x1868		VoC_lw16_d(REG6,0x13d6)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x580013D6,	//0x186a		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_lw16_d(REG6,0x13d6)(hi)
0x6088C1A4,	//0x186c		VoC_movreg16(ACC0_LO,REG4,DEFAULT)	|	VoC_add16_rr(REG4,REG6,REG4,IN_PARALLEL)
0x1500E009,	//0x186e		VoC_sw16_d(REG0,0x12e3)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
0xFFC012E3,	//0x1870		VoC_NAD	|	VoC_sw16_d(REG0,0x12e3)(hi)
0x19F62B80,	//0x1872		VoC_jal(CII_div_mode32)
0xC2F37F3B,	//0x1874		VoC_sub16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x13CE1404,	//0x1876		VoC_lw16_d(REG4,0x13ce)
0x12BD0736,	//0x1878		VoC_add16_rd(REG6,REG6,0x12bd)
0xE0096068,	//0x187a		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
0xF68A7B9C,	//0x187c		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff3,DEFAULT)
0xFB937A0D,	//0x187e		VoC_shr32_ri(REG67,0xfffffff2,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x1,DEFAULT)
0xE1436001,	//0x1880		VoC_lw16i_short(REG3,0x14,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x12DC1583,	//0x1882		VoC_sw32_d(REG67,0x12dc)
0x19F62B80,	//0x1884		VoC_jal(CII_div_mode32)
0x00011600,	//0x1886		VoC_and16_ri(REG0,0x1)
0xF7C67909,	//0x1888		VoC_movreg16(REG6,RL7_LO,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0x1,DEFAULT)
0x13D80736,	//0x188a		VoC_add16_rd(REG6,REG6,0x13d8)
0xFF4477FA,	//0x188c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xffffffff,DEFAULT)
0x18923180,	//0x188e		VoC_bez16_r(Agc_Set_Config_L3,REG0)
0xFFC06068,	//0x1890		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
		//0x1892		Agc_Set_Config_L3
0xF0054E4B,	//0x1892		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG1,REG3,DEFAULT)
0x12E41506,	//0x1894		VoC_sw16_d(REG6,0x12e4)
0x1584FFC0,	//0x1896		VoC_sw32_d(ACC0,0x12de)(lo)	|	VoC_NOP
0x180412DE,	//0x1898		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_sw32_d(ACC0,0x12de)(hi)
0xFFC00000,	//0x189a		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0x19C52C41,	//0x189c		VoC_loop_i(0x1,0x20)
0x13D70781,	//0x189e		VoC_sub16_rd(REG1,REG0,0x13d7)
0x13D20A0B,	//0x18a0		VoC_multf32_rd(REG67,REG1,0x13d2)
0x13CF1404,	//0x18a2		VoC_lw16_d(REG4,0x13cf)
0x3246F009,	//0x18a4		VoC_bnltz16_r(Agc_Set_Config_L4,REG6)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xF7E918A8,	//0x18a6		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Agc_Set_Config_L4,REG6)(hi)
		//0x18a8		Agc_Set_Config_L4
0x4E74E0C8,	//0x18a8		VoC_macX_rr(REG6,REG4,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0x140AE00B,	//0x18aa		VoC_lw16_d(ACC1_LO,0x13d1)(lo)	|	VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)
0x092413D1,	//0x18ac		VoC_add32_rd(ACC0,ACC0,0x13c4)(lo)	|	VoC_lw16_d(ACC1_LO,0x13d1)(hi)
0xFFC013C4,	//0x18ae		VoC_NAD	|	VoC_add32_rd(ACC0,ACC0,0x13c4)(hi)
0x1A4E2B80,	//0x18b0		VoC_jal(Div_SignedInt)
0x12E2140C,	//0x18b2		VoC_lw16_d(RL6_LO,0x12e2)
0xFB96F00D,	//0x18b4		VoC_shr32_ri(RL6,0xfffffff2,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0xFF3ECBBF,	//0x18b6		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_sub32_rr(RL7,RL6,RL7,DEFAULT)
0x18BC33C6,	//0x18b8		VoC_bnltz32_r(Agc_ABS_0,RL6)
0x13C20BB6,	//0x18ba		VoC_sub32_dr(RL6,0x13c2,RL6)
		//0x18bc		Agc_ABS_0
0xFF327F33,	//0x18bc		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_movreg32(REG67,RL6,DEFAULT)
0x0A81FC73,	//0x18be		VoC_lw16i(REG1,0x1340)(lo)	|	VoC_shru32_ri(REG67,0xe,DEFAULT)
0xC0711340,	//0x18c0		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i(REG1,0x1340)(hi)
0x3FFF1604,	//0x18c2		VoC_and16_ri(REG4,0x3fff)
0xE0095897,	//0x18c4		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xF6E8387D,	//0x18c6		VoC_movreg16(ACC0_LO,REG7,IN_PARALLEL)	|	VoC_sub16_pr(REG5,REG1,REG7,DEFAULT)
0xCE2CFD94,	//0x18c8		VoC_mac32_rr(REG5,REG4,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffff2,DEFAULT)
0x12E51506,	//0x18ca		VoC_sw16_d(REG6,0x12e5)
0x12E61504,	//0x18cc		VoC_sw16_d(REG4,0x12e6)
0xFC447F22,	//0x18ce		VoC_shru32_ri(ACC0,0x8,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x33C7F619,	//0x18d0		VoC_bnltz32_r(Agc_Set_Config_L6,RL7)(lo)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)
0x7F331916,	//0x18d2		VoC_movreg32(REG67,RL6,DEFAULT)	|	VoC_bnltz32_r(Agc_Set_Config_L6,RL7)(hi)
0xFFC0FF44,	//0x18d4		VoC_NAD	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x1A022B80,	//0x18d6		VoC_jal(Coolsand_CLZU)
0x13D01401,	//0x18d8		VoC_lw16_d(REG1,0x13d0)
0x13D94932,	//0x18da		VoC_blt16_rd(Agc_Set_Config_L7,REG2,0x13d9)
0xF90E60C3,	//0x18dc		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x00011603,	//0x18de		VoC_and16_ri(REG3,0x1)
0x00480A96,	//0x18e0		VoC_lw16i(STATUS,0x48)
0x00040A96,	//0x18e2		VoC_lw16i(STATUS,0x4)
0x18E73183,	//0x18e4		VoC_bez16_r(Agc_Set_Config_L8,REG3)
0xCE71E028,	//0x18e6		VoC_macX_rr(REG6,REG1,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG1,DEFAULT)
		//0x18e7		Agc_Set_Config_L8
0xFFC0CE39,	//0x18e8		VoC_NOP	|	VoC_mac32_rr(REG7,REG1,DEFAULT)
0x00080A96,	//0x18ea		VoC_lw16i(STATUS,0x8)
0xE0017C34,	//0x18ec		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x6,DEFAULT)
0x190E2B00,	//0x18ee		VoC_jump_lg(Agc_Set_Config_L11)
		//0x18f0		Agc_Set_Config_L7
0x13D90B13,	//0x18f0		VoC_sub16_dr(REG3,0x13d9,REG2)
0x60C3FEDB,	//0x18f2		VoC_movreg16(REG3,REG6,DEFAULT)	|	VoC_shru32_rr(REG67,REG3,DEFAULT)
0x1603F90E,	//0x18f4		VoC_and16_ri(REG3,0x1)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x0A960001,	//0x18f6		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_and16_ri(REG3,0x1)(hi)
0x0A960048,	//0x18f8		VoC_lw16i(STATUS,0x4)(lo)	|	VoC_lw16i(STATUS,0x48)(hi)
0x31830004,	//0x18fa		VoC_bez16_r(Agc_Set_Config_L9,REG3)(lo)	|	VoC_lw16i(STATUS,0x4)(hi)
0xE02818FE,	//0x18fc		VoC_movreg16(ACC0_LO,REG1,DEFAULT)	|	VoC_bez16_r(Agc_Set_Config_L9,REG3)(hi)
		//0x18fe		Agc_Set_Config_L9
0xCE39CE71,	//0x18fe		VoC_mac32_rr(REG7,REG1,DEFAULT)	|	VoC_macX_rr(REG6,REG1,DEFAULT)
0x00080A96,	//0x1900		VoC_lw16i(STATUS,0x8)
0x13DA4882,	//0x1902		VoC_blt16_rd(Agc_Set_Config_L10,REG2,0x13da)
0x13DA0793,	//0x1904		VoC_sub16_rd(REG3,REG2,0x13da)
0xE0017EDC,	//0x1906		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG3,DEFAULT)
0xFFC065C6,	//0x1908		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Agc_Set_Config_L11)
		//0x190a		Agc_Set_Config_L10
0x13DA0B11,	//0x190a		VoC_sub16_dr(REG1,0x13da,REG2)
0xFFC07ECA,	//0x190c		VoC_NAD(IN_PARALLEL)	|	VoC_shru32_rr(REG45,REG1,DEFAULT)
		//0x190e		Agc_Set_Config_L11
0xFF447F23,	//0x190e		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x19163693,	//0x1910		VoC_bngt32_rr(Agc_Set_Config_L6,REG45,REG67)
0x0B09CA9C,	//0x1912		VoC_sub16_dr(REG1,0x13db,REG1)(lo)	|	VoC_sub32_rr(ACC0,REG45,REG67,DEFAULT)
0xFECC13DB,	//0x1914		VoC_shru32_rr(ACC0,REG1,DEFAULT)	|	VoC_sub16_dr(REG1,0x13db,REG1)(hi)
		//0x1916		Agc_Set_Config_L6
0x12E31401,	//0x1916		VoC_lw16_d(REG1,0x12e3)
0x12E01402,	//0x1918		VoC_lw16_d(REG2,0x12e0)
0xFF447F23,	//0x191a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xF9096023,	//0x191c		VoC_shru16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x00011603,	//0x191e		VoC_and16_ri(REG3,0x1)
0x19243183,	//0x1920		VoC_bez16_r(Agc_Set_Config_MulU0,REG3)
0xFFC06048,	//0x1922		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG2,DEFAULT)
		//0x1924		Agc_Set_Config_MulU0
0xF6C54E4A,	//0x1924		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_macX_rr(REG1,REG2,DEFAULT)
0x12E21404,	//0x1926		VoC_lw16_d(REG4,0x12e2)
0xF90E7BD4,	//0x1928		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffa,DEFAULT)
0x00011605,	//0x192a		VoC_and16_ri(REG5,0x1)
0x700BCEF4,	//0x192c		VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)	|	VoC_msuX_rr(REG6,REG4,DEFAULT)
0x3185F68A,	//0x192e		VoC_bez16_r(Agc_Set_Config_MulU1,REG5)(lo)	|	VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)
0xCB2C1932,	//0x1930		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_bez16_r(Agc_Set_Config_MulU1,REG5)(hi)
		//0x1932		Agc_Set_Config_MulU1
0x1483CEBC,	//0x1932		VoC_lw32_d(REG67,0x12de)(lo)	|	VoC_msu32_rr(REG7,REG4,DEFAULT)
0x7F1D12DE,	//0x1934		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_lw32_d(REG67,0x12de)(hi)
0x36A3FA43,	//0x1936		VoC_bngt32_rr(Agc_Set_Config_L12,ACC0,REG67)(lo)	|	VoC_shr32_ri(REG67,0x8,IN_PARALLEL)
0xFF26193D,	//0x1938		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_bngt32_rr(Agc_Set_Config_L12,ACC0,REG67)(hi)
0x1A282B80,	//0x193a		VoC_jal(Coolsand_CLZS)
0xFF2EE5C6,	//0x193c		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_jump(Agc_Set_Config_L13)
		//0x193d		Agc_Set_Config_L12
0x1A282B80,	//0x193e		VoC_jal(Coolsand_CLZS)
0x13DB0712,	//0x1940		VoC_add16_rd(REG2,REG2,0x13db)
		//0x1942		Agc_Set_Config_L13
0xC312F004,	//0x1942		VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x13DB0713,	//0x1944		VoC_add16_rd(REG3,REG2,0x13db)
0xFEDD7ED4,	//0x1946		VoC_shru32_rr(ACC1,REG3,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG2,DEFAULT)
0xFA0EFF2E,	//0x1948		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0x195433C4,	//0x194a		VoC_bnltz32_r(Agc_Set_Config_L14,ACC0)
0x00480A96,	//0x194c		VoC_lw16i(STATUS,0x48)
0x00440A96,	//0x194e		VoC_lw16i(STATUS,0x44)
0x0A96CB34,	//0x1950		VoC_lw16i(STATUS,0x8)(lo)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xE5C30008,	//0x1952		VoC_jump(Agc_Set_Config_L15)	|	VoC_lw16i(STATUS,0x8)(hi)
		//0x1954		Agc_Set_Config_L14
0xFFC04934,	//0x1954		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x1956		Agc_Set_Config_L15
0x1A4E2B80,	//0x1956		VoC_jal(Div_SignedInt)
0x12BF6C18,	//0x1958		VoC_bez16_d(Agc_Set_Config_L16,0x12bf)
0x12E44D30,	//0x195a		VoC_bnlt16_rd(Agc_Set_Config_L16,REG0,0x12e4)
0x13D70781,	//0x195c		VoC_sub16_rd(REG1,REG0,0x13d7)
0x13CF1402,	//0x195e		VoC_lw16_d(REG2,0x13cf)
0x3241F009,	//0x1960		VoC_bnltz16_r(Agc_Set_Config_MulU2,REG1)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xF7E91964,	//0x1962		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Agc_Set_Config_MulU2,REG1)(hi)
		//0x1964		Agc_Set_Config_MulU2
0xCE4AE028,	//0x1964		VoC_macX_rr(REG1,REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG1,DEFAULT)
0x09A4FFC0,	//0x1966		VoC_sub32_rd(ACC0,ACC0,0x12dc)(lo)	|	VoC_NOP
0x092412DC,	//0x1968		VoC_add32_rd(ACC0,ACC0,0x13c6)(lo)	|	VoC_sub32_rd(ACC0,ACC0,0x12dc)(hi)
0x728A13C6,	//0x196a		VoC_lw16i_short(ACC1_LO,0x14,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x13c6)(hi)
0xFFC0E00B,	//0x196c		VoC_NAD	|	VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)
0x1A4E2B80,	//0x196e		VoC_jal(Div_SignedInt)
		//0x1970		Agc_Set_Config_L16
0x13CD1402,	//0x1970		VoC_lw16_d(REG2,0x13cd)
0xFF3B7009,	//0x1972		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0x551FFF46,	//0x1974		VoC_bngt32_rd(Agc_Set_Config_L17,RL7,0x13c8)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xFA0B13C8,	//0x1976		VoC_shr32_ri(REG67,0x1,DEFAULT)	|	VoC_bngt32_rd(Agc_Set_Config_L17,RL7,0x13c8)(hi)
0xF90E60C3,	//0x1978		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x00011603,	//0x197a		VoC_and16_ri(REG3,0x1)
0x197F3183,	//0x197c		VoC_bez16_r(Agc_Set_Config_Mul32_0,REG3)
0xCE72E048,	//0x197e		VoC_macX_rr(REG6,REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG2,DEFAULT)
		//0x197f		Agc_Set_Config_Mul32_0
0x0A8CCE3A,	//0x1980		VoC_lw16i(RL6_LO,0x1000)(lo)	|	VoC_mac32_rr(REG7,REG2,DEFAULT)
0xFBFC1000,	//0x1982		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_lw16i(RL6_LO,0x1000)(hi)
0xFA6CC934,	//0x1984		VoC_shr32_ri(ACC0,0xd,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFFC065D0,	//0x1986		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Agc_Set_Config_L18)
		//0x1988		Agc_Set_Config_L17
0xF90E60C3,	//0x1988		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x00011603,	//0x198a		VoC_and16_ri(REG3,0x1)
0x198F3183,	//0x198c		VoC_bez16_r(Agc_Set_Config_Mul32_1,REG3)
0xCE72E048,	//0x198e		VoC_macX_rr(REG6,REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG2,DEFAULT)
		//0x198f		Agc_Set_Config_Mul32_1
0x0A8CCE3A,	//0x1990		VoC_lw16i(RL6_LO,0x2000)(lo)	|	VoC_mac32_rr(REG7,REG2,DEFAULT)
0xFBFC2000,	//0x1992		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_lw16i(RL6_LO,0x2000)(hi)
0xFA74C934,	//0x1994		VoC_shr32_ri(ACC0,0xe,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x1996		Agc_Set_Config_L18
0xE04B700A,	//0x1996		VoC_lw16i_short(ACC1_HI,0x4,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)
0x502CC92C,	//0x1998		VoC_bgt32_rd(Agc_Set_Config_L19,ACC0,0x13c2)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFF4413C2,	//0x199a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bgt32_rd(Agc_Set_Config_L19,ACC0,0x13c2)(hi)
0x19BE2B00,	//0x199c		VoC_jump_lg(Agc_Set_Config_L22)
		//0x199e		Agc_Set_Config_L19
0xFA747F23,	//0x199e		VoC_shr32_ri(ACC0,0xe,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x3FFF1606,	//0x19a0		VoC_and16_ri(REG6,0x3fff)
0xF6C76102,	//0x19a2		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_movreg16(REG2,ACC0_LO,DEFAULT)
0xF469786F,	//0x19a4		VoC_lw16i_short(FORMAT32,0xd,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xd,DEFAULT)
0x40000A83,	//0x19a6		VoC_lw16i(REG3,0x4000)
0x19B03187,	//0x19a8		VoC_bez16_r(Agc_Set_Config_L20,REG7)
0x0A23C2F4,	//0x19aa		VoC_multf32_rd(REG67,REG4,0x13d4)(lo)	|	VoC_sub16_rr(REG4,REG3,REG6,DEFAULT)
0xFFC013D4,	//0x19ac		VoC_NOP	|	VoC_multf32_rd(REG67,REG4,0x13d4)(hi)
0xE5C5C2F6,	//0x19ae		VoC_jump(Agc_Set_Config_L21)	|	VoC_sub16_rr(REG6,REG3,REG6,DEFAULT)
		//0x19b0		Agc_Set_Config_L20
0x13D50A33,	//0x19b0		VoC_multf32_rd(REG67,REG6,0x13d5)
0xFFC07FC0,	//0x19b2		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x19b4		Agc_Set_Config_L21
0xE0E37007,	//0x19b4		VoC_lw16i_short(REG3,0xe,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xC2D543D4,	//0x19b6		VoC_sub16_rr(REG5,REG3,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG7,REG2,DEFAULT)
0xE0097028,	//0x19b8		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0xFEAB7EA4,	//0x19ba		VoC_shr32_rr(REG67,REG5,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xFFC0491C,	//0x19bc		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
		//0x19be		Agc_Set_Config_L22
0x12580A81,	//0x19be		VoC_lw16i(REG1,0x1258)
0xF8FAE002,	//0x19c0		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xF4014051,	//0x19c2		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x5D8CFFC0,	//0x19c4		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
		//0x19c5		VoC_endloop1
0xDFA9DE00,	//0x19c6		VoC_pop16(RA,DEFAULT)	|	VoC_inc_p(REG0,IN_PARALLEL)
0xE580FFC0,	//0x19c8		VoC_return	|	VoC_NOP
		//0x19ca		Agc_Init
0x00000A84,	//0x19ca		VoC_lw16i(REG4,0x0)
0x08000A85,	//0x19cc		VoC_lw16i(REG5,0x800)
0xE0337F44,	//0x19ce		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xE0177006,	//0x19d0		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x12521582,	//0x19d2		VoC_sw32_d(REG45,0x1252)
0x12541584,	//0x19d4		VoC_sw32_d(ACC0,0x1254)
0x12561583,	//0x19d6		VoC_sw32_d(REG67,0x1256)
0x12981506,	//0x19d8		VoC_sw16_d(REG6,0x1298)
0x12B11503,	//0x19da		VoC_sw16_d(REG3,0x12b1)
0x12B01506,	//0x19dc		VoC_sw16_d(REG6,0x12b0)
0x12B21506,	//0x19de		VoC_sw16_d(REG6,0x12b2)
0x3C000A83,	//0x19e0		VoC_lw16i(REG3,0x3c00)
0x74000AC6,	//0x19e2		VoC_lw16i(REG6,0xf400)
0x12B61509,	//0x19e4		VoC_sw16_d(ACC0_HI,0x12b6)
0x12BA1509,	//0x19e6		VoC_sw16_d(ACC0_HI,0x12ba)
0x12B31503,	//0x19e8		VoC_sw16_d(REG3,0x12b3)
0x12B71503,	//0x19ea		VoC_sw16_d(REG3,0x12b7)
0x12B41583,	//0x19ec		VoC_sw32_d(REG67,0x12b4)
0x12B81583,	//0x19ee		VoC_sw32_d(REG67,0x12b8)
0x12A0180B,	//0x19f0		VoC_lw16i_set_inc(REG3,0x12a0,0x2)
0xDDDCE901,	//0x19f2		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x19f3		VoC_endloop0
0xFFC06580,	//0x19f4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x19f6		CII_div_mode32
0xFF475F46,	//0x19f6		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xE00D702C,	//0x19f8		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x19fa		CII_div_mode32_102
0x19FF362C,	//0x19fa		VoC_bgt32_rr(CII_div_mode32_101,ACC1,ACC0)
0xC9F74B2C,	//0x19fc		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDF06E5FC,	//0x19fe		VoC_pop32(RL6,DEFAULT)	|	VoC_jump(CII_div_mode32_102)
		//0x19ff		CII_div_mode32_101
0xFFC06580,	//0x1a00		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1a02		Coolsand_CLZU
0x001F0A82,	//0x1a02		VoC_lw16i(REG2,0x1f)
0x1A273306,	//0x1a04		VoC_bez32_r(CLZ_End,RL6)
0xFC867F37,	//0x1a06		VoC_shru32_ri(RL6,0x10,IN_PARALLEL)	|	VoC_movreg32(RL7,RL6,DEFAULT)
0xE1037022,	//0x1a08		VoC_lw16i_short(REG3,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x1A0E3346,	//0x1a0a		VoC_bnez32_r(CLZ_L0,RL6)
0xFD87409A,	//0x1a0c		VoC_shru32_ri(RL7,0xfffffff0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x1a0e		CLZ_L0
0x7CC6FF3E,	//0x1a0e		VoC_shru32_ri(RL6,0x18,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x3346E083,	//0x1a10		VoC_bnez32_r(CLZ_L1,RL6)(lo)	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0x409A1A15,	//0x1a12		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_bnez32_r(CLZ_L1,RL6)(hi)
0xFF3EFDC7,	//0x1a14		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)
		//0x1a15		CLZ_L1
0xE0437CE6,	//0x1a16		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0x1c,DEFAULT)
0x1A1C3346,	//0x1a18		VoC_bnez32_r(CLZ_L2,RL6)
0xFDE7409A,	//0x1a1a		VoC_shru32_ri(RL7,0xfffffffc,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x1a1c		CLZ_L2
0x7CF6FF3E,	//0x1a1c		VoC_shru32_ri(RL6,0x1e,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x3346E023,	//0x1a1e		VoC_bnez32_r(CLZ_L3,RL6)(lo)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
0x409A1A24,	//0x1a20		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_bnez32_r(CLZ_L3,RL6)(hi)
0xFFC0FDF7,	//0x1a22		VoC_NAD	|	VoC_shru32_ri(RL7,0xfffffffe,IN_PARALLEL)
		//0x1a24		CLZ_L3
0xE0037CFF,	//0x1a24		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru32_ri(RL7,0x1f,DEFAULT)
0xE580CA79,	//0x1a26		VoC_return	|	VoC_sub32_rr(REG23,REG23,RL7,DEFAULT)
		//0x1a27		CLZ_End
		//0x1a28		Coolsand_CLZS
0x00200A82,	//0x1a28		VoC_lw16i(REG2,0x20)
0x1A4D3306,	//0x1a2a		VoC_bez32_r(CLZS_End,RL6)
0xFC867F37,	//0x1a2c		VoC_shru32_ri(RL6,0x10,IN_PARALLEL)	|	VoC_movreg32(RL7,RL6,DEFAULT)
0xE1037002,	//0x1a2e		VoC_lw16i_short(REG3,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x1A343346,	//0x1a30		VoC_bnez32_r(CLZS_L0,RL6)
0xFD87409A,	//0x1a32		VoC_shru32_ri(RL7,0xfffffff0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x1a34		CLZS_L0
0x7CC6FF3E,	//0x1a34		VoC_shru32_ri(RL6,0x18,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x3346E083,	//0x1a36		VoC_bnez32_r(CLZS_L1,RL6)(lo)	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0x409A1A3B,	//0x1a38		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_bnez32_r(CLZS_L1,RL6)(hi)
0xFF3EFDC7,	//0x1a3a		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)
		//0x1a3b		CLZS_L1
0xE0437CE6,	//0x1a3c		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0x1c,DEFAULT)
0x1A423346,	//0x1a3e		VoC_bnez32_r(CLZS_L2,RL6)
0xFDE7409A,	//0x1a40		VoC_shru32_ri(RL7,0xfffffffc,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x1a42		CLZS_L2
0x7CF6FF3E,	//0x1a42		VoC_shru32_ri(RL6,0x1e,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x3346E023,	//0x1a44		VoC_bnez32_r(CLZS_L3,RL6)(lo)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
0x409A1A4A,	//0x1a46		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_bnez32_r(CLZS_L3,RL6)(hi)
0xFFC0FDF7,	//0x1a48		VoC_NAD	|	VoC_shru32_ri(RL7,0xfffffffe,IN_PARALLEL)
		//0x1a4a		CLZS_L3
0xE0037CFF,	//0x1a4a		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru32_ri(RL7,0x1f,DEFAULT)
0xE580CA79,	//0x1a4c		VoC_return	|	VoC_sub32_rr(REG23,REG23,RL7,DEFAULT)
		//0x1a4d		CLZS_End
		//0x1a4e		Div_SignedInt
0x7027DFE9,	//0x1a4e		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x7004FF47,	//0x1a50		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw32z(RL7,IN_PARALLEL)
0x33C4E005,	//0x1a52		VoC_bnltz32_r(ABS_0,ACC0)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x64BC1A57,	//0x1a54		VoC_xor16_rr(REG4,REG7,DEFAULT)	|	VoC_bnltz32_r(ABS_0,ACC0)(hi)
0xFF26CBE4,	//0x1a56		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_sub32_rr(ACC0,RL7,ACC0,IN_PARALLEL)
		//0x1a57		ABS_0
0x1A282B80,	//0x1a58		VoC_jal(Coolsand_CLZS)
0xFF474356,	//0x1a5a		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG2,DEFAULT)
0x1A6033C5,	//0x1a5c		VoC_bnltz32_r(ABS_1,ACC1)
0xCBED64BC,	//0x1a5e		VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)	|	VoC_xor16_rr(REG4,REG7,DEFAULT)
		//0x1a60		ABS_1
0x2B80FF2E,	//0x1a60		VoC_jal(Coolsand_CLZS)(lo)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xC3571A28,	//0x1a62		VoC_sub16_rr(REG7,REG5,REG2,DEFAULT)	|	VoC_jal(Coolsand_CLZS)(hi)
0xFEBD7EB4,	//0x1a64		VoC_shr32_rr(ACC1,REG7,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG6,DEFAULT)
0x702CFF47,	//0x1a66		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0x0A96E00D,	//0x1a68		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)
0xEBE90048,	//0x1a6a		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_lw16i(STATUS,0x48)(hi)
0x00440A96,	//0x1a6c		VoC_lw16i(STATUS,0x44)
0xFDFF4B29,	//0x1a6e		VoC_shru32_ri(RL7,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(REG23,ACC0,ACC1,DEFAULT)
0x1A743381,	//0x1a70		VoC_bltz32_r(LABLE_DIV_L0,REG23)
0xC9F77F0C,	//0x1a72		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG23,DEFAULT)
		//0x1a74		LABLE_DIV_L0
		//0x1a74		VoC_endloop0
0x0A96FDFC,	//0x1a74		VoC_lw16i(STATUS,0x8)(lo)	|	VoC_shru32_ri(ACC0,0xffffffff,DEFAULT)
0x43BA0008,	//0x1a76		VoC_sub16_rr(REG2,REG6,REG7,DEFAULT)	|	VoC_lw16i(STATUS,0x8)(hi)
0xC2D2E1E3,	//0x1a78		VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG3,0x1e,IN_PARALLEL)
0xFF467E97,	//0x1a7a		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_shr32_rr(RL7,REG2,DEFAULT)
0x1A7F3184,	//0x1a7c		VoC_bez16_r(ABS_2,REG4)
0xDFA9CBBF,	//0x1a7e		VoC_pop16(RA,DEFAULT)	|	VoC_sub32_rr(RL7,RL6,RL7,DEFAULT)
		//0x1a7f		ABS_2
0xE580FFC0,	//0x1a80		VoC_return	|	VoC_NOP
		//0x1a82		Agc_ProcessVad
0x701CDFE9,	//0x1a82		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x701EF405,	//0x1a84		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,IN_PARALLEL)
0x1400F407,	//0x1a86		VoC_lw16_d(REG0,0x12c9)(lo)	|	VoC_lw16i_short(WRAP3,0x0,IN_PARALLEL)
0x140712C9,	//0x1a88		VoC_lw16_d(REG7,0x12c8)(lo)	|	VoC_lw16_d(REG0,0x12c9)(hi)
0x140412C8,	//0x1a8a		VoC_lw16_d(REG4,0x133e)(lo)	|	VoC_lw16_d(REG7,0x12c8)(hi)
0x60E5133E,	//0x1a8c		VoC_movreg16(REG5,REG7,DEFAULT)	|	VoC_lw16_d(REG4,0x133e)(hi)
0x7F47E006,	//0x1a8e		VoC_lw32z(RL7,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x1500FE25,	//0x1a90		VoC_sw16_d(REG0,0x12da)(lo)	|	VoC_shr16_rr(REG5,REG4,IN_PARALLEL)
0x150512DA,	//0x1a92		VoC_sw16_d(REG5,0x12db)(lo)	|	VoC_sw16_d(REG0,0x12da)(hi)
0xFFC012DB,	//0x1a94		VoC_NAD	|	VoC_sw16_d(REG5,0x12db)(hi)
		//0x1a96		agc_processvad_subfr_loop_start
0x1AFA34BE,	//0x1a96		VoC_bngt16_rr(agc_processvad_subfr_loop_end,REG7,REG6)
0x12DB1405,	//0x1a98		VoC_lw16_d(REG5,0x12db)
0x00A00A84,	//0x1a9a		VoC_lw16i(REG4,0xa0)
0x35ACDF43,	//0x1a9c		VoC_bne16_rr(agc_processvad_nrSamples_ne_16,REG5,REG4)(lo)	|	VoC_push32(REG67,DEFAULT)
0x20041AB6,	//0x1a9e		VoC_lw16d_set_inc(REG0,0x12da,0x1)(lo)	|	VoC_bne16_rr(agc_processvad_nrSamples_ne_16,REG5,REG4)(hi)
0x180512DA,	//0x1aa0		VoC_lw16i_set_inc(REG1,0x12ce,0x1)(lo)	|	VoC_lw16d_set_inc(REG0,0x12da,0x1)(hi)
0x588912CE,	//0x1aa2		VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x12ce,0x1)(hi)
0x588BE025,	//0x1aa4		VoC_lw16inc_p(ACC1_HI,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0xFFC0E084,	//0x1aa6		VoC_NAD	|	VoC_lw16i_short(REG4,0x8,IN_PARALLEL)
0x1AB12C11,	//0x1aa8		VoC_loop_i(0x1,0x8)
0xFA857A84,	//0x1aaa		VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0xD887492C,	//0x1aac		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xD88B7A0C,	//0x1aae		VoC_lw16inc_p(ACC1_HI,REG0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xDC98E0E9,	//0x1ab0		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG7,DEFAULT)
		//0x1ab1		VoC_endloop1
0x1804C22D,	//0x1ab2		VoC_lw16i_set_inc(REG0,0x12ce,0x1)(lo)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0xE5C712CE,	//0x1ab4		VoC_jump(agc_processvad_nrSamples_else_end)	|	VoC_lw16i_set_inc(REG0,0x12ce,0x1)(hi)
		//0x1ab6		agc_processvad_nrSamples_ne_16
0x12DA1405,	//0x1ab6		VoC_lw16_d(REG5,0x12da)
0xF6A07104,	//0x1ab8		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0xF0044165,	//0x1aba		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
		//0x1abc		agc_processvad_nrSamples_else_end
0x12D61805,	//0x1abc		VoC_lw16i_set_inc(REG1,0x12d6,0x1)
0x12DA1505,	//0x1abe		VoC_sw16_d(REG5,0x12da)
0x1B862B80,	//0x1ac0		VoC_jal(VOC_Agc_DownsampleBy2)
0x12B0140D,	//0x1ac2		VoC_lw16_d(RL6_HI,0x12b0)
0x12D61804,	//0x1ac4		VoC_lw16i_set_inc(REG0,0x12d6,0x1)
0x0A81FA86,	//0x1ac6		VoC_lw16i(REG1,0x4b)(lo)	|	VoC_shr32_ri(RL6,0x10,DEFAULT)
0xFFC0004B,	//0x1ac8		VoC_NAD	|	VoC_lw16i(REG1,0x4b)(hi)
0x1AF12C08,	//0x1aca		VoC_loop_i(0x0,0x4)
0xFF445885,	//0x1acc		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xF5827A82,	//0x1ace		VoC_lw16i_short(FORMATX,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x10,DEFAULT)
0x4E79C8B3,	//0x1ad0		VoC_macX_rr(REG7,REG1,DEFAULT)	|	VoC_add32_rr(REG67,REG45,RL6,DEFAULT)
0x7007FF19,	//0x1ad2		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_movreg32(REG23,REG67,IN_PARALLEL)
0x7BC3F5C2,	//0x1ad4		VoC_shr32_ri(REG67,0xfffffff8,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0x4E79F401,	//0x1ad6		VoC_macX_rr(REG7,REG1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x4E31F946,	//0x1ad8		VoC_mac32_rr(REG6,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0x3281FF43,	//0x1ada		VoC_bgtz32_r(agc_processvad_abs_out,REG23)(lo)	|	VoC_lw32z(REG67,IN_PARALLEL)
0xCAC91ADE,	//0x1adc		VoC_sub32_rr(REG23,REG67,REG23,DEFAULT)	|	VoC_bgtz32_r(agc_processvad_abs_out,REG23)(hi)
		//0x1ade		agc_processvad_abs_out
0x13EE6021,	//0x1ade		VoC_blt32_rd(agc_processvad_out_not_saturation,REG23,0x13ee)
0x13EE1481,	//0x1ae0		VoC_lw32_d(REG23,0x13ee)
		//0x1ae2		agc_processvad_out_not_saturation
0xF5817A3C,	//0x1ae2		VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x7,DEFAULT)
0xFBC14B16,	//0x1ae4		VoC_shr32_ri(REG23,0xfffffff8,IN_PARALLEL)	|	VoC_sub32_rr(RL6,ACC0,REG45,DEFAULT)
0xFD867F44,	//0x1ae6		VoC_shru32_ri(RL6,0xfffffff0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFA8676FA,	//0x1ae8		VoC_shr32_ri(RL6,0x10,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xfffffff7,DEFAULT)
0xF9424E1B,	//0x1aea		VoC_shru16_ri(REG2,0x8,IN_PARALLEL)	|	VoC_mac32_rr(REG3,REG3,DEFAULT)
0xF4014E5A,	//0x1aec		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG2,DEFAULT)
0xFFC0CE12,	//0x1aee		VoC_NOP	|	VoC_mac32_rr(REG2,REG2,DEFAULT)
0xC9E7FA34,	//0x1af0		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x6,DEFAULT)
		//0x1af1		VoC_endloop0
0xDF037024,	//0x1af2		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x12B0150C,	//0x1af4		VoC_sw16_d(RL6_LO,0x12b0)
0x2B00C1A6,	//0x1af6		VoC_jump_lg(agc_processvad_subfr_loop_start)(lo)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xFFC01A96,	//0x1af8		VoC_NAD	|	VoC_jump_lg(agc_processvad_subfr_loop_start)(hi)
		//0x1afa		agc_processvad_subfr_loop_end
0x1C7E2B80,	//0x1afa		VoC_jal(VOC_Agc_MATH_CLZ)
0x1403F1E2,	//0x1afc		VoC_lw16_d(REG3,0x13c1)(lo)	|	VoC_lw16i_short(REG2,0xf,DEFAULT)
0xC28113C1,	//0x1afe		VoC_sub16_rr(REG1,REG2,REG0,DEFAULT)	|	VoC_lw16_d(REG3,0x13c1)(hi)
0xE01078A9,	//0x1b00		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffff5,DEFAULT)
0x12B13C83,	//0x1b02		VoC_bngt16_rd(agc_processvad_counter_nlt_kAvgDecayTime,REG3,0x12b1)
0x12B10700,	//0x1b04		VoC_add16_rd(REG0,REG0,0x12b1)
0x1500FFC0,	//0x1b06		VoC_sw16_d(REG0,0x12b1)(lo)	|	VoC_NOP
0xFFC012B1,	//0x1b08		VoC_NAD	|	VoC_sw16_d(REG0,0x12b1)(hi)
		//0x1b0a		agc_processvad_counter_nlt_kAvgDecayTime
0x12BB1404,	//0x1b0a		VoC_lw16_d(REG4,0x12bb)
0xF4017200,	//0x1b0c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x10,DEFAULT)
0xC2204C65,	//0x1b0e		VoC_sub16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC1,REG1,REG4,DEFAULT)
0x12B71403,	//0x1b10		VoC_lw16_d(REG3,0x12b7)
0x12CB1501,	//0x1b12		VoC_sw16_d(REG1,0x12cb)
0xF4027199,	//0x1b14		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xc,DEFAULT)
0xCE984C4C,	//0x1b16		VoC_macX_rr(REG3,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG1,REG1,DEFAULT)
0x1D0A2B80,	//0x1b18		VoC_jal(VOC_MUL_W32W16ResW32)
0xF6047A25,	//0x1b1a		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x4,DEFAULT)
0xFF256140,	//0x1b1c		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC1_LO,DEFAULT)
0x12B81484,	//0x1b1e		VoC_lw32_d(ACC0,0x12b8)
0x1D0A2B80,	//0x1b20		VoC_jal(VOC_MUL_W32W16ResW32)
0x12B71500,	//0x1b22		VoC_sw16_d(REG0,0x12b7)
0x7A25C965,	//0x1b24		VoC_shr32_ri(ACC1,0x4,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xCC04F401,	//0x1b26		VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x12B81585,	//0x1b28		VoC_sw32_d(ACC1,0x12b8)
0xCB64FBA5,	//0x1b2a		VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff4,DEFAULT)
0x1BFF2B80,	//0x1b2c		VoC_jal(VOC_Agc_WebRtcSpl_Sqrt)
0x12CB1409,	//0x1b2e		VoC_lw16_d(ACC0_HI,0x12cb)
0x12BA1504,	//0x1b30		VoC_sw16_d(REG4,0x12ba)
0x12B11404,	//0x1b32		VoC_lw16_d(REG4,0x12b1)
0xF4017A84,	//0x1b34		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x12B30E20,	//0x1b36		VoC_mac32_rd(REG4,0x12b3)
0xE0057026,	//0x1b38		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xFFC04134,	//0x1b3a		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x1CC82B80,	//0x1b3c		VoC_jal(VOC_WebRtcSpl_DivW32W16ResW16)
0x12B31500,	//0x1b3e		VoC_sw16_d(REG0,0x12b3)
0xE0057199,	//0x1b40		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xc,DEFAULT)
0x12CB1401,	//0x1b42		VoC_lw16_d(REG1,0x12cb)
0x12B11404,	//0x1b44		VoC_lw16_d(REG4,0x12b1)
0x1484CC4D,	//0x1b46		VoC_lw32_d(ACC0,0x12b4)(lo)	|	VoC_multf32_rr(ACC1,REG1,REG1,DEFAULT)
0xFFC012B4,	//0x1b48		VoC_NAD	|	VoC_lw32_d(ACC0,0x12b4)(hi)
0x1D0A2B80,	//0x1b4a		VoC_jal(VOC_MUL_W32W16ResW32)
0xE016492C,	//0x1b4c		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xE0054134,	//0x1b4e		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x1CAA2B80,	//0x1b50		VoC_jal(VOC_WebRtcSpl_DivW32W16)
0xF4017F3C,	//0x1b52		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0x12B31404,	//0x1b54		VoC_lw16_d(REG4,0x12b3)
0x1587FBA4,	//0x1b56		VoC_sw32_d(RL7,0x12b4)(lo)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xCEA412B4,	//0x1b58		VoC_msu32_rr(REG4,REG4,DEFAULT)	|	VoC_sw32_d(RL7,0x12b4)(hi)
0x1BFF2B80,	//0x1b5a		VoC_jal(VOC_Agc_WebRtcSpl_Sqrt)
0x12B61504,	//0x1b5c		VoC_sw16_d(REG4,0x12b6)
0x12CB1400,	//0x1b5e		VoC_lw16_d(REG0,0x12cb)
0xF4017061,	//0x1b60		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0x12B30780,	//0x1b62		VoC_sub16_rd(REG0,REG0,0x12b3)
0xE00578A1,	//0x1b64		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffff4,DEFAULT)
0xFFC04C44,	//0x1b66		VoC_NAD(IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG1,REG0,DEFAULT)
0x1CAA2B80,	//0x1b68		VoC_jal(VOC_WebRtcSpl_DivW32W16)
0xE00571A4,	//0x1b6a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xd,DEFAULT)
0xFD627719,	//0x1b6c		VoC_shru32_ri(REG45,0xffffffec,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,DEFAULT)
0x12B20A2C,	//0x1b6e		VoC_multf32_rd(ACC0,REG5,0x12b2)
0xE0077026,	//0x1b70		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF8AE7A54,	//0x1b72		VoC_shr16_ri(REG6,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xa,DEFAULT)
0xFF424938,	//0x1b74		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_add32_rr(REG01,ACC0,RL7,DEFAULT)
0xCA9A7A30,	//0x1b76		VoC_sub32_rr(REG45,REG45,REG67,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x6,DEFAULT)
0x1B7C3486,	//0x1b78		VoC_bngt16_rr(agc_processvad_logRatio_ngt_2048,REG0,REG6)
0xFFC07F18,	//0x1b7a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG01,REG67,DEFAULT)
		//0x1b7c		agc_processvad_logRatio_ngt_2048
0x1B803404,	//0x1b7c		VoC_bgt16_rr(agc_processvad_logRatio_gt_neg2048,REG0,REG4)
0xFFC0FF10,	//0x1b7e		VoC_NOP	|	VoC_movreg32(REG01,REG45,DEFAULT)
		//0x1b80		agc_processvad_logRatio_gt_neg2048
0x12B21500,	//0x1b80		VoC_sw16_d(REG0,0x12b2)
		//0x1b82		agc_processvad_exit
0xFFC0DFA9,	//0x1b82		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1b84		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1b86		VOC_Agc_DownsampleBy2
0xFF465FE9,	//0x1b86		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF80C5F47,	//0x1b88		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0x13DC180A,	//0x1b8a		VoC_lw16i_set_inc(REG2,0x13dc,0x2)
0x04000A8C,	//0x1b8c		VoC_lw16i(RL6_LO,0x400)
0x1BE52E20,	//0x1b8e		VoC_loop_r(0,REG4)
0xDFC27F47,	//0x1b90		VoC_push16(REG2,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0x59D2D88F,	//0x1b92		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16inc_p(RL7_HI,REG0,DEFAULT)
0x09BBFA37,	//0x1b94		VoC_sub32_rd(REG67,RL7,0x12a2)(lo)	|	VoC_shr32_ri(RL7,0x6,IN_PARALLEL)
0xFFC012A2,	//0x1b96		VoC_NAD	|	VoC_sub32_rd(REG67,RL7,0x12a2)(hi)
0x1BEA2B80,	//0x1b98		VoC_jal(MUL_ACCUM_FUN)
0x12A00923,	//0x1b9a		VoC_add32_rd(REG67,ACC0,0x12a0)
0x12A01587,	//0x1b9c		VoC_sw32_d(RL7,0x12a0)
0xFF1F59D2,	//0x1b9e		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x12A4099B,	//0x1ba0		VoC_sub32_rd(REG67,REG67,0x12a4)
0x1BEA2B80,	//0x1ba2		VoC_jal(MUL_ACCUM_FUN)
0x12A20923,	//0x1ba4		VoC_add32_rd(REG67,ACC0,0x12a2)
0x12A21587,	//0x1ba6		VoC_sw32_d(RL7,0x12a2)
0xFF1F59D2,	//0x1ba8		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x12A6099B,	//0x1baa		VoC_sub32_rd(REG67,REG67,0x12a6)
0x1BEA2B80,	//0x1bac		VoC_jal(MUL_ACCUM_FUN)
0x12A40923,	//0x1bae		VoC_add32_rd(REG67,ACC0,0x12a4)
0x12A41587,	//0x1bb0		VoC_sw32_d(RL7,0x12a4)
0x1583FF47,	//0x1bb2		VoC_sw32_d(REG67,0x12a6)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xD88F12A6,	//0x1bb4		VoC_lw16inc_p(RL7_HI,REG0,DEFAULT)	|	VoC_sw32_d(REG67,0x12a6)(hi)
0xFA3759D2,	//0x1bb6		VoC_shr32_ri(RL7,0x6,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x12AA09BB,	//0x1bb8		VoC_sub32_rd(REG67,RL7,0x12aa)
0x1BEA2B80,	//0x1bba		VoC_jal(MUL_ACCUM_FUN)
0x12A80923,	//0x1bbc		VoC_add32_rd(REG67,ACC0,0x12a8)
0x12A81587,	//0x1bbe		VoC_sw32_d(RL7,0x12a8)
0xFF1F59D2,	//0x1bc0		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x12AC099B,	//0x1bc2		VoC_sub32_rd(REG67,REG67,0x12ac)
0x1BEA2B80,	//0x1bc4		VoC_jal(MUL_ACCUM_FUN)
0x12AA0923,	//0x1bc6		VoC_add32_rd(REG67,ACC0,0x12aa)
0x12AA1587,	//0x1bc8		VoC_sw32_d(RL7,0x12aa)
0xFF1F59D2,	//0x1bca		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x12AE099B,	//0x1bcc		VoC_sub32_rd(REG67,REG67,0x12ae)
0x1BEA2B80,	//0x1bce		VoC_jal(MUL_ACCUM_FUN)
0x12AC0923,	//0x1bd0		VoC_add32_rd(REG67,ACC0,0x12ac)
0x12AC1587,	//0x1bd2		VoC_sw32_d(RL7,0x12ac)
0x12AE1583,	//0x1bd4		VoC_sw32_d(REG67,0x12ae)
0x12A6091B,	//0x1bd6		VoC_add32_rd(REG67,REG67,0x12a6)
0xDF8248F3,	//0x1bd8		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0x1484FA5B,	//0x1bda		VoC_lw32_d(ACC0,0x13ea)(lo)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
0x361C13EA,	//0x1bdc		VoC_bgt32_rr(SatW32ToW16_max_or_min,REG67,ACC0)(lo)	|	VoC_lw32_d(ACC0,0x13ea)(hi)
0x14841BE5,	//0x1bde		VoC_lw32_d(ACC0,0x13ec)(lo)	|	VoC_bgt32_rr(SatW32ToW16_max_or_min,REG67,ACC0)(hi)
0x362313EC,	//0x1be0		VoC_bgt32_rr(SatW32ToW16_max_or_min,ACC0,REG67)(lo)	|	VoC_lw32_d(ACC0,0x13ec)(hi)
0xFF1C1BE5,	//0x1be2		VoC_movreg32(ACC0,REG67,DEFAULT)	|	VoC_bgt32_rr(SatW32ToW16_max_or_min,ACC0,REG67)(hi)
0xDC98FFC0,	//0x1be4		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_NOP
		//0x1be5		SatW32ToW16_max_or_min
		//0x1be5		VoC_endloop0
0xDFA9DF07,	//0x1be6		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xE580FFC0,	//0x1be8		VoC_return	|	VoC_NOP
		//0x1bea		MUL_ACCUM_FUN
0xF5C27F44,	//0x1bea		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xF4017BC2,	//0x1bec		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xF9444E7D,	//0x1bee		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0xE0074E3C,	//0x1bf0		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
0xCE3DFBC3,	//0x1bf2		VoC_mac32_rr(REG7,REG5,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff8,DEFAULT)
0x60A4F946,	//0x1bf4		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0x7F44F685,	//0x1bf6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0xCE35FF25,	//0x1bf8		VoC_mac32_rr(REG6,REG5,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,IN_PARALLEL)
0xFFC0CF74,	//0x1bfa		VoC_NOP	|	VoC_bimacX_rr(REG67,REG45)
0xC92CFA84,	//0x1bfc		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0xDFE9E580,	//0x1bfe		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1bff		VOC_Agc_WebRtcSpl_Sqrt
0xFF227F45,	//0x1c00		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0x1C413304,	//0x1c02		VoC_bez32_r(webrtcspl_sqrt_return,ACC0)
0x1C083284,	//0x1c04		VoC_bgtz32_r(webrtcspl_sqrt_A_gtz,ACC0)
0xFFC04B64,	//0x1c06		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)
		//0x1c08		webrtcspl_sqrt_A_gtz
0x1C442B80,	//0x1c08		VoC_jal(VOC_WebRtcSpl_NormW32)
0x0A87F005,	//0x1c0a		VoC_lw16i(REG7,0x5a82)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x15005A82,	//0x1c0c		VoC_sw16_d(REG0,0x12cd)(lo)	|	VoC_lw16i(REG7,0x5a82)(hi)
0x150712CD,	//0x1c0e		VoC_sw16_d(REG7,0x12cc)(lo)	|	VoC_sw16_d(REG0,0x12cd)(hi)
0x434012CC,	//0x1c10		VoC_sub16_rr(REG0,REG5,REG0,DEFAULT)	|	VoC_sw16_d(REG7,0x12cc)(hi)
0x7F46E014,	//0x1c12		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x1485FEC4,	//0x1c14		VoC_lw32_d(ACC1,0x13e8)(lo)	|	VoC_shru32_rr(ACC0,REG0,IN_PARALLEL)
0x092413E8,	//0x1c16		VoC_add32_rd(ACC0,ACC0,0x13ea)(lo)	|	VoC_lw32_d(ACC1,0x13e8)(hi)
0x36AC13EA,	//0x1c18		VoC_bngt32_rr(webrtcspl_sqrt_A_EQ_MAX,ACC1,ACC0)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x13ea)(hi)
0xC9151C1C,	//0x1c1a		VoC_add32_rr(ACC1,ACC0,REG45,DEFAULT)	|	VoC_bngt32_rr(webrtcspl_sqrt_A_EQ_MAX,ACC1,ACC0)(hi)
		//0x1c1c		webrtcspl_sqrt_A_EQ_MAX
0xFD85FA85,	//0x1c1c		VoC_shru32_ri(ACC1,0xfffffff0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x10,DEFAULT)
0x1C223285,	//0x1c1e		VoC_bgtz32_r(webrtcspl_sqrt_ABS_A,ACC1)
0xFFC04BAD,	//0x1c20		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)
		//0x1c22		webrtcspl_sqrt_ABS_A
0x1C582B80,	//0x1c22		VoC_jal(VOC_WebRtcSpl_SqrtLocal)
0xE0117F2A,	//0x1c24		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0x12CD1400,	//0x1c26		VoC_lw16_d(REG0,0x12cd)
0xFA826408,	//0x1c28		VoC_shr32_ri(REG45,0x10,IN_PARALLEL)	|	VoC_and16_rr(REG0,REG1,DEFAULT)
0x1C3A31C0,	//0x1c2a		VoC_bnez16_r(webrtcspl_sqrt_sh_odd,REG0)
0xF6877F44,	//0x1c2c		VoC_movreg16(REG7,REG4,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xF5F97028,	//0x1c2e		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0x12CC0A3A,	//0x1c30		VoC_multf32_rd(REG45,REG7,0x12cc)
0x0A86FB8C,	//0x1c32		VoC_lw16i(REG6,0x7fff)(lo)	|	VoC_shr32_ri(ACC0,0xfffffff1,DEFAULT)
0xC8A27FFF,	//0x1c34		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_lw16i(REG6,0x7fff)(hi)
0xE0046435,	//0x1c36		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0xFFC07A7A,	//0x1c38		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
		//0x1c3a		webrtcspl_sqrt_sh_odd
0xE00577E0,	//0x1c3a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0xffffffff,DEFAULT)
0x12CD1401,	//0x1c3c		VoC_lw16_d(REG1,0x12cd)
0xF8096404,	//0x1c3e		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xDFA9FE8A,	//0x1c40		VoC_pop16(RA,DEFAULT)	|	VoC_shr32_rr(REG45,REG1,DEFAULT)
		//0x1c41		webrtcspl_sqrt_return
0xE580FFC0,	//0x1c42		VoC_return	|	VoC_NOP
		//0x1c44		VOC_WebRtcSpl_NormW32
0xDF44DFE9,	//0x1c44		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xE0007F27,	//0x1c46		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xEFF777E6,	//0x1c48		VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0x1C533304,	//0x1c4a		VoC_bez32_r(webrtcspl_normw32_return,ACC0)
0x1C503284,	//0x1c4c		VoC_bgtz32_r(webrtcspl_normw32_positive_a,ACC0)
0xFFC0655F,	//0x1c4e		VoC_NAD(IN_PARALLEL)	|	VoC_xor32_rr(RL7,REG67,DEFAULT)
		//0x1c50		webrtcspl_normw32_positive_a
0x1C7E2B80,	//0x1c50		VoC_jal(VOC_Agc_MATH_CLZ)
0xDF04C030,	//0x1c52		VoC_pop32(ACC0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
		//0x1c53		webrtcspl_normw32_return
0xFFC0DFA9,	//0x1c54		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1c56		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1c58		VOC_WebRtcSpl_SqrtLocal
0x40000A8F,	//0x1c58		VoC_lw16i(RL7_HI,0x4000)
0xFA0D700E,	//0x1c5a		VoC_shr32_ri(ACC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0xF5F94B7D,	//0x1c5c		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xC97D7F2B,	//0x1c5e		VoC_add32_rr(ACC1,ACC1,RL7,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC1,DEFAULT)
0xC97D7A83,	//0x1c60		VoC_add32_rr(ACC1,ACC1,RL7,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFF464DB2,	//0x1c62		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_multf32_rr(REG45,REG6,REG6,DEFAULT)
0xCB94FFC0,	//0x1c64		VoC_sub32_rr(ACC0,RL6,REG45,DEFAULT)	|	VoC_NOP
0xFF217A0C,	//0x1c66		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFA814965,	//0x1c68		VoC_shr32_ri(REG23,0x10,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x0AC3CC94,	//0x1c6a		VoC_lw16i(REG3,0xffffb000)(lo)	|	VoC_multf32_rr(ACC0,REG2,REG2,DEFAULT)
0xE1223000,	//0x1c6c		VoC_movreg16(REG2,ACC0_HI,DEFAULT)	|	VoC_lw16i(REG3,0xffffb000)(hi)
0xCD96CCD4,	//0x1c6e		VoC_multf32_rr(RL6,REG6,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG2,DEFAULT)
0x70000A83,	//0x1c70		VoC_lw16i(REG3,0x7000)
0xF7A24965,	//0x1c72		VoC_movreg16(REG2,RL6_HI,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x4DAECCD4,	//0x1c74		VoC_multf32_rr(RL6,REG6,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG2,DEFAULT)
0x4965E003,	//0x1c76		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x7A0EE012,	//0x1c78		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0xC975FB89,	//0x1c7a		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_shr32_ri(REG23,0xfffffff1,IN_PARALLEL)
0xE580C94D,	//0x1c7c		VoC_return	|	VoC_add32_rr(ACC1,ACC1,REG23,DEFAULT)
		//0x1c7e		VOC_Agc_MATH_CLZ
0xFF3C7F46,	//0x1c7e		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xEF0177ED,	//0x1c80		VoC_lw16i_short(REG1,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0xffffffff,DEFAULT)
0xF62064F4,	//0x1c82		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0x1C883304,	//0x1c84		VoC_bez32_r(math_clz_zero_eq_16,ACC0)
0xFFC07000,	//0x1c86		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x1c88		math_clz_zero_eq_16
0xFF3C7DC6,	//0x1c88		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xfffffff8,DEFAULT)
0xF8097EC4,	//0x1c8a		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG0,DEFAULT)
0x3344E4F4,	//0x1c8c		VoC_bnez32_r(math_clz_zero_no_add_8,ACC0)(lo)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0xC0081C90,	//0x1c8e		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bnez32_r(math_clz_zero_no_add_8,ACC0)(hi)
		//0x1c90		math_clz_zero_no_add_8
0xFF3C7DE6,	//0x1c90		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xfffffffc,DEFAULT)
0xF8097EC4,	//0x1c92		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG0,DEFAULT)
0x3344E4F4,	//0x1c94		VoC_bnez32_r(math_clz_zero_no_add_4,ACC0)(lo)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0xC0081C98,	//0x1c96		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bnez32_r(math_clz_zero_no_add_4,ACC0)(hi)
		//0x1c98		math_clz_zero_no_add_4
0xFF3C7DF6,	//0x1c98		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xfffffffe,DEFAULT)
0xF8097EC4,	//0x1c9a		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG0,DEFAULT)
0x3344E4F4,	//0x1c9c		VoC_bnez32_r(math_clz_zero_no_add_2,ACC0)(lo)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0xC0081CA0,	//0x1c9e		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bnez32_r(math_clz_zero_no_add_2,ACC0)(hi)
		//0x1ca0		math_clz_zero_no_add_2
0xFF3C7DFE,	//0x1ca0		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xffffffff,DEFAULT)
0xF8097EC4,	//0x1ca2		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG0,DEFAULT)
0x3344E4F4,	//0x1ca4		VoC_bnez32_r(math_clz_zero_no_add_1,ACC0)(lo)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0xC0081CA8,	//0x1ca6		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bnez32_r(math_clz_zero_no_add_1,ACC0)(hi)
		//0x1ca8		math_clz_zero_no_add_1
0xE580DE40,	//0x1ca8		VoC_return	|	VoC_abs16_r(REG0,DEFAULT)
		//0x1caa		VOC_WebRtcSpl_DivW32W16
0x7F41DFE9,	//0x1caa		VoC_lw32z(REG23,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A8FEFFE,	//0x1cac		VoC_lw16i(RL7_HI,0x7fff)(lo)	|	VoC_lw16i_short(RL7_LO,0xffffffff,IN_PARALLEL)
0x31847FFF,	//0x1cae		VoC_bez16_r(divw32w16_return,REG4)(lo)	|	VoC_lw16i(RL7_HI,0x7fff)(hi)
0x70061CC5,	//0x1cb0		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bez16_r(divw32w16_return,REG4)(hi)
0x33C4E017,	//0x1cb2		VoC_bnltz32_r(divw32w16_num_positive,ACC0)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x64BE1CB8,	//0x1cb4		VoC_xor16_rr(REG6,REG7,DEFAULT)	|	VoC_bnltz32_r(divw32w16_num_positive,ACC0)(hi)
0xFFC0CA64,	//0x1cb6		VoC_NAD	|	VoC_sub32_rr(ACC0,REG23,ACC0,IN_PARALLEL)
		//0x1cb8		divw32w16_num_positive
0x1CBC3104,	//0x1cb8		VoC_bgtz16_r(divw32w16_den_positive,REG4)
0xC2A464BE,	//0x1cba		VoC_sub16_rr(REG4,REG2,REG4,IN_PARALLEL)	|	VoC_xor16_rr(REG6,REG7,DEFAULT)
		//0x1cbc		divw32w16_den_positive
0xFFC05FC6,	//0x1cbc		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x1CEC2B80,	//0x1cbe		VoC_jal(VOC_MATH_POSDIV32_S)
0xDF867F44,	//0x1cc0		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x1CC53186,	//0x1cc2		VoC_bez16_r(divw32w16_return,REG6)
0xDFA9CB3F,	//0x1cc4		VoC_pop16(RA,DEFAULT)	|	VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)
		//0x1cc5		divw32w16_return
0xE580FFC0,	//0x1cc6		VoC_return	|	VoC_NOP
		//0x1cc8		VOC_WebRtcSpl_DivW32W16ResW16
0xFF415FE9,	//0x1cc8		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x7FFF0A80,	//0x1cca		VoC_lw16i(REG0,0x7fff)
0x1CE83184,	//0x1ccc		VoC_bez16_r(divw32w16resw16_return,REG4)
0xE0177006,	//0x1cce		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1CD433C4,	//0x1cd0		VoC_bnltz32_r(divw32w16resw16_num_positive,ACC0)
0xCA6464BE,	//0x1cd2		VoC_sub32_rr(ACC0,REG23,ACC0,IN_PARALLEL)	|	VoC_xor16_rr(REG6,REG7,DEFAULT)
		//0x1cd4		divw32w16resw16_num_positive
0x1CD83104,	//0x1cd4		VoC_bgtz16_r(divw32w16resw16_den_positive,REG4)
0xC2A464BE,	//0x1cd6		VoC_sub16_rr(REG4,REG2,REG4,IN_PARALLEL)	|	VoC_xor16_rr(REG6,REG7,DEFAULT)
		//0x1cd8		divw32w16resw16_den_positive
0x2B80DFC6,	//0x1cd8		VoC_jal(VOC_MATH_POSDIV32_S)(lo)	|	VoC_push16(REG6,DEFAULT)
0xF0071CEC,	//0x1cda		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jal(VOC_MATH_POSDIV32_S)(hi)
0x7FFF0A86,	//0x1cdc		VoC_lw16i(REG6,0x7fff)
0x1CE236BB,	//0x1cde		VoC_bngt32_rr(divw32w16resw16_res_saturation,RL7,REG67)
0xFFC07F1F,	//0x1ce0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(RL7,REG67,DEFAULT)
		//0x1ce2		divw32w16resw16_res_saturation
0xDF867F44,	//0x1ce2		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x1CE73186,	//0x1ce4		VoC_bez16_r(divw32w16resw16_res_positive,REG6)
0xE1C0CB3F,	//0x1ce6		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)
		//0x1ce7		divw32w16resw16_res_positive
		//0x1ce8		divw32w16resw16_return
0xFFC0DFA9,	//0x1ce8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1cea		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1cec		VOC_MATH_POSDIV32_S
0xE01C700D,	//0x1cec		VoC_lw16i_short(RL6_LO,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x3716FF27,	//0x1cee		VoC_be32_rr(agc_posdiv32_end,REG45,RL6)(lo)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xFFC01D07,	//0x1cf0		VoC_NAD	|	VoC_be32_rr(agc_posdiv32_end,REG45,RL6)(hi)
		//0x1cf2		agc_posdiv32_while1_start
0x1CF936A2,	//0x1cf2		VoC_bngt32_rr(agc_posdiv32_while1_end,ACC0,REG45)
0x1CF93382,	//0x1cf4		VoC_bltz32_r(agc_posdiv32_while1_end,REG45)
0xFDFE7DFA,	//0x1cf6		VoC_shru32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xffffffff,DEFAULT)
0xFF47E5FA,	//0x1cf8		VoC_lw32z(RL7,DEFAULT)	|	VoC_jump(agc_posdiv32_while1_start)
		//0x1cf9		agc_posdiv32_while1_end
0x1CFE3282,	//0x1cfa		VoC_bgtz32_r(agc_posdiv32_while2_start,REG45)
0xFC0E7C0A,	//0x1cfc		VoC_shru32_ri(RL6,0x1,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0x1,DEFAULT)
		//0x1cfe		agc_posdiv32_while2_start
0x1D0732C6,	//0x1cfe		VoC_bngtz32_r(agc_posdiv32_end,RL6)
0x1D043614,	//0x1d00		VoC_bgt32_rr(agc_posdiv32_dividend_ngt_divisor,REG45,ACC0)
0xC9F74B14,	//0x1d02		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,REG45,DEFAULT)
		//0x1d04		agc_posdiv32_dividend_ngt_divisor
0xFC0E7C0A,	//0x1d04		VoC_shru32_ri(RL6,0x1,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0x1,DEFAULT)
0xFFC0E5F8,	//0x1d06		VoC_NOP	|	VoC_jump(agc_posdiv32_while2_start)
		//0x1d07		agc_posdiv32_end
0xFFC06580,	//0x1d08		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1d0a		VOC_MUL_W32W16ResW32
0xFF23761A,	//0x1d0a		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xfffffff0,DEFAULT)
0xCE7CFF44,	//0x1d0c		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xE0077719,	//0x1d0e		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,DEFAULT)
0xCE3CFDC3,	//0x1d10		VoC_mac32_rr(REG7,REG4,DEFAULT)	|	VoC_shru32_ri(REG67,0xfffffff8,DEFAULT)
0xF4017946,	//0x1d12		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0xFFC0CE34,	//0x1d14		VoC_NOP	|	VoC_mac32_rr(REG6,REG4,DEFAULT)
0xDFE9E580,	//0x1d16		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1d17		Agc_ProcessDigital
0xF01CF000,	//0x1d18		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xF01EF01D,	//0x1d1a		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0x1540F01F,	//0x1d1c		VoC_sw16_d(REG0,0xffc1)(lo)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x0A967FC1,	//0x1d1e		VoC_lw16i(STATUS,0x3f)(lo)	|	VoC_sw16_d(REG0,0xffc1)(hi)
0xF01B003F,	//0x1d20		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i(STATUS,0x3f)(hi)
0x1400F019,	//0x1d22		VoC_lw16_d(REG0,0x12ca)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x442812CA,	//0x1d24		VoC_bne16_rd(Agc_ProcessDigital_L0,REG0,0x13fa)(lo)	|	VoC_lw16_d(REG0,0x12ca)(hi)
0x710413FA,	//0x1d26		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_bne16_rd(Agc_ProcessDigital_L0,REG0,0x13fa)(hi)
0xE5C9EFD5,	//0x1d28		VoC_jump(Agc_ProcessDigital_L2)	|	VoC_lw16i_short(REG5,0xfffffffd,IN_PARALLEL)
		//0x1d2a		Agc_ProcessDigital_L0
0x13FB4428,	//0x1d2a		VoC_bne16_rd(Agc_ProcessDigital_L1,REG0,0x13fb)
0xEFC57204,	//0x1d2c		VoC_lw16i_short(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x10,DEFAULT)
0xF7E0E5C4,	//0x1d2e		VoC_lw16i_short(REG0,0xffffffff,DEFAULT)	|	VoC_jump(Agc_ProcessDigital_L2)
		//0x1d2f		Agc_ProcessDigital_L1
0x1F432B00,	//0x1d30		VoC_jump_lg(Agc_ProcessDigital_L28)
		//0x1d32		Agc_ProcessDigital_L2
0x133D1504,	//0x1d32		VoC_sw16_d(REG4,0x133d)
0x133E1505,	//0x1d34		VoC_sw16_d(REG5,0x133e)
0x1A822B80,	//0x1d36		VoC_jal(Agc_ProcessVad)
0x133D1404,	//0x1d38		VoC_lw16_d(REG4,0x133d)
0x133E1405,	//0x1d3a		VoC_lw16_d(REG5,0x133e)
0x12B21403,	//0x1d3c		VoC_lw16_d(REG3,0x12b2)
0x12993C33,	//0x1d3e		VoC_bngt16_rd(Agc_ProcessDigital_L3,REG3,0x1299)
0x129B1406,	//0x1d40		VoC_lw16_d(REG6,0x129b)
0xFFC065CE,	//0x1d42		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Agc_ProcessDigital_L5)
		//0x1d44		Agc_ProcessDigital_L3
0x129A4C23,	//0x1d44		VoC_bnlt16_rd(Agc_ProcessDigital_L4,REG3,0x129a)
0xE5C9F006,	//0x1d46		VoC_jump(Agc_ProcessDigital_L5)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x1d48		Agc_ProcessDigital_L4
0x129A0B19,	//0x1d48		VoC_sub16_dr(REG1,0x129a,REG3)
0x129B1402,	//0x1d4a		VoC_lw16_d(REG2,0x129b)
0xE0077159,	//0x1d4c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xa,DEFAULT)
0xCC53C3D2,	//0x1d4e		VoC_multf32_rr(REG67,REG1,REG2,DEFAULT)	|	VoC_sub16_rr(REG2,REG7,REG2,DEFAULT)
		//0x1d50		Agc_ProcessDigital_L5
0x12B61400,	//0x1d50		VoC_lw16_d(REG0,0x12b6)
0x0FA00A83,	//0x1d52		VoC_lw16i(REG3,0xfa0)
0x1FA00A82,	//0x1d54		VoC_lw16i(REG2,0x1fa0)
0x1D5A3498,	//0x1d56		VoC_bngt16_rr(Agc_ProcessDigital_L6,REG3,REG0)
0xFFC07006,	//0x1d58		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x1d5a		Agc_ProcessDigital_L6
0x1D623490,	//0x1d5a		VoC_bngt16_rr(Agc_ProcessDigital_L7,REG2,REG0)
0xF4614218,	//0x1d5c		VoC_lw16i_short(FORMAT32,0xc,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0xFFC0CC33,	//0x1d5e		VoC_NOP	|	VoC_multf32_rr(REG67,REG0,REG6,DEFAULT)
0xFFC07FC0,	//0x1d60		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x1d62		Agc_ProcessDigital_L7
0x133F1506,	//0x1d62		VoC_sw16_d(REG6,0x133f)
0x2007F019,	//0x1d64		VoC_lw16d_set_inc(REG3,0x12c9,0x1)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x140712C9,	//0x1d66		VoC_lw16_d(REG7,0x12c8)(lo)	|	VoC_lw16d_set_inc(REG3,0x12c9,0x1)(hi)
0x180A12C8,	//0x1d68		VoC_lw16i_set_inc(REG2,0x12e7,0x2)(lo)	|	VoC_lw16_d(REG7,0x12c8)(hi)
0x2E3912E7,	//0x1d6a		VoC_loop_r(1,REG7)(lo)	|	VoC_lw16i_set_inc(REG2,0x12e7,0x2)(hi)
0xFF471D76,	//0x1d6c		VoC_lw32z(RL7,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0xD8B7E707,	//0x1d6e		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xFFC0CDFC,	//0x1d70		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0x1D7536A7,	//0x1d72		VoC_bngt32_rr(Agc_ProcessDigital_L8,ACC0,RL7)
0xFFC0FF27,	//0x1d74		VoC_NOP	|	VoC_movreg32(RL7,ACC0,DEFAULT)
		//0x1d75		Agc_ProcessDigital_L8
		//0x1d75		VoC_endloop0
		//0x1d76		VoC_endloop1
0x1808DDD7,	//0x1d76		VoC_lw16i_set_inc(REG0,0x130f,0x2)(lo)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x1487130F,	//0x1d78		VoC_lw32_d(RL7,0x1256)(lo)	|	VoC_lw16i_set_inc(REG0,0x130f,0x2)(hi)
0x14071256,	//0x1d7a		VoC_lw16_d(REG7,0x12c8)(lo)	|	VoC_lw32_d(RL7,0x1256)(hi)
0x180912C8,	//0x1d7c		VoC_lw16i_set_inc(REG1,0x12e7,0x2)(lo)	|	VoC_lw16_d(REG7,0x12c8)(hi)
0x5DC712E7,	//0x1d7e		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x12e7,0x2)(hi)
0xFFC0F5FA,	//0x1d80		VoC_NAD	|	VoC_lw16i_short(FORMATX,0xffffffff,IN_PARALLEL)
0x1DE92E39,	//0x1d82		VoC_loop_r(1,REG7)
0x12541481,	//0x1d84		VoC_lw32_d(REG23,0x1254)
0x129D1404,	//0x1d86		VoC_lw16_d(REG4,0x129d)
0xF4017F0C,	//0x1d88		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG23,DEFAULT)
0xF90A6047,	//0x1d8a		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG7,REG2,DEFAULT)
0x1607FF45,	//0x1d8c		VoC_and16_ri(REG7,0x1)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x31870001,	//0x1d8e		VoC_bez16_r(Agc_ProcessDigital_MulU0,REG7)(lo)	|	VoC_and16_ri(REG7,0x1)(hi)
0xE08A1D96,	//0x1d90		VoC_movreg16(ACC1_LO,REG4,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulU0,REG7)(hi)
0x1D963244,	//0x1d92		VoC_bnltz16_r(Agc_ProcessDigital_MulU0,REG4)
0xFFC077EB,	//0x1d94		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0xffffffff,DEFAULT)
		//0x1d96		Agc_ProcessDigital_MulU0
0xCE944E1C,	//0x1d96		VoC_macX_rr(REG2,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG3,REG4,DEFAULT)
0xFA85D9CF,	//0x1d98		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0x36BCC92C,	//0x1d9a		VoC_bngt32_rr(Agc_ProcessDigital_L9,RL7,ACC0)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFF3C1DA0,	//0x1d9c		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_bngt32_rr(Agc_ProcessDigital_L9,RL7,ACC0)(hi)
0xFFC07FC0,	//0x1d9e		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x1da0		Agc_ProcessDigital_L9
0x12541584,	//0x1da0		VoC_sw32_d(ACC0,0x1254)
0x12521484,	//0x1da2		VoC_lw32_d(ACC0,0x1252)
0x1DAA36BC,	//0x1da4		VoC_bngt32_rr(Agc_ProcessDigital_L10,RL7,ACC0)
0x129C1404,	//0x1da6		VoC_lw16_d(REG4,0x129c)
0xE5C5CBE1,	//0x1da8		VoC_jump(Agc_ProcessDigital_L11)	|	VoC_sub32_rr(REG23,RL7,ACC0,DEFAULT)
		//0x1daa		Agc_ProcessDigital_L10
0x133F1404,	//0x1daa		VoC_lw16_d(REG4,0x133f)
0xFFC07F21,	//0x1dac		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
		//0x1dae		Agc_ProcessDigital_L11
0xF90A6047,	//0x1dae		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG7,REG2,DEFAULT)
0x00011607,	//0x1db0		VoC_and16_ri(REG7,0x1)
0x3187FF45,	//0x1db2		VoC_bez16_r(Agc_ProcessDigital_MulU1,REG7)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0xE08A1DBA,	//0x1db4		VoC_movreg16(ACC1_LO,REG4,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulU1,REG7)(hi)
0x1DBA3244,	//0x1db6		VoC_bnltz16_r(Agc_ProcessDigital_MulU1,REG4)
0xFFC077EB,	//0x1db8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0xffffffff,DEFAULT)
		//0x1dba		Agc_ProcessDigital_MulU1
0xCE944E1C,	//0x1dba		VoC_macX_rr(REG2,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG3,REG4,DEFAULT)
0xFA85FFC0,	//0x1dbc		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_NOP
0xFFC0C92C,	//0x1dbe		VoC_NOP	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x12521584,	//0x1dc0		VoC_sw32_d(ACC0,0x1252)
0x12546424,	//0x1dc2		VoC_bnlt32_rd(Agc_ProcessDigital_L12,ACC0,0x1254)
0x12541484,	//0x1dc4		VoC_lw32_d(ACC0,0x1254)
		//0x1dc6		Agc_ProcessDigital_L12
0xFFC07F26,	//0x1dc6		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x1A022B80,	//0x1dc8		VoC_jal(Coolsand_CLZU)
0xFF227003,	//0x1dca		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x0A87C2D3,	//0x1dcc		VoC_lw16i(REG7,0x7fff)(lo)	|	VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)
0xFEDA7FFF,	//0x1dce		VoC_shru32_rr(REG45,REG3,DEFAULT)	|	VoC_lw16i(REG7,0x7fff)(hi)
0xF647643D,	//0x1dd0		VoC_movreg16(REG7,REG2,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
0x12581FBB,	//0x1dd2		VoC_lw16i_set_inc(REG3,0x1258,0xfffffffe)
0xC0FBF8FF,	//0x1dd4		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xD9DFFA9A,	//0x1dd6		VoC_lw32inc_p(RL7,REG3,DEFAULT)	|	VoC_shr32_ri(REG45,0x13,DEFAULT)
0xFF44599E,	//0x1dd8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32_p(RL6,REG3,DEFAULT)
0xF5814BBB,	//0x1dda		VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)	|	VoC_sub32_rr(REG67,RL6,RL7,DEFAULT)
0xF90E60C5,	//0x1ddc		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x00011605,	//0x1dde		VoC_and16_ri(REG5,0x1)
0x1DE33185,	//0x1de0		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L0,REG5)
0xCE74E088,	//0x1de2		VoC_macX_rr(REG6,REG4,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
		//0x1de3		Agc_ProcessDigital_MulS32S16_L0
0xFFC0CE3C,	//0x1de4		VoC_NOP	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
0xC9E7FA64,	//0x1de6		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xDDC7FFC0,	//0x1de8		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_NOP
		//0x1de9		VoC_endloop1
0xF81C78BA,	//0x1dea		VoC_shr16_ri(REG4,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffff7,DEFAULT)
0x1482C2A7,	//0x1dec		VoC_lw32_d(REG45,0x1254)(lo)	|	VoC_sub16_rr(REG7,REG2,REG4,DEFAULT)
0xFF161254,	//0x1dee		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_lw32_d(REG45,0x1254)(hi)
0x1A022B80,	//0x1df0		VoC_jal(Coolsand_CLZU)
0x0A86F003,	//0x1df2		VoC_lw16i(REG6,0x7fff)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xC2D37FFF,	//0x1df4		VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i(REG6,0x7fff)(hi)
0x6435FEDA,	//0x1df6		VoC_and16_rr(REG5,REG6,DEFAULT)	|	VoC_shru32_rr(REG45,REG3,DEFAULT)
0xFAB2F8BA,	//0x1df8		VoC_shr32_ri(REG45,0x16,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffff7,IN_PARALLEL)
0xF40142A2,	//0x1dfa		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)
0x12BA1403,	//0x1dfc		VoC_lw16_d(REG3,0x12ba)
0x129F1404,	//0x1dfe		VoC_lw16_d(REG4,0x129f)
0xC0FB40A4,	//0x1e00		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG4,DEFAULT)
0xE002431C,	//0x1e02		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)
0x1E0E3204,	//0x1e04		VoC_bltz16_r(Agc_ProcessDigital_L13,REG4)
0x12981402,	//0x1e06		VoC_lw16_d(REG2,0x1298)
0xCC9CF0E3,	//0x1e08		VoC_multf32_rr(ACC0,REG2,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x7,DEFAULT)
0xC8A1F005,	//0x1e0a		VoC_add32_rr(REG23,REG45,ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFFC0FA19,	//0x1e0c		VoC_NOP	|	VoC_shr32_ri(REG23,0x3,DEFAULT)
		//0x1e0e		Agc_ProcessDigital_L13
0x12981502,	//0x1e0e		VoC_sw16_d(REG2,0x1298)
0x1E4A3142,	//0x1e10		VoC_bngtz16_r(Agc_ProcessDigital_L14,REG2)
0x129E1406,	//0x1e12		VoC_lw16_d(REG6,0x129e)
0xF5817007,	//0x1e14		VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x1E1A34B2,	//0x1e16		VoC_bngt16_rr(Agc_ProcessDigital_L15,REG6,REG2)
0xF827C397,	//0x1e18		VoC_shr16_ri(REG7,0x4,DEFAULT)	|	VoC_sub16_rr(REG7,REG6,REG2,DEFAULT)
		//0x1e1a		Agc_ProcessDigital_L15
0xE0157826,	//0x1e1a		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x4,DEFAULT)
0x130F1808,	//0x1e1c		VoC_lw16i_set_inc(REG0,0x130f,0x2)
0xF8CD43F7,	//0x1e1e		VoC_shr16_ri(REG5,0xfffffff9,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0x12C81406,	//0x1e20		VoC_lw16_d(REG6,0x12c8)
0xC1EF5E00,	//0x1e22		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
0x12581487,	//0x1e24		VoC_lw32_d(RL7,0x1258)
0x1E472E31,	//0x1e26		VoC_loop_r(1,REG6)
0xF5FA5986,	//0x1e28		VoC_lw16i_short(FORMATX,0xffffffff,IN_PARALLEL)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0xCBB97F44,	//0x1e2a		VoC_sub32_rr(REG23,RL6,RL7,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x13F260B1,	//0x1e2c		VoC_blt32_rd(Agc_ProcessDigital_L16,REG23,0x13f2)
0x6045FA39,	//0x1e2e		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_shr32_ri(REG23,0x7,DEFAULT)
0x1605F90A,	//0x1e30		VoC_and16_ri(REG5,0x1)(lo)	|	VoC_shru16_ri(REG2,0x1,IN_PARALLEL)
0x31850001,	//0x1e32		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L1,REG5)(lo)	|	VoC_and16_ri(REG5,0x1)(hi)
0xE0E81E36,	//0x1e34		VoC_movreg16(ACC0_LO,REG7,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L1,REG5)(hi)
		//0x1e36		Agc_ProcessDigital_MulS32S16_L1
0xCE1FCE57,	//0x1e36		VoC_mac32_rr(REG3,REG7,DEFAULT)	|	VoC_macX_rr(REG2,REG7,DEFAULT)
0xFFC065CD,	//0x1e38		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Agc_ProcessDigital_L17)
		//0x1e3a		Agc_ProcessDigital_L16
0xF90A6045,	//0x1e3a		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG2,DEFAULT)
0x00011605,	//0x1e3c		VoC_and16_ri(REG5,0x1)
0x1E413185,	//0x1e3e		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L2,REG5)
0xCE57E0E8,	//0x1e40		VoC_macX_rr(REG2,REG7,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG7,DEFAULT)
		//0x1e41		Agc_ProcessDigital_MulS32S16_L2
0xFFC0CE1F,	//0x1e42		VoC_NOP	|	VoC_mac32_rr(REG3,REG7,DEFAULT)
0xC9E6FA3C,	//0x1e44		VoC_add32_rr(RL6,RL7,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x7,DEFAULT)
		//0x1e45		Agc_ProcessDigital_L17
0xDDC6FFC0,	//0x1e46		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_NOP
		//0x1e47		VoC_endloop1
0xFFC07FC0,	//0x1e48		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x1e4a		Agc_ProcessDigital_L14
0x130F1808,	//0x1e4a		VoC_lw16i_set_inc(REG0,0x130f,0x2)
0x12E71809,	//0x1e4c		VoC_lw16i_set_inc(REG1,0x12e7,0x2)
0x12C81407,	//0x1e4e		VoC_lw16_d(REG7,0x12c8)
0xFFC05E00,	//0x1e50		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
0x1EB62E39,	//0x1e52		VoC_loop_r(1,REG7)
0xD9857142,	//0x1e54		VoC_lw32_p(ACC1,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0xa,DEFAULT)
0x13F6543D,	//0x1e56		VoC_bngt32_rd(Agc_ProcessDigital_L18,ACC1,0x13f6)
0xE1067F2E,	//0x1e58		VoC_lw16i_short(REG6,0x10,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0x1A282B80,	//0x1e5a		VoC_jal(Coolsand_CLZS)
0xFF2AC392,	//0x1e5c		VoC_movreg32(REG45,ACC1,DEFAULT)	|	VoC_sub16_rr(REG2,REG6,REG2,DEFAULT)
		//0x1e5d		Agc_ProcessDigital_L18
0xFF447E92,	//0x1e5e		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
0x13F00912,	//0x1e60		VoC_add32_rd(REG45,REG45,0x13f0)
0xF5F16083,	//0x1e62		VoC_lw16i_short(FORMAT32,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x00011603,	//0x1e64		VoC_and16_ri(REG3,0x1)
0x1E6C3183,	//0x1e66		VoC_bez16_r(Agc_ProcessDigital_MulU16U16_L0,REG3)
0x09A4C894,	//0x1e68		VoC_sub32_rd(ACC0,ACC0,0x13f0)(lo)	|	VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)
0xFFC013F0,	//0x1e6a		VoC_NAD	|	VoC_sub32_rd(ACC0,ACC0,0x13f0)(hi)
		//0x1e6c		Agc_ProcessDigital_MulU16U16_L0
0xE0B5790C,	//0x1e6c		VoC_lw16i_short(REG5,0xb,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xC2AD4E24,	//0x1e6e		VoC_sub16_rr(REG5,REG2,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG4,DEFAULT)
0xF8FD700F,	//0x1e70		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0x7FFF0A8E,	//0x1e72		VoC_lw16i(RL7_LO,0x7fff)
0xD9CEFEAF,	//0x1e74		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_shr32_rr(RL7,REG5,DEFAULT)
0x13391587,	//0x1e76		VoC_sw32_d(RL7,0x1339)
0xFF2F7A66,	//0x1e78		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xc,DEFAULT)
0x13F00936,	//0x1e7a		VoC_add32_rd(RL6,RL6,0x13f0)
		//0x1e7c		Agc_ProcessDigital_L22
0xF7037F22,	//0x1e7c		VoC_movreg16(REG3,ACC0_LO,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xFF337A6A,	//0x1e7e		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xd,DEFAULT)
0x1FFF1603,	//0x1e80		VoC_and16_ri(REG3,0x1fff)
0x7F44F619,	//0x1e82		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)
0x60C5FF45,	//0x1e84		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x1605F90E,	//0x1e86		VoC_and16_ri(REG5,0x1)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x31850001,	//0x1e88		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L3,REG5)(lo)	|	VoC_and16_ri(REG5,0x1)(hi)
0x60881E8E,	//0x1e8a		VoC_movreg16(ACC0_LO,REG4,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L3,REG5)(hi)
0xFFC0F66A,	//0x1e8c		VoC_NAD	|	VoC_movreg16(ACC1_LO,REG3,IN_PARALLEL)
		//0x1e8e		Agc_ProcessDigital_MulS32S16_L3
0xCEB34E74,	//0x1e8e		VoC_macX_rr(REG6,REG3,IN_PARALLEL)	|	VoC_macX_rr(REG6,REG4,DEFAULT)
0xCE3B4E3C,	//0x1e90		VoC_mac32_rr(REG7,REG3,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
0x13391482,	//0x1e92		VoC_lw32_d(REG45,0x1339)
0xC92CFA6D,	//0x1e94		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xd,DEFAULT)
0x1EB636A2,	//0x1e96		VoC_bngt32_rr(Agc_ProcessDigital_L19,ACC0,REG45)
0x543BFF3B,	//0x1e98		VoC_bngt32_rd(Agc_ProcessDigital_L20,REG67,0x13f4)(lo)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0xFA4313F4,	//0x1e9a		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_bngt32_rd(Agc_ProcessDigital_L20,REG67,0x13f4)(hi)
0xFBFB4BDF,	//0x1e9c		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(RL7,RL7,REG67,DEFAULT)
0xE5C5CBDF,	//0x1e9e		VoC_jump(Agc_ProcessDigital_L21)	|	VoC_sub32_rr(RL7,RL7,REG67,DEFAULT)
		//0x1ea0		Agc_ProcessDigital_L20
0x4AFBFBC3,	//0x1ea0		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff8,DEFAULT)
0xCAFFFBFF,	//0x1ea2		VoC_sub32_rr(RL7,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xffffffff,IN_PARALLEL)
		//0x1ea4		Agc_ProcessDigital_L21
0x7E92FF3A,	//0x1ea4		VoC_shr32_rr(REG45,REG2,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x0912FF44,	//0x1ea6		VoC_add32_rd(REG45,REG45,0x13f0)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x608313F0,	//0x1ea8		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x13f0)(hi)
0x1603F5F1,	//0x1eaa		VoC_and16_ri(REG3,0x1)(lo)	|	VoC_lw16i_short(FORMAT32,0xfffffffe,IN_PARALLEL)
0x31830001,	//0x1eac		VoC_bez16_r(Agc_ProcessDigital_MulU16U16_L1,REG3)(lo)	|	VoC_and16_ri(REG3,0x1)(hi)
0xC8941EB2,	//0x1eae		VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulU16U16_L1,REG3)(hi)
0x13F009A4,	//0x1eb0		VoC_sub32_rd(ACC0,ACC0,0x13f0)
		//0x1eb2		Agc_ProcessDigital_MulU16U16_L1
0xCE24F90C,	//0x1eb2		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x1E7C2B00,	//0x1eb4		VoC_jump_lg(Agc_ProcessDigital_L22)
		//0x1eb6		Agc_ProcessDigital_L19
		//0x1eb6		VoC_endloop1
0x1407DDC7,	//0x1eb6		VoC_lw16_d(REG7,0x12c8)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xF02612C8,	//0x1eb8		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16_d(REG7,0x12c8)(hi)
0x1ECE34BE,	//0x1eba		VoC_bngt16_rr(Agc_ProcessDigital_L23,REG7,REG6)
0x1808C3F5,	//0x1ebc		VoC_lw16i_set_inc(REG0,0x130f,0x2)(lo)	|	VoC_sub16_rr(REG5,REG7,REG6,DEFAULT)
0xFFC0130F,	//0x1ebe		VoC_NOP	|	VoC_lw16i_set_inc(REG0,0x130f,0x2)(hi)
0x6001DE00,	//0x1ec0		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xD9C6F009,	//0x1ec2		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xD9C7E746,	//0x1ec4		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0x1ECA36B7,	//0x1ec6		VoC_bngt32_rr(Agc_ProcessDigital_L24,RL6,RL7)
0xFFC05D8F,	//0x1ec8		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(RL7,REG1,DEFAULT)
		//0x1eca		Agc_ProcessDigital_L24
		//0x1eca		VoC_endloop0
0xDE087F3E,	//0x1eca		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0xFFC07FC0,	//0x1ecc		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x1ece		Agc_ProcessDigital_L23
0x130F1808,	//0x1ece		VoC_lw16i_set_inc(REG0,0x130f,0x2)
0xC039F8FF,	//0x1ed0		VoC_add16_rr(REG1,REG0,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xD98DFFC0,	//0x1ed2		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_NOP
0x1585D9C6,	//0x1ed4		VoC_sw32_d(ACC1,0x1256)(lo)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0x59871256,	//0x1ed6		VoC_lw32_p(RL7,REG0,DEFAULT)	|	VoC_sw32_d(ACC1,0x1256)(hi)
0x1402EFC3,	//0x1ed8		VoC_lw16_d(REG2,0x133e)(lo)	|	VoC_lw16i_short(REG3,0xfffffffc,IN_PARALLEL)
0x4BF7133E,	//0x1eda		VoC_sub32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_lw16_d(REG2,0x133e)(hi)
0x7E97C2D2,	//0x1edc		VoC_shr32_rr(RL7,REG2,DEFAULT)	|	VoC_sub16_rr(REG2,REG3,REG2,IN_PARALLEL)
0x1407FBE6,	//0x1ede		VoC_lw16_d(REG7,0x133d)(lo)	|	VoC_shr32_ri(RL6,0xfffffffc,IN_PARALLEL)
0x2004133D,	//0x1ee0		VoC_lw16d_set_inc(REG0,0x12c9,0x1)(lo)	|	VoC_lw16_d(REG7,0x133d)(hi)
0xF61912C9,	//0x1ee2		VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)	|	VoC_lw16d_set_inc(REG0,0x12c9,0x1)(hi)
0x1F152E39,	//0x1ee4		VoC_loop_r(1,REG7)
0x13F80932,	//0x1ee6		VoC_add32_rd(REG45,RL6,0x13f8)
0xD8067A3A,	//0x1ee8		VoC_lw16_p(REG6,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xF90C6083,	//0x1eea		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x1603FF44,	//0x1eec		VoC_and16_ri(REG3,0x1)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x31830001,	//0x1eee		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L4,REG3)(lo)	|	VoC_and16_ri(REG3,0x1)(hi)
0xE0C81EF5,	//0x1ef0		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L4,REG3)(hi)
0x1EF53246,	//0x1ef2		VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L4,REG6)
0xCE66F7E9,	//0x1ef4		VoC_macX_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)
		//0x1ef5		Agc_ProcessDigital_MulS32S16_L4
0xFFC0CE2E,	//0x1ef6		VoC_NOP	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0x3C29E121,	//0x1ef8		VoC_bngt16_rd(Agc_ProcessDigital_L25,REG1,0x13fc)(lo)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0x0A8213FC,	//0x1efa		VoC_lw16i(REG2,0x7fff)(lo)	|	VoC_bngt16_rd(Agc_ProcessDigital_L25,REG1,0x13fc)(hi)
0xE5D77FFF,	//0x1efc		VoC_jump(Agc_ProcessDigital_L27)	|	VoC_lw16i(REG2,0x7fff)(hi)
		//0x1efe		Agc_ProcessDigital_L25
0x13FD4C29,	//0x1efe		VoC_bnlt16_rd(Agc_ProcessDigital_L26,REG1,0x13fd)
0x00000AC2,	//0x1f00		VoC_lw16i(REG2,0x8000)
0xFF32E5D2,	//0x1f02		VoC_movreg32(REG45,RL6,DEFAULT)	|	VoC_jump(Agc_ProcessDigital_L27)
		//0x1f03		Agc_ProcessDigital_L26
0xFF447A22,	//0x1f04		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x4,DEFAULT)
0xF90C6083,	//0x1f06		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x00011603,	//0x1f08		VoC_and16_ri(REG3,0x1)
0x1F103183,	//0x1f0a		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L5,REG3)
0x3246E0C8,	//0x1f0c		VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L5,REG6)(lo)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xF7E91F10,	//0x1f0e		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L5,REG6)(hi)
		//0x1f10		Agc_ProcessDigital_MulS32S16_L5
0xCE2ECE66,	//0x1f10		VoC_mac32_rr(REG5,REG6,DEFAULT)	|	VoC_macX_rr(REG4,REG6,DEFAULT)
0xE122FFC0,	//0x1f12		VoC_movreg16(REG2,ACC0_HI,DEFAULT)	|	VoC_NOP
		//0x1f14		Agc_ProcessDigital_L27
0xDC82C9BE,	//0x1f14		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
		//0x1f15		VoC_endloop1
0x12C81405,	//0x1f16		VoC_lw16_d(REG5,0x12c8)
0x34ACF024,	//0x1f18		VoC_bngt16_rr(Agc_ProcessDigital_L28,REG5,REG4)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC3651F43,	//0x1f1a		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_bngt16_rr(Agc_ProcessDigital_L28,REG5,REG4)(hi)
0x130F1809,	//0x1f1c		VoC_lw16i_set_inc(REG1,0x130f,0x2)
0xDE08FFC0,	//0x1f1e		VoC_inc_p(REG1,DEFAULT)	|	VoC_NOP
0xD9CEFFC0,	//0x1f20		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_NOP
0x1F412E29,	//0x1f22		VoC_loop_r(1,REG5)
0xEFC359CF,	//0x1f24		VoC_lw16i_short(REG3,0xfffffffc,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0x1406CBF5,	//0x1f26		VoC_lw16_d(REG6,0x133e)(lo)	|	VoC_sub32_rr(ACC1,RL7,RL6,DEFAULT)
0xC2F3133E,	//0x1f28		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x133e)(hi)
0xFBE67E9D,	//0x1f2a		VoC_shr32_ri(RL6,0xfffffffc,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xE7D3FFC0,	//0x1f2c		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0xFF325806,	//0x1f2e		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0xFF447A22,	//0x1f30		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x4,DEFAULT)
0xF90C6083,	//0x1f32		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x00011603,	//0x1f34		VoC_and16_ri(REG3,0x1)
0x1F3C3183,	//0x1f36		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L6,REG3)
0x3246E0C8,	//0x1f38		VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L6,REG6)(lo)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xF7E91F3C,	//0x1f3a		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L6,REG6)(hi)
		//0x1f3c		Agc_ProcessDigital_MulS32S16_L6
0xCE2ECE66,	//0x1f3c		VoC_mac32_rr(REG5,REG6,DEFAULT)	|	VoC_macX_rr(REG4,REG6,DEFAULT)
0xFFC0C9AE,	//0x1f3e		VoC_NOP	|	VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)
		//0x1f40		VoC_endloop0
0xFF3EDC89,	//0x1f40		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x1f41		VoC_endloop1
0xDFA9FFC0,	//0x1f42		VoC_pop16(RA,DEFAULT)	|	VoC_NOP
		//0x1f43		Agc_ProcessDigital_L28
0xE580FFC0,	//0x1f44		VoC_return	|	VoC_NOP
		//0x1f46		Rda_ProcessWebRtcAgc
0xFFC05FE9,	//0x1f46		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x1D172B80,	//0x1f48		VoC_jal(Agc_ProcessDigital)
0x12C91400,	//0x1f4a		VoC_lw16_d(REG0,0x12c9)
0x00500A81,	//0x1f4c		VoC_lw16i(REG1,0x50)
0xFFC0C008,	//0x1f4e		VoC_NOP	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0x12C91500,	//0x1f50		VoC_sw16_d(REG0,0x12c9)
0x1D172B80,	//0x1f52		VoC_jal(Agc_ProcessDigital)
0xFFC0DFA9,	//0x1f54		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xD834E580,	//0x1f56		VoC_lw16_p(REG4,REG3,DEFAULT)	|	VoC_return
		//0x1f57		Coolsand_NonClipDigitalGain
0xFF075F41,	//0x1f58		VoC_movreg32(RL7,REG01,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x19191504,	//0x1f5a		VoC_sw16_d(REG4,0x1919)
0x00A00A87,	//0x1f5c		VoC_lw16i(REG7,0xa0)
0xF00B407B,	//0x1f5e		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG1,REG7,DEFAULT)
0x1F652CA0,	//0x1f60		VoC_loop_i(0x0,0x50)
0xD9C3D9D2,	//0x1f62		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xDDDBDDCA,	//0x1f64		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x1f65		VoC_endloop0
0xF7E17F43,	//0x1f66		VoC_movreg16(REG1,RL7_HI,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x013F0A85,	//0x1f68		VoC_lw16i(REG5,0x13f)
0xE0147031,	//0x1f6a		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x11B21804,	//0x1f6c		VoC_lw16i_set_inc(REG0,0x11b2,0x1)
		//0x1f6e		Coolsand_NonClipDigitalGain_L0
0xD813D892,	//0x1f6e		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0x1F7C3202,	//0x1f70		VoC_bltz16_r(Coolsand_NonClipDigitalGain_L1,REG2)
0x1F7C3243,	//0x1f72		VoC_bnltz16_r(Coolsand_NonClipDigitalGain_L1,REG3)
0xC1E75C86,	//0x1f74		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x00A00A82,	//0x1f76		VoC_lw16i(REG2,0xa0)
0x1F893496,	//0x1f78		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L3,REG2,REG6)
0xFFC065CC,	//0x1f7a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_NonClipDigitalGain_L2)
		//0x1f7c		Coolsand_NonClipDigitalGain_L1
0x1F863102,	//0x1f7c		VoC_bgtz16_r(Coolsand_NonClipDigitalGain_L2,REG2)
0x1F863143,	//0x1f7e		VoC_bngtz16_r(Coolsand_NonClipDigitalGain_L2,REG3)
0xC1E75C86,	//0x1f80		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x00A00A82,	//0x1f82		VoC_lw16i(REG2,0xa0)
0x1F893496,	//0x1f84		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L3,REG2,REG6)
		//0x1f86		Coolsand_NonClipDigitalGain_L2
0x342EC1A6,	//0x1f86		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L0,REG5,REG6)(lo)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF0421F6E,	//0x1f88		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L0,REG5,REG6)(hi)
		//0x1f89		Coolsand_NonClipDigitalGain_L3
0x20023417,	//0x1f8a		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_End,REG2,REG7)
0x7031F030,	//0x1f8c		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x7F38E013,	//0x1f8e		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x1806C3DF,	//0x1f90		VoC_lw16i_set_inc(REG2,0x11b2,0x1)(lo)	|	VoC_sub16_rr(REG7,REG7,REG3,IN_PARALLEL)
0x401811B2,	//0x1f92		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x11b2,0x1)(hi)
0xFF06C059,	//0x1f94		VoC_movreg32(RL6,REG01,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0xFFC07006,	//0x1f96		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x1f98		Coolsand_NonClipDigitalGain_LoopStart
0x20023537,	//0x1f98		VoC_be16_rr(Coolsand_NonClipDigitalGain_LoopEnd,REG6,REG7)
0xD8A3DF43,	//0x1f9a		VoC_lw16inc_p(REG3,REG2,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xC018389C,	//0x1f9c		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_sub16_pr(REG4,REG2,REG3,DEFAULT)
0xFF434059,	//0x1f9e		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x2E20E023,	//0x1fa0		VoC_loop_r(0,REG4)(lo)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xD8951FAB,	//0x1fa2		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0x1FA83245,	//0x1fa4		VoC_bnltz16_r(Coolsand_NonClipDigitalGain_L5,REG5)
0xFFC043AD,	//0x1fa6		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x1fa8		Coolsand_NonClipDigitalGain_L5
0x1FAB34AF,	//0x1fa8		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L6,REG5,REG7)
0xFFC0E0A7,	//0x1faa		VoC_NOP	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x1fab		Coolsand_NonClipDigitalGain_L6
		//0x1fab		VoC_endloop0
0x3D2FE061,	//0x1fac		VoC_bngt16_rd(Coolsand_NonClipDigitalGain_L7,REG7,0x1afd)(lo)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x70251AFD,	//0x1fae		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bngt16_rd(Coolsand_NonClipDigitalGain_L7,REG7,0x1afd)(hi)
0x7698FF44,	//0x1fb0		VoC_lw16i_short(FORMAT16,0xfffffff4,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x0A89FA83,	//0x1fb2		VoC_lw16i(ACC0_HI,0x7530)(lo)	|	VoC_shr32_ri(REG67,0x10,IN_PARALLEL)
0x7A647530,	//0x1fb4		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_lw16i(ACC0_HI,0x7530)(hi)
0xFFC0E003,	//0x1fb6		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x1FBE2DFE,	//0x1fb8		VoC_loop_i(0x0,0xff)
0xC0EB4B1C,	//0x1fba		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)
0x1FE2361C,	//0x1fbc		VoC_bgt32_rr(Coolsand_NonClipDigitalGain_L8,REG67,ACC0)
		//0x1fbe		VoC_endloop0
0x2B00FFC0,	//0x1fbe		VoC_jump_lg(Coolsand_NonClipDigitalGain_L8)(lo)	|	VoC_NAD
0xFFC01FE2,	//0x1fc0		VoC_NAD	|	VoC_jump_lg(Coolsand_NonClipDigitalGain_L8)(hi)
		//0x1fc2		Coolsand_NonClipDigitalGain_L7
0x40F21405,	//0x1fc2		VoC_lw16_d(REG5,0x40f2)
0x34BDFFC0,	//0x1fc4		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L10,REG7,REG5)(lo)	|	VoC_NOP
0x0A851FEC,	//0x1fc6		VoC_lw16i(REG5,0x0)(lo)	|	VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L10,REG7,REG5)(hi)
0xF6980000,	//0x1fc8		VoC_lw16i_short(FORMAT16,0xfffffff4,DEFAULT)	|	VoC_lw16i(REG5,0x0)(hi)
0x1AFC1403,	//0x1fca		VoC_lw16_d(REG3,0x1afc)
0x1AFC6C16,	//0x1fcc		VoC_bez16_d(Coolsand_NonClipDigitalGain_L8,0x1afc)
0x1FDA343D,	//0x1fce		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L9,REG7,REG5)
0x19191407,	//0x1fd0		VoC_lw16_d(REG7,0x1919)
0x63491403,	//0x1fd2		VoC_lw16_d(REG3,0x6349)
0x1FE234BB,	//0x1fd4		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L8,REG7,REG3)
0xC3DBF023,	//0x1fd6		VoC_sub16_rr(REG3,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xFFC065CA,	//0x1fd8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_NonClipDigitalGain_L8)
		//0x1fda		Coolsand_NonClipDigitalGain_L9
0x19191407,	//0x1fda		VoC_lw16_d(REG7,0x1919)
0x1AFC1403,	//0x1fdc		VoC_lw16_d(REG3,0x1afc)
0x1FE2349F,	//0x1fde		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L8,REG3,REG7)
0xC1DBF043,	//0x1fe0		VoC_add16_rr(REG3,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
		//0x1fe2		Coolsand_NonClipDigitalGain_L8
0x1FE72E20,	//0x1fe2		VoC_loop_r(0,REG4)
0xFFC08CCF,	//0x1fe4		VoC_NOP	|	VoC_multf16_rp(REG7,REG3,REG1,DEFAULT)
0xDC97FFC0,	//0x1fe6		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
		//0x1fe7		VoC_endloop0
0x19191503,	//0x1fe8		VoC_sw16_d(REG3,0x1919)
0xFFC065D0,	//0x1fea		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_NonClipDigitalGain_L12)
		//0x1fec		Coolsand_NonClipDigitalGain_L10
0x40F31405,	//0x1fec		VoC_lw16_d(REG5,0x40f3)
0x34BDFFC0,	//0x1fee		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L11,REG7,REG5)(lo)	|	VoC_NOP
0xFFC01FF4,	//0x1ff0		VoC_NOP	|	VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L11,REG7,REG5)(hi)
0xFFC065C8,	//0x1ff2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_NonClipDigitalGain_L12)
		//0x1ff4		Coolsand_NonClipDigitalGain_L11
0x1FF92E20,	//0x1ff4		VoC_loop_r(0,REG4)
0xF80FD817,	//0x1ff6		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
0xDC97FFC0,	//0x1ff8		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
		//0x1ff9		VoC_endloop0
		//0x1ffa		Coolsand_NonClipDigitalGain_L12
0xE0105F03,	//0x1ffa		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xC186FFC0,	//0x1ffc		VoC_add16_rr(REG6,REG6,REG0,DEFAULT)	|	VoC_NOP
0x2B00FF30,	//0x1ffe		VoC_jump_lg(Coolsand_NonClipDigitalGain_LoopStart)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0xFFC01F98,	//0x2000		VoC_NAD	|	VoC_jump_lg(Coolsand_NonClipDigitalGain_LoopStart)(hi)
		//0x2002		Coolsand_NonClipDigitalGain_LoopEnd
		//0x2002		Coolsand_NonClipDigitalGain_End
0xF0085F01,	//0x2002		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x19191404,	//0x2004		VoC_lw16_d(REG4,0x1919)
0xF0097F38,	//0x2006		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xF00A5C34,	//0x2008		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
0x2CA0D9CA,	//0x200a		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xD9CA200E,	//0x200c		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x200e		VoC_endloop0
0x2CA0DDC2,	//0x200e		VoC_loop_i(0x0,0x50)(lo)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xD9CA2012,	//0x2010		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x2012		VoC_endloop0
0xE580DDD2,	//0x2012		VoC_return	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
