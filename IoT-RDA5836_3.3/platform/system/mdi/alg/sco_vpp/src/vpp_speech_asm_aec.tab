		//0x05d0		VoC_code_section_1
		//0x05d0		Coolsand_AEC
0xDFE9F000,	//0x05d0		VoC_push16(RA,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x223A1500,	//0x05d2		VoC_sw16_d(REG0,0x223a)
0x06512B80,	//0x05d4		VoC_jal(Coolsand_AECReset)
0x43551402,	//0x05d6		VoC_lw16_d(REG2,0x4355)
0x01700A80,	//0x05d8		VoC_lw16i(REG0,0x170)
0x42881482,	//0x05da		VoC_lw32_d(REG45,0x4288)
0x05E23502,	//0x05dc		VoC_be16_rr(Coolsand_AEC_Begin,REG0,REG2)
0x01400A89,	//0x05de		VoC_lw16i(ACC0_HI,0x140)
0xC8A2FA84,	//0x05e0		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
		//0x05e2		Coolsand_AEC_Begin
0x3FFF1645,	//0x05e2		VoC_and16_ri(REG5,0xbfff)
0x0A83F80A,	//0x05e4		VoC_lw16i(REG3,0x50)(lo)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFFC00050,	//0x05e6		VoC_NAD	|	VoC_lw16i(REG3,0x50)(hi)
0x01EA2B80,	//0x05e8		VoC_jal(Rda_RunDma)
0x41FC1404,	//0x05ea		VoC_lw16_d(REG4,0x41fc)
0x061A3184,	//0x05ec		VoC_bez16_r(Coolsand_AEC_NOT_DELAY_SPK,REG4)
0x43552004,	//0x05ee		VoC_lw16d_set_inc(REG0,0x4355,0x1)
0x41281805,	//0x05f0		VoC_lw16i_set_inc(REG1,0x4128,0x1)
0x00A00A85,	//0x05f2		VoC_lw16i(REG5,0xa0)
0x00010A87,	//0x05f4		VoC_lw16i(REG7,0x1)
0xC032C366,	//0x05f6		VoC_add16_rr(REG2,REG0,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG4,DEFAULT)
0x2E20F032,	//0x05f8		VoC_loop_r(0,REG4)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xD8A805FD,	//0x05fa		VoC_lw16inc_p(ACC0_LO,REG2,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0xDC98FFC0,	//0x05fc		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_NOP
		//0x05fd		VoC_endloop0
0x42BAC031,	//0x05fe		VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG6,DEFAULT)
0x77F2C279,	//0x0600		VoC_lw16i_short(INC2,0xffffffff,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x2E30F3FD,	//0x0602		VoC_loop_r(0,REG6)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0xD8980607,	//0x0604		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_loop_r(0,REG6)(hi)
0xDCA8FFC0,	//0x0606		VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)	|	VoC_NOP
		//0x0607		VoC_endloop0
0x40F61805,	//0x0608		VoC_lw16i_set_inc(REG1,0x40f6,0x1)
0x2E20F031,	//0x060a		VoC_loop_r(0,REG4)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xD898060F,	//0x060c		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0xDC88FFC0,	//0x060e		VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_NOP
		//0x060f		VoC_endloop0
0x40F61805,	//0x0610		VoC_lw16i_set_inc(REG1,0x40f6,0x1)
0x41281806,	//0x0612		VoC_lw16i_set_inc(REG2,0x4128,0x1)
0x06182E20,	//0x0614		VoC_loop_r(0,REG4)
0xFFC0D8A8,	//0x0616		VoC_NOP	|	VoC_lw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x0618		VoC_endloop0
0xFFC05C98,	//0x0618		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x061a		Coolsand_AEC_NOT_DELAY_SPK
0x00100A83,	//0x061a		VoC_lw16i(REG3,0x10)
0x7FFF0A84,	//0x061c		VoC_lw16i(REG4,0x7fff)
0x6C09F205,	//0x061e		VoC_bez16_d(Coolsand_AEC_L1,0x42c5)(lo)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x140342C5,	//0x0620		VoC_lw16_d(REG3,0x634a)(lo)	|	VoC_bez16_d(Coolsand_AEC_L1,0x42c5)(hi)
0x1404634A,	//0x0622		VoC_lw16_d(REG4,0x634b)(lo)	|	VoC_lw16_d(REG3,0x634a)(hi)
0x1405634B,	//0x0624		VoC_lw16_d(REG5,0x634a)(lo)	|	VoC_lw16_d(REG4,0x634b)(hi)
0xFFC0634A,	//0x0626		VoC_NAD	|	VoC_lw16_d(REG5,0x634a)(hi)
		//0x0628		Coolsand_AEC_L1
0x43552008,	//0x0628		VoC_lw16d_set_inc(REG0,0x4355,0x2)
0x191A1809,	//0x062a		VoC_lw16i_set_inc(REG1,0x191a,0x2)
0x25D4180A,	//0x062c		VoC_lw16i_set_inc(REG2,0x25d4,0x2)
0x1AFC1503,	//0x062e		VoC_sw16_d(REG3,0x1afc)
0x1AFD1504,	//0x0630		VoC_sw16_d(REG4,0x1afd)
0x63491505,	//0x0632		VoC_sw16_d(REG5,0x6349)
0x19180A83,	//0x0634		VoC_lw16i(REG3,0x1918)
		//0x0636		Coolsand_AEC_L0
0x083FF107,	//0x0636		VoC_mult16_rd(REG7,REG7,0x223a)(lo)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x1400223A,	//0x0638		VoC_lw16_d(REG0,0x4355)(lo)	|	VoC_mult16_rd(REG7,REG7,0x223a)(hi)
0x14014355,	//0x063a		VoC_lw16_d(REG1,0x4354)(lo)	|	VoC_lw16_d(REG0,0x4355)(hi)
0x14024354,	//0x063c		VoC_lw16_d(REG2,0x4354)(lo)	|	VoC_lw16_d(REG1,0x4354)(hi)
0x40384354,	//0x063e		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG2,0x4354)(hi)
0xC0BAC079,	//0x0640		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x081D2B80,	//0x0642		VoC_jal(Coolsand_EchoCancelProcessing)
0x0709F021,	//0x0644		VoC_add16_rd(REG1,REG1,0x223a)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF282223A,	//0x0646		VoC_lw16i_short(REG2,0x14,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x223a)(hi)
0x223A1501,	//0x0648		VoC_sw16_d(REG1,0x223a)
0x223A1405,	//0x064a		VoC_lw16_d(REG5,0x223a)
0x06363415,	//0x064c		VoC_bgt16_rr(Coolsand_AEC_L0,REG2,REG5)
0xFFC0DFA9,	//0x064e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0650		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0651		Coolsand_AECReset
0x40361400,	//0x0652		VoC_lw16_d(REG0,0x4036)
0x081A3180,	//0x0654		VoC_bez16_r(Coolsand_AnalysisProcessing_L1,REG0)
0x0ACAFF44,	//0x0656		VoC_lw16i(ACC1_LO,0xffff)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x0A8B7FFF,	//0x0658		VoC_lw16i(ACC1_HI,0x7fff)(lo)	|	VoC_lw16i(ACC1_LO,0xffff)(hi)
0x18087FFF,	//0x065a		VoC_lw16i_set_inc(REG0,0x25aa,0x2)(lo)	|	VoC_lw16i(ACC1_HI,0x7fff)(hi)
0x180925AA,	//0x065c		VoC_lw16i_set_inc(REG1,0x25bc,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x25aa,0x2)(hi)
0x2C1225BC,	//0x065e		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG1,0x25bc,0x2)(hi)
0xDDC50662,	//0x0660		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
		//0x0662		VoC_endloop0
0x1584DDCD,	//0x0662		VoC_sw32_d(ACC0,0x25ce)(lo)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0x180825CE,	//0x0664		VoC_lw16i_set_inc(REG0,0x1c48,0x2)(lo)	|	VoC_sw32_d(ACC0,0x25ce)(hi)
0x18091C48,	//0x0666		VoC_lw16i_set_inc(REG1,0x1cc8,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1c48,0x2)(hi)
0x180A1CC8,	//0x0668		VoC_lw16i_set_inc(REG2,0x1d48,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1cc8,0x2)(hi)
0x2C801D48,	//0x066a		VoC_loop_i(0x0,0x40)(lo)	|	VoC_lw16i_set_inc(REG2,0x1d48,0x2)(hi)
0xDDC4066E,	//0x066c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x40)(hi)
		//0x066e		VoC_endloop0
0x2D00DDCC,	//0x066e		VoC_loop_i(0x0,0x80)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xDDD40671,	//0x0670		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x80)(hi)
		//0x0671		VoC_endloop0
0x1F281808,	//0x0672		VoC_lw16i_set_inc(REG0,0x1f28,0x2)
0x1F701809,	//0x0674		VoC_lw16i_set_inc(REG1,0x1f70,0x2)
0x1FB8180A,	//0x0676		VoC_lw16i_set_inc(REG2,0x1fb8,0x2)
0x2048180B,	//0x0678		VoC_lw16i_set_inc(REG3,0x2048,0x2)
0x06812C48,	//0x067a		VoC_loop_i(0x0,0x24)
0xDDCCDDC4,	//0x067c		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDD4DDD4,	//0x067e		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDDDCDDDC,	//0x0680		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0681		VoC_endloop0
0x20D81804,	//0x0682		VoC_lw16i_set_inc(REG0,0x20d8,0x1)
0x20E21805,	//0x0684		VoC_lw16i_set_inc(REG1,0x20e2,0x1)
0x20EC1806,	//0x0686		VoC_lw16i_set_inc(REG2,0x20ec,0x1)
0x20F61807,	//0x0688		VoC_lw16i_set_inc(REG3,0x20f6,0x1)
0x068F2C12,	//0x068a		VoC_loop_i(0x0,0x9)
0xDC98DC88,	//0x068c		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDCB8DCA8,	//0x068e		VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x068f		VoC_endloop0
0x21441808,	//0x0690		VoC_lw16i_set_inc(REG0,0x2144,0x2)
0x21681809,	//0x0692		VoC_lw16i_set_inc(REG1,0x2168,0x2)
0x217A180A,	//0x0694		VoC_lw16i_set_inc(REG2,0x217a,0x2)
0x2156180B,	//0x0696		VoC_lw16i_set_inc(REG3,0x2156,0x2)
0x069D2C12,	//0x0698		VoC_loop_i(0x0,0x9)
0xDDCCDDC4,	//0x069a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDDCDDD4,	//0x069c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x069d		VoC_endloop0
0x22051508,	//0x069e		VoC_sw16_d(ACC0_LO,0x2205)
0x22061808,	//0x06a0		VoC_lw16i_set_inc(REG0,0x2206,0x2)
0xE1B573E4,	//0x06a2		VoC_lw16i_short(REG5,0x1b,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1f,DEFAULT)
0xE0077346,	//0x06a4		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1a,DEFAULT)
0xE0145DC2,	//0x06a6		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x220A1805,	//0x06a8		VoC_lw16i_set_inc(REG1,0x220a,0x1)
0xE0035DC3,	//0x06aa		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x2C3EDC94,	//0x06ac		VoC_loop_i(0x0,0x1f)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDC9306AF,	//0x06ae		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x1f)(hi)
		//0x06af		VoC_endloop0
0xFF457F44,	//0x06b0		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x00200A8A,	//0x06b2		VoC_lw16i(ACC1_LO,0x20)
0x21961808,	//0x06b4		VoC_lw16i_set_inc(REG0,0x2196,0x2)
0x21A81809,	//0x06b6		VoC_lw16i_set_inc(REG1,0x21a8,0x2)
0x21CE180A,	//0x06b8		VoC_lw16i_set_inc(REG2,0x21ce,0x2)
0x21E0180B,	//0x06ba		VoC_lw16i_set_inc(REG3,0x21e0,0x2)
0x06C12C12,	//0x06bc		VoC_loop_i(0x0,0x9)
0xDDCDDDC4,	//0x06be		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDDCDDD4,	//0x06c0		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x06c1		VoC_endloop0
0x21BA1804,	//0x06c2		VoC_lw16i_set_inc(REG0,0x21ba,0x1)
0x21C41805,	//0x06c4		VoC_lw16i_set_inc(REG1,0x21c4,0x1)
0x25301806,	//0x06c6		VoC_lw16i_set_inc(REG2,0x2530,0x1)
0x21F21807,	//0x06c8		VoC_lw16i_set_inc(REG3,0x21f2,0x1)
0x007F0A87,	//0x06ca		VoC_lw16i(REG7,0x7f)
0x06D12C12,	//0x06cc		VoC_loop_i(0x0,0x9)
0xDC98DC88,	//0x06ce		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDCB7DCA7,	//0x06d0		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x06d1		VoC_endloop0
0x23B01584,	//0x06d2		VoC_sw32_d(ACC0,0x23b0)
0x23B21584,	//0x06d4		VoC_sw32_d(ACC0,0x23b2)
0x23AC1584,	//0x06d6		VoC_sw32_d(ACC0,0x23ac)
0x23AE1584,	//0x06d8		VoC_sw32_d(ACC0,0x23ae)
0x23B81584,	//0x06da		VoC_sw32_d(ACC0,0x23b8)
0x23BA1584,	//0x06dc		VoC_sw32_d(ACC0,0x23ba)
0x23B41584,	//0x06de		VoC_sw32_d(ACC0,0x23b4)
0x23B61584,	//0x06e0		VoC_sw32_d(ACC0,0x23b6)
0x23BC1584,	//0x06e2		VoC_sw32_d(ACC0,0x23bc)
0x23BE1584,	//0x06e4		VoC_sw32_d(ACC0,0x23be)
0x23C71508,	//0x06e6		VoC_sw16_d(ACC0_LO,0x23c7)
0x25391508,	//0x06e8		VoC_sw16_d(ACC0_LO,0x2539)
0x253A1584,	//0x06ea		VoC_sw32_d(ACC0,0x253a)
0x253C1584,	//0x06ec		VoC_sw32_d(ACC0,0x253c)
0xE20A700B,	//0x06ee		VoC_lw16i_short(ACC1_LO,0x20,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0x007F0A87,	//0x06f0		VoC_lw16i(REG7,0x7f)
0x21A81808,	//0x06f2		VoC_lw16i_set_inc(REG0,0x21a8,0x2)
0x23C81809,	//0x06f4		VoC_lw16i_set_inc(REG1,0x23c8,0x2)
0x23E31806,	//0x06f6		VoC_lw16i_set_inc(REG2,0x23e3,0x1)
0x251E180B,	//0x06f8		VoC_lw16i_set_inc(REG3,0x251e,0x2)
0x06FF2C12,	//0x06fa		VoC_loop_i(0x0,0x9)
0xDDCDDDC5,	//0x06fc		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xDDDCDCA8,	//0x06fe		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x06ff		VoC_endloop0
0x23EC1808,	//0x0700		VoC_lw16i_set_inc(REG0,0x23ec,0x2)
0x25501809,	//0x0702		VoC_lw16i_set_inc(REG1,0x2550,0x2)
0x2562180A,	//0x0704		VoC_lw16i_set_inc(REG2,0x2562,0x2)
0x070A2C12,	//0x0706		VoC_loop_i(0x0,0x9)
0xDDCCDDC4,	//0x0708		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x070a		VoC_endloop0
0x1808DDD4,	//0x070a		VoC_lw16i_set_inc(REG0,0x23fe,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x180923FE,	//0x070c		VoC_lw16i_set_inc(REG1,0x248e,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x23fe,0x2)(hi)
0x2C90248E,	//0x070e		VoC_loop_i(0x0,0x48)(lo)	|	VoC_lw16i_set_inc(REG1,0x248e,0x2)(hi)
0xDDC40712,	//0x0710		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x48)(hi)
		//0x0712		VoC_endloop0
0x1584DDCC,	//0x0712		VoC_sw32_d(ACC0,0x2574)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x15842574,	//0x0714		VoC_sw32_d(ACC0,0x2578)(lo)	|	VoC_sw32_d(ACC0,0x2574)(hi)
0x15842578,	//0x0716		VoC_sw32_d(ACC0,0x257c)(lo)	|	VoC_sw32_d(ACC0,0x2578)(hi)
0x1584257C,	//0x0718		VoC_sw32_d(ACC0,0x2580)(lo)	|	VoC_sw32_d(ACC0,0x257c)(hi)
0x15842580,	//0x071a		VoC_sw32_d(ACC0,0x2584)(lo)	|	VoC_sw32_d(ACC0,0x2580)(hi)
0x15842584,	//0x071c		VoC_sw32_d(ACC0,0x2588)(lo)	|	VoC_sw32_d(ACC0,0x2584)(hi)
0x15842588,	//0x071e		VoC_sw32_d(ACC0,0x258c)(lo)	|	VoC_sw32_d(ACC0,0x2588)(hi)
0x1584258C,	//0x0720		VoC_sw32_d(ACC0,0x2590)(lo)	|	VoC_sw32_d(ACC0,0x258c)(hi)
0x15842590,	//0x0722		VoC_sw32_d(ACC0,0x2594)(lo)	|	VoC_sw32_d(ACC0,0x2590)(hi)
0x15842594,	//0x0724		VoC_sw32_d(ACC0,0x2598)(lo)	|	VoC_sw32_d(ACC0,0x2594)(hi)
0x15842598,	//0x0726		VoC_sw32_d(ACC0,0x259c)(lo)	|	VoC_sw32_d(ACC0,0x2598)(hi)
0x1584259C,	//0x0728		VoC_sw32_d(ACC0,0x2576)(lo)	|	VoC_sw32_d(ACC0,0x259c)(hi)
0x15842576,	//0x072a		VoC_sw32_d(ACC0,0x257a)(lo)	|	VoC_sw32_d(ACC0,0x2576)(hi)
0x1584257A,	//0x072c		VoC_sw32_d(ACC0,0x257e)(lo)	|	VoC_sw32_d(ACC0,0x257a)(hi)
0x1584257E,	//0x072e		VoC_sw32_d(ACC0,0x2582)(lo)	|	VoC_sw32_d(ACC0,0x257e)(hi)
0x15842582,	//0x0730		VoC_sw32_d(ACC0,0x2586)(lo)	|	VoC_sw32_d(ACC0,0x2582)(hi)
0x15842586,	//0x0732		VoC_sw32_d(ACC0,0x258a)(lo)	|	VoC_sw32_d(ACC0,0x2586)(hi)
0x1584258A,	//0x0734		VoC_sw32_d(ACC0,0x258e)(lo)	|	VoC_sw32_d(ACC0,0x258a)(hi)
0x1584258E,	//0x0736		VoC_sw32_d(ACC0,0x2592)(lo)	|	VoC_sw32_d(ACC0,0x258e)(hi)
0x15842592,	//0x0738		VoC_sw32_d(ACC0,0x2596)(lo)	|	VoC_sw32_d(ACC0,0x2592)(hi)
0x15842596,	//0x073a		VoC_sw32_d(ACC0,0x259a)(lo)	|	VoC_sw32_d(ACC0,0x2596)(hi)
0x1584259A,	//0x073c		VoC_sw32_d(ACC0,0x259e)(lo)	|	VoC_sw32_d(ACC0,0x259a)(hi)
0x1402259E,	//0x073e		VoC_lw16_d(REG2,0x429a)(lo)	|	VoC_sw32_d(ACC0,0x259e)(hi)
0x1804429A,	//0x0740		VoC_lw16i_set_inc(REG0,0x253e,0x1)(lo)	|	VoC_lw16_d(REG2,0x429a)(hi)
0x1805253E,	//0x0742		VoC_lw16i_set_inc(REG1,0x2547,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x253e,0x1)(hi)
0x2C122547,	//0x0744		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG1,0x2547,0x1)(hi)
0xDC820748,	//0x0746		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
		//0x0748		VoC_endloop0
0x180BDC98,	//0x0748		VoC_lw16i_set_inc(REG3,0x25d4,0x2)(lo)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
0x2CA025D4,	//0x074a		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16i_set_inc(REG3,0x25d4,0x2)(hi)
0xDDDC074D,	//0x074c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x074d		VoC_endloop0
0x42861482,	//0x074e		VoC_lw32_d(REG45,0x4286)
0x113E0A82,	//0x0750		VoC_lw16i(REG2,0x113e)
0x00980A83,	//0x0752		VoC_lw16i(REG3,0x98)
0x01EA2B80,	//0x0754		VoC_jal(Rda_RunDma)
0x00960A87,	//0x0756		VoC_lw16i(REG7,0x96)
0x1507FF44,	//0x0758		VoC_sw16_d(REG7,0x25d2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x180B25D2,	//0x075a		VoC_lw16i_set_inc(REG3,0x40f6,0x2)(lo)	|	VoC_sw16_d(REG7,0x25d2)(hi)
0x2C6440F6,	//0x075c		VoC_loop_i(0x0,0x32)(lo)	|	VoC_lw16i_set_inc(REG3,0x40f6,0x2)(hi)
0xDDDC075F,	//0x075e		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_loop_i(0x0,0x32)(hi)
		//0x075f		VoC_endloop0
0x7FFF0A88,	//0x0760		VoC_lw16i(ACC0_LO,0x7fff)
0x00000A8B,	//0x0762		VoC_lw16i(ACC1_HI,0x0)
0x00000ACA,	//0x0764		VoC_lw16i(ACC1_LO,0x8000)
0x7FFF0ACB,	//0x0766		VoC_lw16i(ACC1_HI,0xffff)
0x26741584,	//0x0768		VoC_sw32_d(ACC0,0x2674)
0x26761585,	//0x076a		VoC_sw32_d(ACC1,0x2676)
0x1804FF44,	//0x076c		VoC_lw16i_set_inc(REG0,0x26c5,0x1)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x0A8126C5,	//0x076e		VoC_lw16i(REG1,0x1e)(lo)	|	VoC_lw16i_set_inc(REG0,0x26c5,0x1)(hi)
0x0A82001E,	//0x0770		VoC_lw16i(REG2,0x1b)(lo)	|	VoC_lw16i(REG1,0x1e)(hi)
0x0A83001B,	//0x0772		VoC_lw16i(REG3,0x19)(lo)	|	VoC_lw16i(REG2,0x1b)(hi)
0x0A840019,	//0x0774		VoC_lw16i(REG4,0x17)(lo)	|	VoC_lw16i(REG3,0x19)(hi)
0x0A850017,	//0x0776		VoC_lw16i(REG5,0x14)(lo)	|	VoC_lw16i(REG4,0x17)(hi)
0x0A860014,	//0x0778		VoC_lw16i(REG6,0x12)(lo)	|	VoC_lw16i(REG5,0x14)(hi)
0x0A870012,	//0x077a		VoC_lw16i(REG7,0x10)(lo)	|	VoC_lw16i(REG6,0x12)(hi)
0xDC810010,	//0x077c		VoC_sw16inc_p(REG1,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x10)(hi)
0xDC83DC82,	//0x077e		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xDC85DC84,	//0x0780		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC87DC86,	//0x0782		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x000E0A81,	//0x0784		VoC_lw16i(REG1,0xe)
0x000C0A82,	//0x0786		VoC_lw16i(REG2,0xc)
0x000B0A83,	//0x0788		VoC_lw16i(REG3,0xb)
0x00090A84,	//0x078a		VoC_lw16i(REG4,0x9)
0x00070A85,	//0x078c		VoC_lw16i(REG5,0x7)
0x00060A86,	//0x078e		VoC_lw16i(REG6,0x6)
0x00040A87,	//0x0790		VoC_lw16i(REG7,0x4)
0xDC82DC81,	//0x0792		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0xDC84DC83,	//0x0794		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0xDC86DC85,	//0x0796		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x0A81DC87,	//0x0798		VoC_lw16i(REG1,0x3)(lo)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x0A820003,	//0x079a		VoC_lw16i(REG2,0x1)(lo)	|	VoC_lw16i(REG1,0x3)(hi)
0xDC810001,	//0x079c		VoC_sw16inc_p(REG1,REG0,DEFAULT)	|	VoC_lw16i(REG2,0x1)(hi)
0x1804DC82,	//0x079e		VoC_lw16i_set_inc(REG0,0x26d5,0x1)(lo)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0x0A8126D5,	//0x07a0		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_lw16i_set_inc(REG0,0x26d5,0x1)(hi)
0x0A827FFF,	//0x07a2		VoC_lw16i(REG2,0x65ac)(lo)	|	VoC_lw16i(REG1,0x7fff)(hi)
0x0A8365AC,	//0x07a4		VoC_lw16i(REG3,0x50c3)(lo)	|	VoC_lw16i(REG2,0x65ac)(hi)
0x0A8450C3,	//0x07a6		VoC_lw16i(REG4,0x4026)(lo)	|	VoC_lw16i(REG3,0x50c3)(hi)
0x0A854026,	//0x07a8		VoC_lw16i(REG5,0x32f5)(lo)	|	VoC_lw16i(REG4,0x4026)(hi)
0x0A8632F5,	//0x07aa		VoC_lw16i(REG6,0x287a)(lo)	|	VoC_lw16i(REG5,0x32f5)(hi)
0x0A87287A,	//0x07ac		VoC_lw16i(REG7,0x2026)(lo)	|	VoC_lw16i(REG6,0x287a)(hi)
0xDC812026,	//0x07ae		VoC_sw16inc_p(REG1,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x2026)(hi)
0xDC83DC82,	//0x07b0		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xDC85DC84,	//0x07b2		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC87DC86,	//0x07b4		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x198A0A81,	//0x07b6		VoC_lw16i(REG1,0x198a)
0x14490A82,	//0x07b8		VoC_lw16i(REG2,0x1449)
0x101D0A83,	//0x07ba		VoC_lw16i(REG3,0x101d)
0x0CCC0A84,	//0x07bc		VoC_lw16i(REG4,0xccc)
0x0A2A0A85,	//0x07be		VoC_lw16i(REG5,0xa2a)
0x08130A86,	//0x07c0		VoC_lw16i(REG6,0x813)
0x066A0A87,	//0x07c2		VoC_lw16i(REG7,0x66a)
0xDC82DC81,	//0x07c4		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0xDC84DC83,	//0x07c6		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0xDC86DC85,	//0x07c8		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x0A81DC87,	//0x07ca		VoC_lw16i(REG1,0x518)(lo)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x0A820518,	//0x07cc		VoC_lw16i(REG2,0x40c)(lo)	|	VoC_lw16i(REG1,0x518)(hi)
0x0A83040C,	//0x07ce		VoC_lw16i(REG3,0x337)(lo)	|	VoC_lw16i(REG2,0x40c)(hi)
0x0A840337,	//0x07d0		VoC_lw16i(REG4,0x28d)(lo)	|	VoC_lw16i(REG3,0x337)(hi)
0x0A85028D,	//0x07d2		VoC_lw16i(REG5,0x207)(lo)	|	VoC_lw16i(REG4,0x28d)(hi)
0x0A860207,	//0x07d4		VoC_lw16i(REG6,0x19c)(lo)	|	VoC_lw16i(REG5,0x207)(hi)
0x0A87019C,	//0x07d6		VoC_lw16i(REG7,0x147)(lo)	|	VoC_lw16i(REG6,0x19c)(hi)
0xDC810147,	//0x07d8		VoC_sw16inc_p(REG1,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x147)(hi)
0xDC83DC82,	//0x07da		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xDC85DC84,	//0x07dc		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC87DC86,	//0x07de		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x01040A81,	//0x07e0		VoC_lw16i(REG1,0x104)
0x00CE0A82,	//0x07e2		VoC_lw16i(REG2,0xce)
0x00A40A83,	//0x07e4		VoC_lw16i(REG3,0xa4)
0x00820A84,	//0x07e6		VoC_lw16i(REG4,0x82)
0x00670A85,	//0x07e8		VoC_lw16i(REG5,0x67)
0x00520A86,	//0x07ea		VoC_lw16i(REG6,0x52)
0x00410A87,	//0x07ec		VoC_lw16i(REG7,0x41)
0xDC82DC81,	//0x07ee		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0xDC84DC83,	//0x07f0		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0xDC86DC85,	//0x07f2		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x0A81DC87,	//0x07f4		VoC_lw16i(REG1,0x33)(lo)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x0A820033,	//0x07f6		VoC_lw16i(REG2,0x29)(lo)	|	VoC_lw16i(REG1,0x33)(hi)
0x0A830029,	//0x07f8		VoC_lw16i(REG3,0x20)(lo)	|	VoC_lw16i(REG2,0x29)(hi)
0x0A840020,	//0x07fa		VoC_lw16i(REG4,0x1a)(lo)	|	VoC_lw16i(REG3,0x20)(hi)
0xDC81001A,	//0x07fc		VoC_sw16inc_p(REG1,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x1a)(hi)
0xDC83DC82,	//0x07fe		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0x1808DC84,	//0x0800		VoC_lw16i_set_inc(REG0,0x2678,0x2)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x18092678,	//0x0802		VoC_lw16i_set_inc(REG1,0x268a,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x2678,0x2)(hi)
0x180A268A,	//0x0804		VoC_lw16i_set_inc(REG2,0x269c,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x268a,0x2)(hi)
0x2C12269C,	//0x0806		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG2,0x269c,0x2)(hi)
0xDDC4080B,	//0x0808		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
0xDDD4DDCC,	//0x080a		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x080b		VoC_endloop0
0x26AE1804,	//0x080c		VoC_lw16i_set_inc(REG0,0x26ae,0x1)
0x26B71805,	//0x080e		VoC_lw16i_set_inc(REG1,0x26b7,0x1)
0x08132C12,	//0x0810		VoC_loop_i(0x0,0x9)
0xDC98DC88,	//0x0812		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
		//0x0813		VoC_endloop0
0x26C01584,	//0x0814		VoC_sw32_d(ACC0,0x26c0)
0x26C21584,	//0x0816		VoC_sw32_d(ACC0,0x26c2)
0x26C41508,	//0x0818		VoC_sw16_d(ACC0_LO,0x26c4)
		//0x081a		Coolsand_AnalysisProcessing_L1
0xFFC0DFA9,	//0x081a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x081c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x081d		Coolsand_EchoCancelProcessing
0xDFC1DFC2,	//0x081e		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x1C480A81,	//0x0820		VoC_lw16i(REG1,0x1c48)
0x1EC80A84,	//0x0822		VoC_lw16i(REG4,0x1ec8)
0x1ED80A85,	//0x0824		VoC_lw16i(REG5,0x1ed8)
0x09E12B80,	//0x0826		VoC_jal(Coolsand_AnalysisProcessing)
0x0A81DF80,	//0x0828		VoC_lw16i(REG1,0x1cc8)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x0A841CC8,	//0x082a		VoC_lw16i(REG4,0x1ee8)(lo)	|	VoC_lw16i(REG1,0x1cc8)(hi)
0x0A851EE8,	//0x082c		VoC_lw16i(REG5,0x1ef8)(lo)	|	VoC_lw16i(REG4,0x1ee8)(hi)
0xFFC01EF8,	//0x082e		VoC_NAD	|	VoC_lw16i(REG5,0x1ef8)(hi)
0x09E12B80,	//0x0830		VoC_jal(Coolsand_AnalysisProcessing)
0x1F281804,	//0x0832		VoC_lw16i_set_inc(REG0,0x1f28,0x1)
0x1F701805,	//0x0834		VoC_lw16i_set_inc(REG1,0x1f70,0x1)
0x1FB81806,	//0x0836		VoC_lw16i_set_inc(REG2,0x1fb8,0x1)
0x20481807,	//0x0838		VoC_lw16i_set_inc(REG3,0x2048,0x1)
0x222A1580,	//0x083a		VoC_sw32_d(REG01,0x222a)
0x222C1581,	//0x083c		VoC_sw32_d(REG23,0x222c)
0x21001804,	//0x083e		VoC_lw16i_set_inc(REG0,0x2100,0x1)
0x210A1805,	//0x0840		VoC_lw16i_set_inc(REG1,0x210a,0x1)
0x20D81806,	//0x0842		VoC_lw16i_set_inc(REG2,0x20d8,0x1)
0x20E21807,	//0x0844		VoC_lw16i_set_inc(REG3,0x20e2,0x1)
0x22321580,	//0x0846		VoC_sw32_d(REG01,0x2232)
0x222E1581,	//0x0848		VoC_sw32_d(REG23,0x222e)
0x1EE81804,	//0x084a		VoC_lw16i_set_inc(REG0,0x1ee8,0x1)
0x1EF81805,	//0x084c		VoC_lw16i_set_inc(REG1,0x1ef8,0x1)
0x1EC81806,	//0x084e		VoC_lw16i_set_inc(REG2,0x1ec8,0x1)
0x1ED81807,	//0x0850		VoC_lw16i_set_inc(REG3,0x1ed8,0x1)
0x22341580,	//0x0852		VoC_sw32_d(REG01,0x2234)
0x20EC1804,	//0x0854		VoC_lw16i_set_inc(REG0,0x20ec,0x1)
0x20F61805,	//0x0856		VoC_lw16i_set_inc(REG1,0x20f6,0x1)
0x22361581,	//0x0858		VoC_sw32_d(REG23,0x2236)
0x21441806,	//0x085a		VoC_lw16i_set_inc(REG2,0x2144,0x1)
0x22301580,	//0x085c		VoC_sw32_d(REG01,0x2230)
0x22381502,	//0x085e		VoC_sw16_d(REG2,0x2238)
0xFFC0F000,	//0x0860		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x223B1500,	//0x0862		VoC_sw16_d(REG0,0x223b)
		//0x0864		Coolsand_EchoCancelProcessing_L0
0x0A8A2B80,	//0x0864		VoC_jal(Coolsand_AdaptiveFilteringAmp)
0x0B272B80,	//0x0866		VoC_jal(Coolsand_UpdateSpkPower)
0x223B1407,	//0x0868		VoC_lw16_d(REG7,0x223b)
0x1EC80A82,	//0x086a		VoC_lw16i(REG2,0x1ec8)
0x1ED80A83,	//0x086c		VoC_lw16i(REG3,0x1ed8)
0xC0FB40BA,	//0x086e		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x22051406,	//0x0870		VoC_lw16_d(REG6,0x2205)
0xD833D822,	//0x0872		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x0B542B80,	//0x0874		VoC_jal(Coolsand_FilterUpdateCotrol_Int)
0x223B1407,	//0x0876		VoC_lw16_d(REG7,0x223b)
0x0C502B80,	//0x0878		VoC_jal(Coolsand_UpdateFilterAmp)
0x0709F021,	//0x087a		VoC_add16_rd(REG1,REG1,0x223b)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF122223B,	//0x087c		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x223b)(hi)
0x223B1501,	//0x087e		VoC_sw16_d(REG1,0x223b)
0x08643411,	//0x0880		VoC_bgt16_rr(Coolsand_EchoCancelProcessing_L0,REG2,REG1)
0x21001804,	//0x0882		VoC_lw16i_set_inc(REG0,0x2100,0x1)
0x210A1805,	//0x0884		VoC_lw16i_set_inc(REG1,0x210a,0x1)
0x1F081806,	//0x0886		VoC_lw16i_set_inc(REG2,0x1f08,0x1)
0x1F181807,	//0x0888		VoC_lw16i_set_inc(REG3,0x1f18,0x1)
0x088F2C12,	//0x088a		VoC_loop_i(0x0,0x9)
0xD895D884,	//0x088c		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDCB5DCA4,	//0x088e		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x088f		VoC_endloop0
0xF021F000,	//0x0890		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x21C31500,	//0x0892		VoC_sw16_d(REG0,0x21c3)
0x21CD1501,	//0x0894		VoC_sw16_d(REG1,0x21cd)
0x1EE81806,	//0x0896		VoC_lw16i_set_inc(REG2,0x1ee8,0x1)
0x1EF81807,	//0x0898		VoC_lw16i_set_inc(REG3,0x1ef8,0x1)
0x21CD0712,	//0x089a		VoC_add16_rd(REG2,REG2,0x21cd)
0x21CD071B,	//0x089c		VoC_add16_rd(REG3,REG3,0x21cd)
0xFFC0FFC0,	//0x089e		VoC_NOP	|	VoC_NOP
0x12122B80,	//0x08a0		VoC_jal(Coolsand_SumInstantPower)
0x1806FF26,	//0x08a2		VoC_lw16i_set_inc(REG2,0x1ec8,0x1)(lo)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x18071EC8,	//0x08a4		VoC_lw16i_set_inc(REG3,0x1ed8,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x1ec8,0x1)(hi)
0x07121ED8,	//0x08a6		VoC_add16_rd(REG2,REG2,0x21cd)(lo)	|	VoC_lw16i_set_inc(REG3,0x1ed8,0x1)(hi)
0x071B21CD,	//0x08a8		VoC_add16_rd(REG3,REG3,0x21cd)(lo)	|	VoC_add16_rd(REG2,REG2,0x21cd)(hi)
0xFFC021CD,	//0x08aa		VoC_NOP	|	VoC_add16_rd(REG3,REG3,0x21cd)(hi)
0x2B80FFC0,	//0x08ac		VoC_jal(Coolsand_SumInstantPower)(lo)	|	VoC_NOP
0xFF271212,	//0x08ae		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_jal(Coolsand_SumInstantPower)(hi)
0x21001806,	//0x08b0		VoC_lw16i_set_inc(REG2,0x2100,0x1)
0x210A1807,	//0x08b2		VoC_lw16i_set_inc(REG3,0x210a,0x1)
0x21CD0712,	//0x08b4		VoC_add16_rd(REG2,REG2,0x21cd)
0x21CD071B,	//0x08b6		VoC_add16_rd(REG3,REG3,0x21cd)
0xFFC0FFC0,	//0x08b8		VoC_NOP	|	VoC_NOP
0x12122B80,	//0x08ba		VoC_jal(Coolsand_SumInstantPower)
0x25A21586,	//0x08bc		VoC_sw32_d(RL6,0x25a2)
0x25A41587,	//0x08be		VoC_sw32_d(RL7,0x25a4)
0x25A61584,	//0x08c0		VoC_sw32_d(ACC0,0x25a6)
0x15D42B80,	//0x08c2		VoC_jal(Coolsand_ControlLogicDTD)
0x25A81500,	//0x08c4		VoC_sw16_d(REG0,0x25a8)
0xF061F040,	//0x08c6		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0x21C31500,	//0x08c8		VoC_sw16_d(REG0,0x21c3)
0x21CD1501,	//0x08ca		VoC_sw16_d(REG1,0x21cd)
0x1EE81806,	//0x08cc		VoC_lw16i_set_inc(REG2,0x1ee8,0x1)
0x1EF81807,	//0x08ce		VoC_lw16i_set_inc(REG3,0x1ef8,0x1)
0x21CD0712,	//0x08d0		VoC_add16_rd(REG2,REG2,0x21cd)
0x21CD071B,	//0x08d2		VoC_add16_rd(REG3,REG3,0x21cd)
0x12122B80,	//0x08d4		VoC_jal(Coolsand_SumInstantPower)
0x25A20926,	//0x08d6		VoC_add32_rd(RL6,ACC0,0x25a2)
0x1EC81806,	//0x08d8		VoC_lw16i_set_inc(REG2,0x1ec8,0x1)
0x1ED81807,	//0x08da		VoC_lw16i_set_inc(REG3,0x1ed8,0x1)
0x21CD0712,	//0x08dc		VoC_add16_rd(REG2,REG2,0x21cd)
0x21CD071B,	//0x08de		VoC_add16_rd(REG3,REG3,0x21cd)
0x12122B80,	//0x08e0		VoC_jal(Coolsand_SumInstantPower)
0x25A40927,	//0x08e2		VoC_add32_rd(RL7,ACC0,0x25a4)
0x21001806,	//0x08e4		VoC_lw16i_set_inc(REG2,0x2100,0x1)
0x210A1807,	//0x08e6		VoC_lw16i_set_inc(REG3,0x210a,0x1)
0x21CD0712,	//0x08e8		VoC_add16_rd(REG2,REG2,0x21cd)
0x21CD071B,	//0x08ea		VoC_add16_rd(REG3,REG3,0x21cd)
0x12122B80,	//0x08ec		VoC_jal(Coolsand_SumInstantPower)
0x25A60924,	//0x08ee		VoC_add32_rd(ACC0,ACC0,0x25a6)
0xFA0F7A0E,	//0x08f0		VoC_shr32_ri(RL7,0x1,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0xDF46FA0C,	//0x08f2		VoC_push32(RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xDF44DF47,	//0x08f4		VoC_push32(ACC0,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x15D42B80,	//0x08f6		VoC_jal(Coolsand_ControlLogicDTD)
0x25A91500,	//0x08f8		VoC_sw16_d(REG0,0x25a9)
0x31C0F001,	//0x08fa		VoC_bnez16_r(Coolsand_EchoCancelProcessing_L3,REG0)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x7C040901,	//0x08fc		VoC_bltz32_d(Coolsand_EchoCancelProcessing_L3,0x2598)(lo)	|	VoC_bnez16_r(Coolsand_EchoCancelProcessing_L3,REG0)(hi)
0x15012598,	//0x08fe		VoC_sw16_d(REG1,0x25a8)(lo)	|	VoC_bltz32_d(Coolsand_EchoCancelProcessing_L3,0x2598)(hi)
0xDF0425A8,	//0x0900		VoC_pop32(ACC0,DEFAULT)	|	VoC_sw16_d(REG1,0x25a8)(hi)
		//0x0901		Coolsand_EchoCancelProcessing_L3
0xDF06DF07,	//0x0902		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF447F3A,	//0x0904		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xF4397BFA,	//0x0906		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x42BD1407,	//0x0908		VoC_lw16_d(REG7,0x42bd)
0xF5C2790C,	//0x090a		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE6FCD3C,	//0x090c		VoC_macX_rr(REG5,REG7,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG7,DEFAULT)
0x5F04FFC0,	//0x090e		VoC_pop32(ACC0,DEFAULT)	|	VoC_NOP
0xFBC7FF27,	//0x0910		VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0xFFC07A47,	//0x0912		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x8,DEFAULT)
0x12262B80,	//0x0914		VoC_jal(Coolsand_ControlLogicMergeChnlEnhancedDTD)
0x12382B80,	//0x0916		VoC_jal(Coolsand_ControlLogicSingleChnlEnhanced)
0xFFC0F000,	//0x0918		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x223B1500,	//0x091a		VoC_sw16_d(REG0,0x223b)
		//0x091c		Coolsand_EchoCancelProcessing_L1
0x223B1407,	//0x091c		VoC_lw16_d(REG7,0x223b)
0x094A31C7,	//0x091e		VoC_bnez16_r(Coolsand_EchoCancelProcessing_L11,REG7)
0x21011804,	//0x0920		VoC_lw16i_set_inc(REG0,0x2101,0x1)
0x210B1805,	//0x0922		VoC_lw16i_set_inc(REG1,0x210b,0x1)
0xF5F95809,	//0x0924		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16_p(ACC0_HI,REG0,DEFAULT)
0xFFC0D81B,	//0x0926		VoC_NOP	|	VoC_lw16_p(ACC1_HI,REG1,DEFAULT)
0xFA857A84,	//0x0928		VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x0E382B80,	//0x092a		VoC_jal(Coolsand_CmplxAppxNorm_int)
0x26745424,	//0x092c		VoC_bngt32_rd(Coolsand_EchoCancelProcessing_not_saturation_L00,ACC0,0x2674)
0x26741484,	//0x092e		VoC_lw32_d(ACC0,0x2674)
		//0x0930		Coolsand_EchoCancelProcessing_not_saturation_L00
0x26765024,	//0x0930		VoC_bgt32_rd(Coolsand_EchoCancelProcessing_not_saturation_L01,ACC0,0x2676)
0x26761484,	//0x0932		VoC_lw32_d(ACC0,0x2676)
		//0x0934		Coolsand_EchoCancelProcessing_not_saturation_L01
0xFF22FFC0,	//0x0934		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0xF081CD27,	//0x0936		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_multf32_rr(RL7,REG4,REG4,DEFAULT)
0x25CE501F,	//0x0938		VoC_bgt32_rd(Coolsand_EchoCancelProcessing_L12,RL7,0x25ce)
0xF099F021,	//0x093a		VoC_lw16i_short(FORMAT32,0x4,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x093b		Coolsand_EchoCancelProcessing_L12
0x25CE09BA,	//0x093c		VoC_sub32_rd(REG45,RL7,0x25ce)
0xF90CFBFA,	//0x093e		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xF6B9CD0F,	//0x0940		VoC_lw16i_short(FORMAT32,0xfffffff5,DEFAULT)	|	VoC_multf32_rr(RL7,REG4,REG1,DEFAULT)
0x093FCD4A,	//0x0942		VoC_add32_rd(RL7,RL7,0x25ce)(lo)	|	VoC_multf32_rr(REG45,REG5,REG1,DEFAULT)
0xC8BA25CE,	//0x0944		VoC_add32_rr(REG45,REG45,RL7,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x25ce)(hi)
0x1582FFC0,	//0x0946		VoC_sw32_d(REG45,0x25ce)(lo)	|	VoC_NOP
0xFFC025CE,	//0x0948		VoC_NAD	|	VoC_sw32_d(REG45,0x25ce)(hi)
		//0x094a		Coolsand_EchoCancelProcessing_L11
0x0E602B80,	//0x094a		VoC_jal(Coolsand_ComputeNoiseWeight_DeciDirectCTRL)
0x13F42B80,	//0x094c		VoC_jal(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL)
0x420A1400,	//0x094e		VoC_lw16_d(REG0,0x420a)
0x223B1407,	//0x0950		VoC_lw16_d(REG7,0x223b)
0x09B23180,	//0x0952		VoC_bez16_r(Coolsand_EchoCancelProcessing_L13,REG0)
0x09B231C7,	//0x0954		VoC_bnez16_r(Coolsand_EchoCancelProcessing_L13,REG7)
0x21010A80,	//0x0956		VoC_lw16i(REG0,0x2101)
0x210B0A81,	//0x0958		VoC_lw16i(REG1,0x210b)
0xD811D800,	//0x095a		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xFFC07FC0,	//0x095c		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
0x0F862B80,	//0x095e		VoC_jal(Coolsand_CmplxAppxNorm)
0x26741486,	//0x0960		VoC_lw32_d(RL6,0x2674)
0x26761485,	//0x0962		VoC_lw32_d(ACC1,0x2676)
0x096836A6,	//0x0964		VoC_bngt32_rr(ECHO_FIX_L1,ACC0,RL6)
0xE5C4FF34,	//0x0966		VoC_jump(ECHO_FIX_L2)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x0968		ECHO_FIX_L1
0x096B36AC,	//0x0968		VoC_bngt32_rr(ECHO_FIX_L2,ACC1,ACC0)
0xF7F9FF2C,	//0x096a		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x096b		ECHO_FIX_L2
0xF081FF22,	//0x096c		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x26C01484,	//0x096e		VoC_lw32_d(ACC0,0x26c0)
0xFFC0CD27,	//0x0970		VoC_NOP	|	VoC_multf32_rr(RL7,REG4,REG4,DEFAULT)
0x0975363C,	//0x0972		VoC_bgt32_rr(Coolsand_EchoCancelProcessing_L14,RL7,ACC0)
0xF6B9F021,	//0x0974		VoC_lw16i_short(FORMAT32,0xfffffff5,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x0975		Coolsand_EchoCancelProcessing_L14
0xFBFACBE2,	//0x0976		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)
0xF90CFFC0,	//0x0978		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_NOP
0xF099CD4F,	//0x097a		VoC_lw16i_short(FORMAT32,0x4,DEFAULT)	|	VoC_multf32_rr(RL7,REG5,REG1,DEFAULT)
0xFFC0CD0E,	//0x097c		VoC_NOP	|	VoC_multf32_rr(RL6,REG4,REG1,DEFAULT)
0xFFC0C9BA,	//0x097e		VoC_NOP	|	VoC_add32_rr(REG45,RL6,RL7,DEFAULT)
0xFFC0C8A2,	//0x0980		VoC_NOP	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x26C01582,	//0x0982		VoC_sw32_d(REG45,0x26c0)
0x2B80FF10,	//0x0984		VoC_jal(Coolsand_Lin2Log)(lo)	|	VoC_movreg32(REG01,REG45,DEFAULT)
0xDFC01005,	//0x0986		VoC_push16(REG0,DEFAULT)	|	VoC_jal(Coolsand_Lin2Log)(hi)
0x1F300A80,	//0x0988		VoC_lw16i(REG0,0x1f30)
0x1F780A81,	//0x098a		VoC_lw16i(REG1,0x1f78)
0xD811D800,	//0x098c		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x0F862B80,	//0x098e		VoC_jal(Coolsand_CmplxAppxNorm)
0xFF22F7F9,	//0x0990		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x1484F081,	//0x0992		VoC_lw32_d(ACC0,0x26c2)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xCD2726C2,	//0x0994		VoC_multf32_rr(RL7,REG4,REG4,DEFAULT)	|	VoC_lw32_d(ACC0,0x26c2)(hi)
0x363CFFC0,	//0x0996		VoC_bgt32_rr(Coolsand_EchoCancelProcessing_L15,RL7,ACC0)(lo)	|	VoC_NOP
0xF021099A,	//0x0998		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_EchoCancelProcessing_L15,RL7,ACC0)(hi)
		//0x099a		Coolsand_EchoCancelProcessing_L15
0xCBE2F019,	//0x099a		VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFFC0FBFA,	//0x099c		VoC_NOP	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCD4FF90C,	//0x099e		VoC_multf32_rr(RL7,REG5,REG1,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CD0E,	//0x09a0		VoC_NOP	|	VoC_multf32_rr(RL6,REG4,REG1,DEFAULT)
0xFA26FBAF,	//0x09a2		VoC_shr32_ri(RL6,0x4,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff5,DEFAULT)
0xFFC0C9BA,	//0x09a4		VoC_NOP	|	VoC_add32_rr(REG45,RL6,RL7,DEFAULT)
0xFFC0C8A2,	//0x09a6		VoC_NOP	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x26C21582,	//0x09a8		VoC_sw32_d(REG45,0x26c2)
0x2B80FF10,	//0x09aa		VoC_jal(Coolsand_Lin2Log)(lo)	|	VoC_movreg32(REG01,REG45,DEFAULT)
0xDF811005,	//0x09ac		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(Coolsand_Lin2Log)(hi)
0xFFC0C20B,	//0x09ae		VoC_NOP	|	VoC_sub16_rr(REG3,REG0,REG1,DEFAULT)
0x26C41503,	//0x09b0		VoC_sw16_d(REG3,0x26c4)
		//0x09b2		Coolsand_EchoCancelProcessing_L13
0x102C2B80,	//0x09b2		VoC_jal(Coolsand_PostFiltering)
0x0709F021,	//0x09b4		VoC_add16_rd(REG1,REG1,0x223b)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF122223B,	//0x09b6		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x223b)(hi)
0x223B1501,	//0x09b8		VoC_sw16_d(REG1,0x223b)
0x091C3411,	//0x09ba		VoC_bgt16_rr(Coolsand_EchoCancelProcessing_L1,REG2,REG1)
0x1401F280,	//0x09bc		VoC_lw16_d(REG1,0x23c6)(lo)	|	VoC_lw16i_short(REG0,0x14,DEFAULT)
0x140223C6,	//0x09be		VoC_lw16_d(REG2,0x42c5)(lo)	|	VoC_lw16_d(REG1,0x23c6)(hi)
0x1FBE42C5,	//0x09c0		VoC_lw16i_set_inc(REG2,0x1f0f,0xffffffff)(lo)	|	VoC_lw16_d(REG2,0x42c5)(hi)
0x1FBF1F0F,	//0x09c2		VoC_lw16i_set_inc(REG3,0x1f1f,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG2,0x1f0f,0xffffffff)(hi)
0x18041F1F,	//0x09c4		VoC_lw16i_set_inc(REG0,0x1f11,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x1f1f,0xffffffff)(hi)
0x18051F11,	//0x09c6		VoC_lw16i_set_inc(REG1,0x1f21,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1f11,0x1)(hi)
0x68E51F21,	//0x09c8		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1f21,0x1)(hi)
0xD8A4E006,	//0x09ca		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0xDC84879D,	//0x09cc		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG6,REG3,DEFAULT)
		//0x09ce		VoC_endloop0
0xDF83DC95,	//0x09ce		VoC_pop16(REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x1F080A80,	//0x09d0		VoC_lw16i(REG0,0x1f08)
0x1F180A81,	//0x09d2		VoC_lw16i(REG1,0x1f18)
0x1D480A82,	//0x09d4		VoC_lw16i(REG2,0x1d48)
0x2B80DFC3,	//0x09d6		VoC_jal(Coolsand_SynthesisProcessing)(lo)	|	VoC_push16(REG3,DEFAULT)
0xDF830A26,	//0x09d8		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(Coolsand_SynthesisProcessing)(hi)
0x0709F021,	//0x09da		VoC_add16_rd(REG1,REG1,0x2205)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xDFA92205,	//0x09dc		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x2205)(hi)
0x22051501,	//0x09de		VoC_sw16_d(REG1,0x2205)
0xDFE9E580,	//0x09e0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x09e1		Coolsand_AnalysisProcessing
0xE0866023,	//0x09e2		VoC_lw16i_short(REG6,0x8,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xE7874072,	//0x09e4		VoC_lw16i_short(REG7,0x78,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG6,DEFAULT)
0x0CF42B80,	//0x09e6		VoC_jal(Coolsand_BackCopyVec)
0x6001F107,	//0x09e8		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x6062F005,	//0x09ea		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xFFC0F3FE,	//0x09ec		VoC_NAD	|	VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)
0x0D002B80,	//0x09ee		VoC_jal(Coolsand_FlipVec)
0xF5E86061,	//0x09f0		VoC_lw16i_short(FORMAT16,0xfffffffd,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x227C0A82,	//0x09f2		VoC_lw16i(REG2,0x227c)
0x1E480A83,	//0x09f4		VoC_lw16i(REG3,0x1e48)
0x00800A80,	//0x09f6		VoC_lw16i(REG0,0x80)
0x0D082B80,	//0x09f8		VoC_jal(Coolsand_MulVec)
0x0A87E081,	//0x09fa		VoC_lw16i(REG7,0x10)(lo)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xFFC00010,	//0x09fc		VoC_NAD	|	VoC_lw16i(REG7,0x10)(hi)
0x0D142B80,	//0x09fe		VoC_jal(Coolsand_ClearVec)
0xE1077030,	//0x0a00		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1E480A81,	//0x0a02		VoC_lw16i(REG1,0x1e48)
0xF0067031,	//0x0a04		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x0A0C2C11,	//0x0a06		VoC_loop_i(0x1,0x8)
0xF6826080,	//0x0a08		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x0D1A2B80,	//0x0a0a		VoC_jal(Coolsand_AddVec)
		//0x0a0c		VoC_endloop1
0x60A1FFC0,	//0x0a0c		VoC_movreg16(REG1,REG5,DEFAULT)	|	VoC_NAD
0xFFC0E107,	//0x0a0e		VoC_NAD	|	VoC_lw16i_short(REG7,0x10,IN_PARALLEL)
0x0D142B80,	//0x0a10		VoC_jal(Coolsand_ClearVec)
0xF68060A1,	//0x0a12		VoC_movreg16(REG0,REG4,IN_PARALLEL)	|	VoC_movreg16(REG1,REG5,DEFAULT)
0x2B80DF42,	//0x0a14		VoC_jal(Coolsand_IFFT16)(lo)	|	VoC_push32(REG45,DEFAULT)
0xDF000D20,	//0x0a16		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(Coolsand_IFFT16)(hi)
0xF0097050,	//0x0a18		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD982E908,	//0x0a1a		VoC_lw32_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x78FCD98B,	//0x0a1c		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0x78FEF8FD,	//0x0a1e		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)
0xDDC2F8FF,	//0x0a20		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)
		//0x0a22		VoC_endloop0
0xDFA9DDCB,	//0x0a22		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xE580FFC0,	//0x0a24		VoC_return	|	VoC_NOP
		//0x0a26		Coolsand_SynthesisProcessing
0xDF415FE9,	//0x0a26		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x2B80DF40,	//0x0a28		VoC_jal(Coolsand_IFFT16)(lo)	|	VoC_push32(REG01,DEFAULT)
0xDF000D20,	//0x0a2a		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(Coolsand_IFFT16)(hi)
0xF0087F07,	//0x0a2c		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xF00A6002,	//0x0a2e		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xD9C26905,	//0x0a30		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF8ED78EC,	//0x0a32		VoC_shr16_ri(REG5,0xfffffffd,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0xDDD2D9C2,	//0x0a34		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x0a35		VoC_endloop0
0xF0097F38,	//0x0a36		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0x1E48180A,	//0x0a38		VoC_lw16i_set_inc(REG2,0x1e48,0x2)
0x0A402C11,	//0x0a3a		VoC_loop_i(0x1,0x8)
0xE1076001,	//0x0a3c		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x0E322B80,	//0x0a3e		VoC_jal(Coolsand_CopyVec)
		//0x0a40		VoC_endloop1
0x0A81FFC0,	//0x0a40		VoC_lw16i(REG1,0x1e48)(lo)	|	VoC_NAD
0x0A821E48,	//0x0a42		VoC_lw16i(REG2,0x22fc)(lo)	|	VoC_lw16i(REG1,0x1e48)(hi)
0x602322FC,	//0x0a44		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x22fc)(hi)
0x0A80F5E8,	//0x0a46		VoC_lw16i(REG0,0x80)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffffd,IN_PARALLEL)
0xFFC00080,	//0x0a48		VoC_NAD	|	VoC_lw16i(REG0,0x80)(hi)
0x0D082B80,	//0x0a4a		VoC_jal(Coolsand_MulVec)
0xF00A5F02,	//0x0a4c		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xF6817051,	//0x0a4e		VoC_movreg16(REG1,REG4,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x1804E082,	//0x0a50		VoC_lw16i_set_inc(REG0,0x1e48,0x1)(lo)	|	VoC_movreg16(REG2,REG4,DEFAULT)
0x0A871E48,	//0x0a52		VoC_lw16i(REG7,0x80)(lo)	|	VoC_lw16i_set_inc(REG0,0x1e48,0x1)(hi)
0x2E380080,	//0x0a54		VoC_loop_r(0,REG7)(lo)	|	VoC_lw16i(REG7,0x80)(hi)
0xD8860A5F,	//0x0a56		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_r(0,REG7)(hi)
0x3246F007,	//0x0a58		VoC_bnltz16_r(SYN_FilterBank_ExtendTo32,REG6)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x0AC70A5D,	//0x0a5a		VoC_lw16i(REG7,0xffff)(lo)	|	VoC_bnltz16_r(SYN_FilterBank_ExtendTo32,REG6)(hi)
0x92CB7FFF,	//0x0a5c		VoC_add32inc_rp(REG67,REG67,REG1,DEFAULT)	|	VoC_lw16i(REG7,0xffff)(hi)
		//0x0a5d		SYN_FilterBank_ExtendTo32
0xDDD3FFC0,	//0x0a5e		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_NOP
		//0x0a5f		VoC_endloop0
0xF6A26081,	//0x0a60		VoC_movreg16(REG2,REG5,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0x00080A87,	//0x0a62		VoC_lw16i(REG7,0x8)
0xF0067051,	//0x0a64		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x26741486,	//0x0a66		VoC_lw32_d(RL6,0x2674)
0x26761487,	//0x0a68		VoC_lw32_d(RL7,0x2676)
0xD9CCE7CA,	//0x0a6a		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0x0A7036A6,	//0x0a6c		VoC_bngt32_rr(SYN_OUTDATA_SATURATE_MIN,ACC0,RL6)
0xE5C5FF34,	//0x0a6e		VoC_jump(SYN_OUTDATA_SATURATE_END)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x0a70		SYN_OUTDATA_SATURATE_MIN
0x0A7436BC,	//0x0a70		VoC_bngt32_rr(SYN_OUTDATA_SATURATE_END,RL7,ACC0)
0xFFC0FF3C,	//0x0a72		VoC_NOP	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x0a74		SYN_OUTDATA_SATURATE_END
		//0x0a74		VoC_endloop0
0x6081DCA8,	//0x0a74		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
0x4059E103,	//0x0a76		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x10,IN_PARALLEL)
0x7051F682,	//0x0a78		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_movreg16(REG2,REG4,IN_PARALLEL)
0x0A87F00A,	//0x0a7a		VoC_lw16i(REG7,0xf0)(lo)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0x2B8000F0,	//0x0a7c		VoC_jal(Coolsand_CopyVec)(lo)	|	VoC_lw16i(REG7,0xf0)(hi)
0xE0810E32,	//0x0a7e		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_jal(Coolsand_CopyVec)(hi)
0x00F00A83,	//0x0a80		VoC_lw16i(REG3,0xf0)
0xE2074059,	//0x0a82		VoC_lw16i_short(REG7,0x20,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x0D142B80,	//0x0a84		VoC_jal(Coolsand_ClearVec)
0xFFC0DFA9,	//0x0a86		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0a88		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0a8a		Coolsand_AdaptiveFilteringAmp
0xE0775FE9,	//0x0a8a		VoC_lw16i_short(REG7,0x7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x222A1481,	//0x0a8c		VoC_lw32_d(REG23,0x222a)
0xC0FB40BA,	//0x0a8e		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x22301482,	//0x0a90		VoC_lw32_d(REG45,0x2230)
0x5826FF08,	//0x0a92		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_movreg32(REG01,REG23,DEFAULT)
0x5837F3FE,	//0x0a94		VoC_lw16_p(REG7,REG3,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)
0x5C46F3FF,	//0x0a96		VoC_sw16_p(REG6,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x5C57DE10,	//0x0a98		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x77F0DE18,	//0x0a9a		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x1483F3FD,	//0x0a9c		VoC_lw32_d(REG67,0x2236)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0xE8E42236,	//0x0a9e		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw32_d(REG67,0x2236)(hi)
0xD8B5D8A4,	//0x0aa0		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDC95DC84,	//0x0aa2		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0aa3		VoC_endloop0
0xD877D866,	//0x0aa4		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xF00A5C06,	//0x0aa6		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG0,DEFAULT)
0xF00B5C17,	//0x0aa8		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0x222C1481,	//0x0aaa		VoC_lw32_d(REG23,0x222c)
0x21141804,	//0x0aac		VoC_lw16i_set_inc(REG0,0x2114,0x1)
0x211C1805,	//0x0aae		VoC_lw16i_set_inc(REG1,0x211c,0x1)
0xFF426908,	//0x0ab0		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD9DBD9D4,	//0x0ab2		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0xFBA37BA4,	//0x0ab4		VoC_shr32_ri(REG67,0xfffffff4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xDC89C37F,	//0x0ab6		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)
		//0x0ab8		VoC_endloop0
0x1581DC97,	//0x0ab8		VoC_sw32_d(REG23,0x222c)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x1480222C,	//0x0aba		VoC_lw32_d(REG01,0x222a)(lo)	|	VoC_sw32_d(REG23,0x222c)(hi)
0x180A222A,	//0x0abc		VoC_lw16i_set_inc(REG2,0x2114,0x2)(lo)	|	VoC_lw32_d(REG01,0x222a)(hi)
0x180B2114,	//0x0abe		VoC_lw16i_set_inc(REG3,0x211c,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x2114,0x2)(hi)
0x0A8E211C,	//0x0ac0		VoC_lw16i(RL7_LO,0x2124)(lo)	|	VoC_lw16i_set_inc(REG3,0x211c,0x2)(hi)
0x70502124,	//0x0ac2		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x2124)(hi)
0x59D2F009,	//0x0ac4		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xFFC0F459,	//0x0ac6		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xD9DB688F,	//0x0ac8		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B451B04,	//0x0aca		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0x070CF004,	//0x0acc		VoC_sub16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x4E34870D,	//0x0ace		VoC_mac32_rr(REG6,REG4,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG4,REG1,IN_PARALLEL)
0xD9DBCE3D,	//0x0ad0		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_mac32_rr(REG7,REG5,IN_PARALLEL)
0xF66E61C3,	//0x0ad2		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0xDDDCD9D2,	//0x0ad4		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x61C3DDDD,	//0x0ad6		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
		//0x0ad7		VoC_endloop0
0x1480F66E,	//0x0ad8		VoC_lw32_d(REG01,0x222a)(lo)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0x180A222A,	//0x0ada		VoC_lw16i_set_inc(REG2,0x211c,0x2)(lo)	|	VoC_lw32_d(REG01,0x222a)(hi)
0x180B211C,	//0x0adc		VoC_lw16i_set_inc(REG3,0x2114,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x211c,0x2)(hi)
0x0A8E2114,	//0x0ade		VoC_lw16i(RL7_LO,0x2134)(lo)	|	VoC_lw16i_set_inc(REG3,0x2114,0x2)(hi)
0x70502134,	//0x0ae0		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x2134)(hi)
0x59D2F009,	//0x0ae2		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xFFC0F459,	//0x0ae4		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xD9DB688C,	//0x0ae6		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B451B04,	//0x0ae8		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xD1395131,	//0x0aea		VoC_mac32inc_rp(REG7,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0x61C3D9DB,	//0x0aec		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xD9D2F66E,	//0x0aee		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0xDDDDDDDC,	//0x0af0		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0af2		VoC_endloop0
0xF66E61C3,	//0x0af2		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0x222A1580,	//0x0af4		VoC_sw32_d(REG01,0x222a)
0x222E1481,	//0x0af6		VoC_lw32_d(REG23,0x222e)
0x21241808,	//0x0af8		VoC_lw16i_set_inc(REG0,0x2124,0x2)
0x21341809,	//0x0afa		VoC_lw16i_set_inc(REG1,0x2134,0x2)
0xF0077032,	//0x0afc		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xFF457F44,	//0x0afe		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xE905FFC0,	//0x0b00		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xFA5D1304,	//0x0b02		VoC_shr32_ri(ACC1,0xb,IN_PARALLEL)	|	VoC_add32inc_rp(ACC0,ACC0,REG0,DEFAULT)
0xFBAC134D,	//0x0b04		VoC_shr32_ri(ACC0,0xfffffff5,IN_PARALLEL)	|	VoC_add32inc_rp(ACC1,ACC1,REG1,DEFAULT)
		//0x0b06		VoC_endloop0
0xFBAD7A5C,	//0x0b06		VoC_shr32_ri(ACC1,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xb,DEFAULT)
0x0A80F6B8,	//0x0b08		VoC_lw16i(REG0,0x253e)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffff5,DEFAULT)
0x0700253E,	//0x0b0a		VoC_add16_rd(REG0,REG0,0x223b)(lo)	|	VoC_lw16i(REG0,0x253e)(hi)
0x7BA4223B,	//0x0b0c		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x223b)(hi)
0x6126FBFD,	//0x0b0e		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0x0D86F767,	//0x0b10		VoC_multf16_rp(REG6,REG6,REG0,DEFAULT)	|	VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)
0x14808DC7,	//0x0b12		VoC_lw32_d(REG01,0x2232)(lo)	|	VoC_multf16_rp(REG7,REG7,REG0,IN_PARALLEL)
0x70302232,	//0x0b14		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw32_d(REG01,0x2232)(hi)
0xDCA6F005,	//0x0b16		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x1481DCB7,	//0x0b18		VoC_lw32_d(REG23,0x2234)(lo)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x15812234,	//0x0b1a		VoC_sw32_d(REG23,0x222e)(lo)	|	VoC_lw32_d(REG23,0x2234)(hi)
0xBAB4222E,	//0x0b1c		VoC_sub16inc_pr(REG4,REG2,REG6,DEFAULT)	|	VoC_sw32_d(REG23,0x222e)(hi)
0xDC84BAFD,	//0x0b1e		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sub16inc_pr(REG5,REG3,REG7,DEFAULT)
0x1581DC95,	//0x0b20		VoC_sw32_d(REG23,0x2234)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDFA92234,	//0x0b22		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_d(REG23,0x2234)(hi)
0x22321580,	//0x0b24		VoC_sw32_d(REG01,0x2232)
0xDFE9E580,	//0x0b26		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b27		Coolsand_UpdateSpkPower
0xF0057030,	//0x0b28		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x22361480,	//0x0b2a		VoC_lw32_d(REG01,0x2236)
0xF0077032,	//0x0b2c		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xF4315884,	//0x0b2e		VoC_lw16i_short(FORMAT32,0x6,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xCD245895,	//0x0b30		VoC_multf32_rr(ACC0,REG4,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x1481CD6D,	//0x0b32		VoC_lw32_d(REG23,0x2230)(lo)	|	VoC_multf32_rr(ACC1,REG5,REG5,DEFAULT)
0xC92C2230,	//0x0b34		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32_d(REG23,0x2230)(hi)
0xFBD458A4,	//0x0b36		VoC_shr32_ri(ACC0,0xfffffffa,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xCD2658B5,	//0x0b38		VoC_multf32_rr(RL6,REG4,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xFA344D6F,	//0x0b3a		VoC_shr32_ri(ACC0,0x6,IN_PARALLEL)	|	VoC_multf32_rr(RL7,REG5,REG5,DEFAULT)
0x22361580,	//0x0b3c		VoC_sw32_d(REG01,0x2236)
0x200AC9BE,	//0x0b3e		VoC_lw16d_set_inc(REG2,0x2238,0x2)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0x15812238,	//0x0b40		VoC_sw32_d(REG23,0x2230)(lo)	|	VoC_lw16d_set_inc(REG2,0x2238,0x2)(hi)
0x7BD62230,	//0x0b42		VoC_shr32_ri(RL6,0xfffffffa,DEFAULT)	|	VoC_sw32_d(REG23,0x2230)(hi)
0x7A36D995,	//0x0b44		VoC_shr32_ri(RL6,0x6,DEFAULT)	|	VoC_lw32_p(ACC1,REG2,IN_PARALLEL)
0xCB34FBFD,	//0x0b46		VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xFA0CC92C,	//0x0b48		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFA14FBF4,	//0x0b4a		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x0B4F33C4,	//0x0b4c		VoC_bnltz32_r(Coolsand_UpdateSpkPower100,ACC0)
0xDFA9FF44,	//0x0b4e		VoC_pop16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0b4f		Coolsand_UpdateSpkPower100
0x1502DDD4,	//0x0b50		VoC_sw16_d(REG2,0x2238)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xE5802238,	//0x0b52		VoC_return	|	VoC_sw16_d(REG2,0x2238)(hi)
		//0x0b54		Coolsand_FilterUpdateCotrol_Int
0x0A80DFE9,	//0x0b54		VoC_lw16i(REG0,0x2100)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A812100,	//0x0b56		VoC_lw16i(REG1,0x210a)(lo)	|	VoC_lw16i(REG0,0x2100)(hi)
0x60E6210A,	//0x0b58		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x210a)(hi)
0xC818DFC6,	//0x0b5a		VoC_add32_rr(REG01,REG01,REG67,DEFAULT)	|	VoC_push16(REG6,IN_PARALLEL)
0x1884F019,	//0x0b5c		VoC_multf32_rp(ACC0,REG2,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x501998C5,	//0x0b5e		VoC_mac32_rp(REG3,REG1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG3,REG0,IN_PARALLEL)
0xFFC0D091,	//0x0b60		VoC_NOP	|	VoC_msu32_rp(REG2,REG1,IN_PARALLEL)
0xFA3D7A3C,	//0x0b62		VoC_shr32_ri(ACC1,0x7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x7,DEFAULT)
0xE0855FC7,	//0x0b64		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xE0047F27,	//0x0b66		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0B6C33C4,	//0x0b68		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs,ACC0)
0xCBE7FF47,	//0x0b6a		VoC_sub32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
		//0x0b6c		Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs
0x0B753617,	//0x0b6c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,REG45,RL7)
0xFF277F14,	//0x0b6e		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0x3287FFC0,	//0x0b70		VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,RL7)(lo)	|	VoC_NOP
0x77090B75,	//0x0b72		VoC_lw16i_short(ACC0_HI,0xfff8,DEFAULT)	|	VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,RL7)(hi)
0xFF2EE008,	//0x0b74		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)
		//0x0b75		Coolsand_FilterUpdateCotrol_Int_InstantCorrI
0x0B7A33C5,	//0x0b76		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs,ACC1)
0xCBAEFF46,	//0x0b78		VoC_sub32_rr(RL6,RL6,ACC1,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
		//0x0b7a		Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs
0x0B833616,	//0x0b7a		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,REG45,RL6)
0xFF2E7F15,	//0x0b7c		VoC_movreg32(RL6,ACC1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG45,DEFAULT)
0x3286FFC0,	//0x0b7e		VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,RL6)(lo)	|	VoC_NOP
0x770B0B83,	//0x0b80		VoC_lw16i_short(ACC1_HI,0xfff8,DEFAULT)	|	VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,RL6)(hi)
0xC1FEE00A,	//0x0b82		VoC_add16_rr(REG6,REG7,REG7,DEFAULT)	|	VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)
		//0x0b83		Coolsand_FilterUpdateCotrol_Int_InstantCorrQ
0x21680A84,	//0x0b84		VoC_lw16i(REG4,0x2168)
0x217A0A85,	//0x0b86		VoC_lw16i(REG5,0x217a)
0xC1754134,	//0x0b88		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xF4795F41,	//0x0b8a		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0xF40259A7,	//0x0b8c		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG4,DEFAULT)
0x5FC7D9AE,	//0x0b8e		VoC_push16(REG7,DEFAULT)	|	VoC_lw32_p(RL6,REG5,DEFAULT)
0x7F20DF40,	//0x0b90		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0xFF43FF29,	//0x0b92		VoC_lw32z(REG67,DEFAULT)	|	VoC_movreg32(REG23,ACC1,IN_PARALLEL)
0x0B9833C0,	//0x0b94		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_L0,REG01)
0xFFC04AC0,	//0x0b96		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(REG01,REG67,REG01,DEFAULT)
		//0x0b98		Coolsand_FilterUpdateCotrol_Int_L0
0x0B9B33C1,	//0x0b98		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_L1,REG23)
0xF026CAC9,	//0x0b9a		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_sub32_rr(REG23,REG67,REG23,DEFAULT)
		//0x0b9b		Coolsand_FilterUpdateCotrol_Int_L1
0x0BA03603,	//0x0b9c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_L2,REG01,REG67)
0x0BB4368B,	//0x0b9e		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_L3,REG23,REG67)
		//0x0ba0		Coolsand_FilterUpdateCotrol_Int_L2
0x42981406,	//0x0ba0		VoC_lw16_d(REG6,0x4298)
0x42990836,	//0x0ba2		VoC_mult16_rd(REG6,REG6,0x4299)
0xCB714B38,	//0x0ba4		VoC_sub32_rr(REG23,ACC1,RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG01,ACC0,RL7,DEFAULT)
0xFBF97BF8,	//0x0ba6		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xffffffff,DEFAULT)
0xF90A7908,	//0x0ba8		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xCCB54C34,	//0x0baa		VoC_multf32_rr(ACC1,REG2,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG0,REG6,DEFAULT)
0xCE9E4E4E,	//0x0bac		VoC_macX_rr(REG3,REG6,IN_PARALLEL)	|	VoC_macX_rr(REG1,REG6,DEFAULT)
0x493CFFC0,	//0x0bae		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_NOP
0xFFC0C975,	//0x0bb0		VoC_NOP	|	VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)
0xDDADDDA4,	//0x0bb2		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG4,DEFAULT)
		//0x0bb4		Coolsand_FilterUpdateCotrol_Int_L3
0x42981406,	//0x0bb4		VoC_lw16_d(REG6,0x4298)
0xDF875F00,	//0x0bb6		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xDF42DF01,	//0x0bb8		VoC_push32(REG45,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x21560A84,	//0x0bba		VoC_lw16i(REG4,0x2156)
0xF439413C,	//0x0bbc		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC13C4C94,	//0x0bbe		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG2,DEFAULT)
0xF47A4E1B,	//0x0bc0		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_mac32_rr(REG3,REG3,DEFAULT)
0x3304D9A5,	//0x0bc2		VoC_bez32_r(Coolsand_FilterUpdateCotrol_Int_SpkDataPower,ACC0)(lo)	|	VoC_lw32_p(ACC1,REG4,DEFAULT)
0xF0190BCF,	//0x0bc4		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_bez32_r(Coolsand_FilterUpdateCotrol_Int_SpkDataPower,ACC0)(hi)
0xFBF9CB29,	//0x0bc6		VoC_shr32_ri(REG23,0xffffffff,DEFAULT)	|	VoC_sub32_rr(REG23,ACC0,ACC1,DEFAULT)
0xF90A4CF4,	//0x0bc8		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)
0xFFC0CE56,	//0x0bca		VoC_NOP	|	VoC_macX_rr(REG2,REG6,DEFAULT)
0xFFC0C92C,	//0x0bcc		VoC_NOP	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDF02DDA4,	//0x0bce		VoC_pop32(REG45,DEFAULT)	|	VoC_sw32_p(ACC0,REG4,DEFAULT)
		//0x0bcf		Coolsand_FilterUpdateCotrol_Int_SpkDataPower
0xDF45D9A4,	//0x0bd0		VoC_push32(ACC1,DEFAULT)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0xD9A4DF44,	//0x0bd2		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_push32(ACC0,DEFAULT)
0xFFC059AD,	//0x0bd4		VoC_NAD(IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG5,DEFAULT)
0x0E382B80,	//0x0bd6		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xFF357A44,	//0x0bd8		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xDF01DF06,	//0x0bda		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x0BE63344,	//0x0bdc		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm,ACC0)
0x2B80FF3C,	//0x0bde		VoC_jal(Coolsand_CmplxAppxNorm_int)(lo)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0xFA440E38,	//0x0be0		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm_int)(hi)
0x0BE53344,	//0x0be2		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm_100,ACC0)
0xFF0EF048,	//0x0be4		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,DEFAULT)
		//0x0be5		Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm_100
		//0x0be6		Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm
0xFBFEFF31,	//0x0be6		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0xFA66C98E,	//0x0be8		VoC_shr32_ri(RL6,0xc,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG23,DEFAULT)
0x0BED3346,	//0x0bea		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_SpkSigSmoothPower_r,RL6)
0xF182F02C,	//0x0bec		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x0bed		Coolsand_FilterUpdateCotrol_Int_SpkSigSmoothPower_r
0xDF46DF44,	//0x0bee		VoC_push32(RL6,DEFAULT)	|	VoC_push32(ACC0,DEFAULT)
0x0E522B80,	//0x0bf0		VoC_jal(Coolsand_MSBPos)
0xDF04DF06,	//0x0bf2		VoC_pop32(ACC0,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x0BF931C3,	//0x0bf4		VoC_bnez16_r(Coolsand_FilterUpdateCotrol_Int_CouplingFactor_Init,REG3)
0x26741484,	//0x0bf6		VoC_lw32_d(ACC0,0x2674)
0xF182E5C4,	//0x0bf8		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_jump(Coolsand_FilterUpdateCotrol_Int_CouplingFactor_Init_END)
		//0x0bf9		Coolsand_FilterUpdateCotrol_Int_CouplingFactor_Init
0xFE94C2D2,	//0x0bfa		VoC_shr32_rr(ACC0,REG2,DEFAULT)	|	VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)
		//0x0bfc		Coolsand_FilterUpdateCotrol_Int_CouplingFactor_Init_END
0xD81BFBFC,	//0x0bfc		VoC_lw16_p(ACC1_HI,REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xD809DF44,	//0x0bfe		VoC_lw16_p(ACC0_HI,REG0,DEFAULT)	|	VoC_push32(ACC0,DEFAULT)
0xFA857A84,	//0x0c00		VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x0E382B80,	//0x0c02		VoC_jal(Coolsand_CmplxAppxNorm_int)
0x21440A80,	//0x0c04		VoC_lw16i(REG0,0x2144)
0xC030C1FE,	//0x0c06		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG7,DEFAULT)
0x08000A84,	//0x0c08		VoC_lw16i(REG4,0x800)
0x7A66D986,	//0x0c0a		VoC_shr32_ri(RL6,0xc,DEFAULT)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0x3616E005,	//0x0c0c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s,REG45,RL6)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0A8C0C12,	//0x0c0e		VoC_lw16i(RL6_LO,0x7ff)(lo)	|	VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s,REG45,RL6)(hi)
0xF00D07FF,	//0x0c10		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_lw16i(RL6_LO,0x7ff)(hi)
		//0x0c12		Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s
0x0C153346,	//0x0c12		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s_100,RL6)
0xF182F02C,	//0x0c14		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x0c15		Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s_100
0x0E522B80,	//0x0c16		VoC_jal(Coolsand_MSBPos)
0x43DCF187,	//0x0c18		VoC_sub16_rr(REG4,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0xE434E016,	//0x0c1a		VoC_and16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x0C273184,	//0x0c1c		VoC_bez16_r(Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos,REG4)
0xC31CF164,	//0x0c1e		VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0xb,DEFAULT)
0xC3A4F80C,	//0x0c20		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xFF21FEA4,	//0x0c22		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xC90CFBFC,	//0x0c24		VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xC2FCE5C4,	//0x0c26		VoC_sub16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_jump(Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos_end)
		//0x0c27		Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos
0xFEA4F80C,	//0x0c28		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x0c2a		Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos_end
0x0A8BF00A,	//0x0c2a		VoC_lw16i(ACC1_HI,0x10)(lo)	|	VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)
0x362C0010,	//0x0c2c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor,ACC1,ACC0)(lo)	|	VoC_lw16i(ACC1_HI,0x10)(hi)
0xF7E80C31,	//0x0c2e		VoC_lw16i_short(ACC0_LO,0xffffffff,DEFAULT)	|	VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor,ACC1,ACC0)(hi)
0xDF87F1E9,	//0x0c30		VoC_pop16(REG7,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0xf,DEFAULT)
		//0x0c31		Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor
0x218C0A80,	//0x0c32		VoC_lw16i(REG0,0x218c)
0xDF864038,	//0x0c34		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xE0825F05,	//0x0c36		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
0x007F0A85,	//0x0c38		VoC_lw16i(REG5,0x7f)
0x0C4D3416,	//0x0c3a		VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG2,REG6)
0x0C4D362C,	//0x0c3c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,ACC1,ACC0)
0xF2A2FF26,	//0x0c3e		VoC_lw16i_short(REG2,0x15,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0E522B80,	//0x0c40		VoC_jal(Coolsand_MSBPos)
0xC2D3F202,	//0x0c42		VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xFA45FE9D,	//0x0c44		VoC_shr32_ri(ACC1,0x8,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0x0A84E145,	//0x0c46		VoC_lw16i(REG4,0x80)(lo)	|	VoC_movreg16(REG5,ACC1_LO,DEFAULT)
0x34250080,	//0x0c48		VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG4,REG5)(lo)	|	VoC_lw16i(REG4,0x80)(hi)
0x0A850C4D,	//0x0c4a		VoC_lw16i(REG5,0x7f)(lo)	|	VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG4,REG5)(hi)
0xDFA9007F,	//0x0c4c		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i(REG5,0x7f)(hi)
		//0x0c4d		Coolsand_FilterUpdateCotrol_Int_FrameCnt_end
0xE580DC05,	//0x0c4e		VoC_return	|	VoC_sw16_p(REG5,REG0,DEFAULT)
		//0x0c50		Coolsand_UpdateFilterAmp
0x0A80DFE9,	//0x0c50		VoC_lw16i(REG0,0x2144)(lo)	|	VoC_push16(RA,DEFAULT)
0x40382144,	//0x0c52		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x2144)(hi)
0xC038FF44,	//0x0c54		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x42971409,	//0x0c56		VoC_lw16_d(ACC0_HI,0x4297)
0x78F59102,	//0x0c58		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add32_rp(REG45,ACC0,REG0,DEFAULT)
0x7815FF46,	//0x0c5a		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x3105E0E2,	//0x0c5c		VoC_bgtz16_r(Coolsand_ShrinkBit_abs,REG5)(lo)	|	VoC_lw16i_short(REG2,0xe,IN_PARALLEL)
0xF0030C61,	//0x0c5e		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_bgtz16_r(Coolsand_ShrinkBit_abs,REG5)(hi)
0xE0ACC2ED,	//0x0c60		VoC_movreg16(RL6_LO,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG3,REG5,DEFAULT)
		//0x0c61		Coolsand_ShrinkBit_abs
0x0E522B80,	//0x0c62		VoC_jal(Coolsand_MSBPos)
0x3183F004,	//0x0c64		VoC_bez16_r(Coolsand_ShrinkBit_end,REG3)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0240C6B,	//0x0c66		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bez16_r(Coolsand_ShrinkBit_end,REG3)(hi)
0xFE1CC31B,	//0x0c68		VoC_shr16_rr(REG4,REG3,DEFAULT)	|	VoC_sub16_rr(REG3,REG4,REG3,DEFAULT)
0xE08CE42C,	//0x0c6a		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
		//0x0c6b		Coolsand_ShrinkBit_end
0x0E522B80,	//0x0c6c		VoC_jal(Coolsand_MSBPos)
0x218C0A81,	//0x0c6e		VoC_lw16i(REG1,0x218c)
0x21000A82,	//0x0c70		VoC_lw16i(REG2,0x2100)
0xE0744079,	//0x0c72		VoC_lw16i_short(REG4,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xC0BA42E3,	//0x0c74		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0xF5E15811,	//0x0c76		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xFF447E19,	//0x0c78		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x210A0A83,	//0x0c7a		VoC_lw16i(REG3,0x210a)
0xF8F140FB,	//0x0c7c		VoC_shr16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xDFA97811,	//0x0c7e		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x2,DEFAULT)
0xF8EF1852,	//0x0c80		VoC_shr16_ri(REG7,0xfffffffd,IN_PARALLEL)	|	VoC_multf32_rp(REG45,REG1,REG2,DEFAULT)
0xF6E6508B,	//0x0c82		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_msu32_rp(REG1,REG3,DEFAULT)
0x253E0A80,	//0x0c84		VoC_lw16i(REG0,0x253e)
0x223B0700,	//0x0c86		VoC_add16_rd(REG0,REG0,0x223b)
0xFA547A52,	//0x0c88		VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
0xFBFC7BFA,	//0x0c8a		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xFF215800,	//0x0c8c		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xE0117828,	//0x0c8e		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x5,DEFAULT)
0x0C963401,	//0x0c90		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L1,REG0,REG1)
0x40000A81,	//0x0c92		VoC_lw16i(REG1,0x4000)
0x0CBE2B00,	//0x0c94		VoC_jump_lg(Coolsand_UpdateFilterAmp_End)
		//0x0c96		Coolsand_UpdateFilterAmp_L1
0x3401F041,	//0x0c96		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L2,REG0,REG1)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0A810C9D,	//0x0c98		VoC_lw16i(REG1,0x2000)(lo)	|	VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L2,REG0,REG1)(hi)
0x2B002000,	//0x0c9a		VoC_jump_lg(Coolsand_UpdateFilterAmp_End)(lo)	|	VoC_lw16i(REG1,0x2000)(hi)
0xF0610CBE,	//0x0c9c		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_jump_lg(Coolsand_UpdateFilterAmp_End)(hi)
		//0x0c9d		Coolsand_UpdateFilterAmp_L2
0x0CA33401,	//0x0c9e		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L3,REG0,REG1)
0x15550A81,	//0x0ca0		VoC_lw16i(REG1,0x1555)
0xF081E5DC,	//0x0ca2		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0ca3		Coolsand_UpdateFilterAmp_L3
0x0CA93401,	//0x0ca4		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L4,REG0,REG1)
0x10000A81,	//0x0ca6		VoC_lw16i(REG1,0x1000)
0xF0A1E5D6,	//0x0ca8		VoC_lw16i_short(REG1,0x5,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0ca9		Coolsand_UpdateFilterAmp_L4
0x0CAF3401,	//0x0caa		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L5,REG0,REG1)
0x0CCC0A81,	//0x0cac		VoC_lw16i(REG1,0xccc)
0xF0C1E5D0,	//0x0cae		VoC_lw16i_short(REG1,0x6,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0caf		Coolsand_UpdateFilterAmp_L5
0x0CB53401,	//0x0cb0		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L6,REG0,REG1)
0x0AAA0A81,	//0x0cb2		VoC_lw16i(REG1,0xaaa)
0xF0E1E5CA,	//0x0cb4		VoC_lw16i_short(REG1,0x7,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0cb5		Coolsand_UpdateFilterAmp_L6
0x0CBC3401,	//0x0cb6		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L7,REG0,REG1)
0x09240A81,	//0x0cb8		VoC_lw16i(REG1,0x924)
0xFFC065C4,	//0x0cba		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0cbc		Coolsand_UpdateFilterAmp_L7
0x08000A81,	//0x0cbc		VoC_lw16i(REG1,0x800)
		//0x0cbe		Coolsand_UpdateFilterAmp_End
0xF90A790C,	//0x0cbe		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xF47277F9,	//0x0cc0		VoC_lw16i_short(FORMATX,0xe,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0xCD4D4CCC,	//0x0cc2		VoC_multf32_rr(ACC1,REG5,REG1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG1,DEFAULT)
0xCEA14E51,	//0x0cc4		VoC_macX_rr(REG4,REG1,IN_PARALLEL)	|	VoC_macX_rr(REG2,REG1,DEFAULT)
0x1F281804,	//0x0cc6		VoC_lw16i_set_inc(REG0,0x1f28,0x1)
0x1F701805,	//0x0cc8		VoC_lw16i_set_inc(REG1,0x1f70,0x1)
0x7BFAFF2A,	//0x0cca		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0x180AFBFC,	//0x0ccc		VoC_lw16i_set_inc(REG2,0x1fb8,0x2)(lo)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x180B1FB8,	//0x0cce		VoC_lw16i_set_inc(REG3,0x2048,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x1fb8,0x2)(hi)
0x48182048,	//0x0cd0		VoC_add32_rr(REG01,REG01,REG67,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x2048,0x2)(hi)
0x4859C859,	//0x0cd2		VoC_add32_rr(REG23,REG23,REG67,DEFAULT)	|	VoC_add32_rr(REG23,REG23,REG67,IN_PARALLEL)
0x7F23F5E1,	//0x0cd4		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)
0x790CF45A,	//0x0cd6		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xb,IN_PARALLEL)
0xE918F90E,	//0x0cd8		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x99C51944,	//0x0cda		VoC_multf32_rp(ACC1,REG7,REG0,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0xD1705060,	//0x0cdc		VoC_macXinc_rp(REG6,REG0,IN_PARALLEL)	|	VoC_macX_rp(REG4,REG0,DEFAULT)
0xFFC0FFC0,	//0x0cde		VoC_NOP	|	VoC_NOP
0xFFC0FFC0,	//0x0ce0		VoC_NOP	|	VoC_NOP
0xFFC0FFC0,	//0x0ce2		VoC_NOP	|	VoC_NOP
0xD02950B9,	//0x0ce4		VoC_mac32_rp(REG5,REG1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG1,DEFAULT)
0xD16150F1,	//0x0ce6		VoC_macXinc_rp(REG4,REG1,IN_PARALLEL)	|	VoC_msuX_rp(REG6,REG1,DEFAULT)
0x7BA4FFC0,	//0x0ce8		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_NOP
0x7A64FBA5,	//0x0cea		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff4,IN_PARALLEL)
0xFFC0FA65,	//0x0cec		VoC_NOP	|	VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)
0x915F9116,	//0x0cee		VoC_add32_rp(RL7,ACC1,REG3,DEFAULT)	|	VoC_add32_rp(RL6,ACC0,REG2,DEFAULT)
0xDDDFDDD6,	//0x0cf0		VoC_sw32inc_p(RL7,REG3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
		//0x0cf1		VoC_endloop0
0xFFC06580,	//0x0cf2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0cf4		Coolsand_BackCopyVec
0xF3FA77D1,	//0x0cf4		VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0xC0BA4079,	//0x0cf6		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x5E08F80F,	//0x0cf8		VoC_inc_p(REG1,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xD9CCDE10,	//0x0cfa		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0xD9CCE7C2,	//0x0cfc		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x0cfe		VoC_endloop0
0xE580DDD4,	//0x0cfe		VoC_return	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0d00		Coolsand_FlipVec
0xD899C0BA,	//0x0d00		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xDE1067C3,	//0x0d02		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDCA9D899,	//0x0d04		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x0d05		VoC_endloop0
0xFFC06580,	//0x0d06		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0d08		Coolsand_MulVec
0xF0067051,	//0x0d08		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF8087053,	//0x0d0a		VoC_shr16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9CB6606,	//0x0d0c		VoC_lw32inc_p(REG67,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x8FD78F96,	//0x0d0e		VoC_multf16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_multf16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD9CBFFC0,	//0x0d10		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_NOP
		//0x0d12		VoC_endloop0
0xE580DDDB,	//0x0d12		VoC_return	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x0d14		Coolsand_ClearVec
0x7F44F051,	//0x0d14		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xE7C1F80F,	//0x0d16		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
		//0x0d18		VoC_endloop0
0xE580DDCC,	//0x0d18		VoC_return	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0d1a		Coolsand_AddVec
0xD88667C4,	//0x0d1a		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xD886838E,	//0x0d1c		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
		//0x0d1e		VoC_endloop0
0xE580DCA6,	//0x0d1e		VoC_return	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x0d20		Coolsand_IFFT16
0x7050DFE9,	//0x0d20		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2B80DF40,	//0x0d22		VoC_jal(Coolsand_ReverseIndex)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0xDF010E13,	//0x0d24		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(Coolsand_ReverseIndex)(hi)
0xF0086060,	//0x0d26		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0xFFC05F41,	//0x0d28		VoC_NAD(IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x0E132B80,	//0x0d2a		VoC_jal(Coolsand_ReverseIndex)
0xF4795F00,	//0x0d2c		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x223C180A,	//0x0d2e		VoC_lw16i_set_inc(REG2,0x223c,0x2)
0x225C180B,	//0x0d30		VoC_lw16i_set_inc(REG3,0x225c,0x2)
0xF0087051,	//0x0d32		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x7FFF0A86,	//0x0d34		VoC_lw16i(REG6,0x7fff)
0xDF406912,	//0x0d36		VoC_push32(REG01,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x59CFD9C2,	//0x0d38		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x61E7CD74,	//0x0d3a		VoC_movreg16(REG7,RL7_HI,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG6,IN_PARALLEL)
0x4DF6F7CF,	//0x0d3c		VoC_multf32_rr(RL6,REG7,REG6,DEFAULT)	|	VoC_movreg16(RL7_HI,RL7_LO,IN_PARALLEL)
0x7A85F68B,	//0x0d3e		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)
0x4B65FA87,	//0x0d40		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_shr32_ri(RL7,0x10,IN_PARALLEL)
0x4BF7C964,	//0x0d42		VoC_sub32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC1,ACC0,IN_PARALLEL)
0xDDD4C9F6,	//0x0d44		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add32_rr(RL6,RL7,RL6,IN_PARALLEL)
0xDDDEDDD5,	//0x0d46		VoC_sw32inc_p(RL6,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x0d48		VoC_endloop0
0x1810DDDF,	//0x0d48		VoC_lw16i_set_inc(REG0,0x223c,0x4)(lo)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
0x1811223C,	//0x0d4a		VoC_lw16i_set_inc(REG1,0x225c,0x4)(lo)	|	VoC_lw16i_set_inc(REG0,0x223c,0x4)(hi)
0x6899225C,	//0x0d4c		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x225c,0x4)(hi)
0xDF40F402,	//0x0d4e		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xEFF259C6,	//0x0d50		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF90A5982,	//0x0d52		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFBFA59CF,	//0x0d54		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xF90C598B,	//0x0d56		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xFBFB4D14,	//0x0d58		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xF90E4E6A,	//0x0d5a		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG5,REG2,DEFAULT)
0x5F00CD95,	//0x0d5c		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rr(ACC1,REG6,REG2,DEFAULT)
0x4BA4CEBA,	//0x0d5e		VoC_sub32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_macX_rr(REG7,REG2,IN_PARALLEL)
0x4BEDC9A6,	//0x0d60		VoC_sub32_rr(ACC1,RL7,ACC1,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xDDC6C9EF,	//0x0d62		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC1,IN_PARALLEL)
0xDDCFDDC4,	//0x0d64		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0d66		VoC_endloop0
0x1810DDCD,	//0x0d66		VoC_lw16i_set_inc(REG0,0x223e,0x4)(lo)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0x1811223E,	//0x0d68		VoC_lw16i_set_inc(REG1,0x225e,0x4)(lo)	|	VoC_lw16i_set_inc(REG0,0x223e,0x4)(hi)
0x6899225E,	//0x0d6a		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x225e,0x4)(hi)
0xDF40F402,	//0x0d6c		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xEFF259C6,	//0x0d6e		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF90A5982,	//0x0d70		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFBFA59CF,	//0x0d72		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xF90C598B,	//0x0d74		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xFBFB4D14,	//0x0d76		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xF90E4E6A,	//0x0d78		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG5,REG2,DEFAULT)
0x5F00CD95,	//0x0d7a		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rr(ACC1,REG6,REG2,DEFAULT)
0x4BE4CEBA,	//0x0d7c		VoC_sub32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_macX_rr(REG7,REG2,IN_PARALLEL)
0x49ADC9E7,	//0x0d7e		VoC_add32_rr(ACC1,RL6,ACC1,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,IN_PARALLEL)
0xDDCFCBAE,	//0x0d80		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC1,IN_PARALLEL)
0xDDC6DDCC,	//0x0d82		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0d84		VoC_endloop0
0x1880DDC5,	//0x0d84		VoC_lw16i_set_inc(REG0,0x223c,0x10)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x1881223C,	//0x0d86		VoC_lw16i_set_inc(REG1,0x225c,0x10)(lo)	|	VoC_lw16i_set_inc(REG0,0x223c,0x10)(hi)
0x180A225C,	//0x0d88		VoC_lw16i_set_inc(REG2,0x237c,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x225c,0x10)(hi)
0x180B237C,	//0x0d8a		VoC_lw16i_set_inc(REG3,0x2384,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x237c,0x2)(hi)
0xFFC02384,	//0x0d8c		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x2384,0x2)(hi)
0x0DB62C09,	//0x0d8e		VoC_loop_i(0x1,0x4)
0xE08758A4,	//0x0d90		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDF40D8B5,	//0x0d92		VoC_push32(REG01,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xC1CF41C6,	//0x0d94		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG7,REG0,DEFAULT)
0xDF41685C,	//0x0d96		VoC_push32(REG23,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x59BBD9B1,	//0x0d98		VoC_lw32_p(REG67,REG7,DEFAULT)	|	VoC_lw32_p(REG23,REG6,DEFAULT)
0x5F43FBF9,	//0x0d9a		VoC_push32(REG67,DEFAULT)	|	VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)
0x790AFBFB,	//0x0d9c		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x4D14F90E,	//0x0d9e		VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x4E63CD55,	//0x0da0		VoC_macX_rr(REG4,REG3,DEFAULT)	|	VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)
0x4EAECEAB,	//0x0da2		VoC_msu32_rr(REG5,REG6,DEFAULT)	|	VoC_macX_rr(REG5,REG3,IN_PARALLEL)
0x4EEFCE26,	//0x0da4		VoC_msuX_rr(REG5,REG7,DEFAULT)	|	VoC_mac32_rr(REG4,REG6,IN_PARALLEL)
0xDF03CEA7,	//0x0da6		VoC_pop32(REG67,DEFAULT)	|	VoC_macX_rr(REG4,REG7,IN_PARALLEL)
0x91043C26,	//0x0da8		VoC_add32_rp(ACC0,ACC0,REG0,IN_PARALLEL)	|	VoC_sub32_pr(RL6,REG0,ACC0,DEFAULT)
0x914D3C6F,	//0x0daa		VoC_add32_rp(ACC1,ACC1,REG1,IN_PARALLEL)	|	VoC_sub32_pr(RL7,REG1,ACC1,DEFAULT)
0xE0825DB6,	//0x0dac		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_sw32_p(RL6,REG6,DEFAULT)
0xC0865DC4,	//0x0dae		VoC_add16_rr(REG6,REG2,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC08F5DCD,	//0x0db0		VoC_add16_rr(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0db2		VoC_endloop0
0xDF01DDBF,	//0x0db2		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_p(RL7,REG7,DEFAULT)
0xE0255F00,	//0x0db4		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
		//0x0db6		VoC_endloop1
0xC1494140,	//0x0db6		VoC_add16_rr(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG5,REG0,DEFAULT)
0x223C1808,	//0x0db8		VoC_lw16i_set_inc(REG0,0x223c,0x2)
0x225C1809,	//0x0dba		VoC_lw16i_set_inc(REG1,0x225c,0x2)
0x237C1806,	//0x0dbc		VoC_lw16i_set_inc(REG2,0x237c,0x1)
0x23841807,	//0x0dbe		VoC_lw16i_set_inc(REG3,0x2384,0x1)
0x41C6F207,	//0x0dc0		VoC_add16_rr(REG6,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x10,DEFAULT)
0xE91EC1CF,	//0x0dc2		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)
0xD8B5D8A4,	//0x0dc4		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xD9B1DF41,	//0x0dc6		VoC_lw32_p(REG23,REG6,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFBF959BB,	//0x0dc8		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG7,DEFAULT)
0xFBFB5F43,	//0x0dca		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xF90E790A,	//0x0dcc		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCD554D14,	//0x0dce		VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xCEAB4E63,	//0x0dd0		VoC_macX_rr(REG5,REG3,IN_PARALLEL)	|	VoC_macX_rr(REG4,REG3,DEFAULT)
0xCE264EAE,	//0x0dd2		VoC_mac32_rr(REG4,REG6,IN_PARALLEL)	|	VoC_msu32_rr(REG5,REG6,DEFAULT)
0xCEA74EEF,	//0x0dd4		VoC_macX_rr(REG4,REG7,IN_PARALLEL)	|	VoC_msuX_rr(REG5,REG7,DEFAULT)
0x3C26DF03,	//0x0dd6		VoC_sub32_pr(RL6,REG0,ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x3C6F9104,	//0x0dd8		VoC_sub32_pr(RL7,REG1,ACC1,DEFAULT)	|	VoC_add32_rp(ACC0,ACC0,REG0,IN_PARALLEL)
0x5DB6914D,	//0x0dda		VoC_sw32_p(RL6,REG6,DEFAULT)	|	VoC_add32_rp(ACC1,ACC1,REG1,IN_PARALLEL)
0x5DC4E104,	//0x0ddc		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,IN_PARALLEL)
0xDDCDC106,	//0x0dde		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG0,IN_PARALLEL)
0x5DBFDF01,	//0x0de0		VoC_sw32_p(RL7,REG7,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
		//0x0de1		VoC_endloop0
0xDF01C10F,	//0x0de2		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG7,REG4,REG1,IN_PARALLEL)
0x223C1808,	//0x0de4		VoC_lw16i_set_inc(REG0,0x223c,0x2)
0x225C1809,	//0x0de6		VoC_lw16i_set_inc(REG1,0x225c,0x2)
0xF0077032,	//0x0de8		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x0E0F2C05,	//0x0dea		VoC_loop_i(0x1,0x2)
0x59C5D9C4,	//0x0dec		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x691DFF26,	//0x0dee		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0xF076FF2F,	//0x0df0		VoC_lw16i_short(STATUS,0x3,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0x6574FAFE,	//0x0df2		VoC_xor32_rr(ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x1f,DEFAULT)
0x657DFAFF,	//0x0df4		VoC_xor32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0x1f,IN_PARALLEL)
0x4B7DCB34,	//0x0df6		VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x6574FA24,	//0x0df8		VoC_xor32_rr(ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x4,IN_PARALLEL)
0xE57DFA25,	//0x0dfa		VoC_xor32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,IN_PARALLEL)
0x0E002E80,	//0x0dfc		VoC_boe0z16_r(Coolsand_IFFT16_L0)
0xFFC07F47,	//0x0dfe		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x0e00		Coolsand_IFFT16_L0
0x0E042F80,	//0x0e00		VoC_boe1z16_r(Coolsand_IFFT16_L1)
0xFFC07F46,	//0x0e02		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
		//0x0e04		Coolsand_IFFT16_L1
0xCB344B7D,	//0x0e04		VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xFB857B84,	//0x0e06		VoC_shr32_ri(ACC1,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x5CA9D9C4,	//0x0e08		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C5FF26,	//0x0e0a		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
		//0x0e0c		VoC_endloop0
0xFF2F5CAB,	//0x0e0c		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_HI,REG2,DEFAULT)
0xE062E020,	//0x0e0e		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
		//0x0e0f		VoC_endloop1
0xFFC0DFA9,	//0x0e10		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFC0E580,	//0x0e12		VoC_push16(REG0,DEFAULT)	|	VoC_return
		//0x0e13		Coolsand_ReverseIndex
0xD9C6D9C7,	//0x0e14		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xD9C4D9C5,	//0x0e16		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xD9C2D9C3,	//0x0e18		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD801D9C1,	//0x0e1a		VoC_lw16_p(REG1,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x61E6DF80,	//0x0e1c		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x618AF6CF,	//0x0e1e		VoC_movreg16(ACC1_LO,RL6_LO,DEFAULT)	|	VoC_movreg16(RL7_HI,REG6,IN_PARALLEL)
0x61A2F74C,	//0x0e20		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_movreg16(RL6_LO,ACC1_LO,IN_PARALLEL)
0x6164F64D,	//0x0e22		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_movreg16(RL6_HI,REG2,IN_PARALLEL)
0x6121F68B,	//0x0e24		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)
0x60A3F629,	//0x0e26		VoC_movreg16(REG3,REG5,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG1,IN_PARALLEL)
0xDDC7F665,	//0x0e28		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0xDDC5DDC6,	//0x0e2a		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xDDC3DDC4,	//0x0e2c		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC1DDC2,	//0x0e2e		VoC_sw32inc_p(REG23,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE580DC01,	//0x0e30		VoC_return	|	VoC_sw16_p(REG1,REG0,DEFAULT)
		//0x0e32		Coolsand_CopyVec
0xF80F59CC,	//0x0e32		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CCE7C2,	//0x0e34		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x0e36		VoC_endloop0
0xE580DDD4,	//0x0e36		VoC_return	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0e38		Coolsand_CmplxAppxNorm_int
0xFAFC7F22,	//0x0e38		VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDF466562,	//0x0e3a		VoC_push32(RL6,IN_PARALLEL)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0xFAFD7F2E,	//0x0e3c		VoC_shr32_ri(ACC1,0x1f,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xCAA4656E,	//0x0e3e		VoC_sub32_rr(ACC0,REG45,ACC0,IN_PARALLEL)	|	VoC_xor32_rr(RL6,ACC1,DEFAULT)
0x3625CBAD,	//0x0e40		VoC_bgt32_rr(Coolsand_CmplxAppxNorm_int_300,ACC0,ACC1)(lo)	|	VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)
0x7F2C0E46,	//0x0e42		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_CmplxAppxNorm_int_300,ACC0,ACC1)(hi)
0xFFC0FF25,	//0x0e44		VoC_NAD	|	VoC_movreg32(ACC1,ACC0,IN_PARALLEL)
		//0x0e46		Coolsand_CmplxAppxNorm_int_300
0xFF2A7F26,	//0x0e46		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFD7BDC,	//0x0e48		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffb,DEFAULT)
0xC9554B34,	//0x0e4a		VoC_add32_rr(ACC1,ACC1,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFA1D7A2C,	//0x0e4c		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0xDF06492C,	//0x0e4e		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFFC06580,	//0x0e50		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0e52		Coolsand_MSBPos
0xFAFE7F34,	//0x0e52		VoC_shr32_ri(RL6,0x1f,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0xDF446574,	//0x0e54		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_xor32_rr(ACC0,RL6,DEFAULT)
0xE0034B34,	//0x0e56		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xF0076684,	//0x0e58		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
0x0E5E3304,	//0x0e5a		VoC_bez32_r(Coolsand_MSBPos_L0,ACC0)
		//0x0e5c		VoC_endloop0
0xFA0C5E18,	//0x0e5c		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0e5e		Coolsand_MSBPos_L0
0xE580DF04,	//0x0e5e		VoC_return	|	VoC_pop32(ACC0,DEFAULT)
		//0x0e60		Coolsand_ComputeNoiseWeight_DeciDirectCTRL
0x0A80DFE9,	//0x0e60		VoC_lw16i(REG0,0x2100)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A812100,	//0x0e62		VoC_lw16i(REG1,0x210a)(lo)	|	VoC_lw16i(REG0,0x2100)(hi)
0x0A82210A,	//0x0e64		VoC_lw16i(REG2,0x2196)(lo)	|	VoC_lw16i(REG1,0x210a)(hi)
0x14042196,	//0x0e66		VoC_lw16_d(REG4,0x2205)(lo)	|	VoC_lw16i(REG2,0x2196)(hi)
0x14072205,	//0x0e68		VoC_lw16_d(REG7,0x223b)(lo)	|	VoC_lw16_d(REG4,0x2205)(hi)
0x4038223B,	//0x0e6a		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0x223b)(hi)
0x4079C0BA,	//0x0e6c		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)
0xD809C0BA,	//0x0e6e		VoC_lw16_p(ACC0_HI,REG0,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)
0x7A84D81B,	//0x0e70		VoC_shr32_ri(ACC0,0x10,DEFAULT)	|	VoC_lw16_p(ACC1_HI,REG1,DEFAULT)
0xFFC0FA85,	//0x0e72		VoC_NAD	|	VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)
0x0E382B80,	//0x0e74		VoC_jal(Coolsand_CmplxAppxNorm_int)
0x26745424,	//0x0e76		VoC_bngt32_rd(DeciDirectCTRL_not_saturation_L00,ACC0,0x2674)
0x26741484,	//0x0e78		VoC_lw32_d(ACC0,0x2674)
		//0x0e7a		DeciDirectCTRL_not_saturation_L00
0x26765024,	//0x0e7a		VoC_bgt32_rd(DeciDirectCTRL_not_saturation_L01,ACC0,0x2676)
0x26761484,	//0x0e7c		VoC_lw32_d(ACC0,0x2676)
		//0x0e7e		DeciDirectCTRL_not_saturation_L01
0x7F22FFC0,	//0x0e7e		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0xFFC0F5F9,	//0x0e80		VoC_NOP	|	VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)
0xF081CD27,	//0x0e82		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_multf32_rr(RL7,REG4,REG4,DEFAULT)
0xDF47FFC0,	//0x0e84		VoC_push32(RL7,DEFAULT)	|	VoC_NOP
0x363CD994,	//0x0e86		VoC_bgt32_rr(DeciDirectCTRL_L12,RL7,ACC0)(lo)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0xF0210E8A,	//0x0e88		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_bgt32_rr(DeciDirectCTRL_L12,RL7,ACC0)(hi)
		//0x0e8a		DeciDirectCTRL_L12
0xCBE2F6B9,	//0x0e8a		VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff5,DEFAULT)
0xF90CFBFA,	//0x0e8c		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xF099CD4F,	//0x0e8e		VoC_lw16i_short(FORMAT32,0x4,DEFAULT)	|	VoC_multf32_rr(RL7,REG5,REG1,DEFAULT)
0xFFC0CD0E,	//0x0e90		VoC_NOP	|	VoC_multf32_rr(RL6,REG4,REG1,DEFAULT)
0xC8A2C9BA,	//0x0e92		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_add32_rr(REG45,RL6,RL7,DEFAULT)
0xDD92FFC0,	//0x0e94		VoC_sw32_p(REG45,REG2,DEFAULT)	|	VoC_NOP
0x21A80A80,	//0x0e96		VoC_lw16i(REG0,0x21a8)
0x25AA0A81,	//0x0e98		VoC_lw16i(REG1,0x25aa)
0x4079C038,	//0x0e9a		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xC079C038,	//0x0e9c		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)
0x25BC180A,	//0x0e9e		VoC_lw16i_set_inc(REG2,0x25bc,0x2)
0x21BA180B,	//0x0ea0		VoC_lw16i_set_inc(REG3,0x21ba,0x2)
0xC0BA40FB,	//0x0ea2		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xD986C0BA,	//0x0ea4		VoC_lw32_p(RL6,REG0,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x36B2D98F,	//0x0ea6		VoC_bngt32_rr(DeciDirectCTRL_L13,RL6,REG45)(lo)	|	VoC_lw32_p(RL7,REG1,DEFAULT)
0xFF160EAA,	//0x0ea8		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_bngt32_rr(DeciDirectCTRL_L13,RL6,REG45)(hi)
		//0x0eaa		DeciDirectCTRL_L13
0x0EAD36BA,	//0x0eaa		VoC_bngt32_rr(DeciDirectCTRL_L14,RL7,REG45)
0xDD86FF17,	//0x0eac		VoC_sw32_p(RL6,REG0,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x0ead		DeciDirectCTRL_L14
0xFF145D8F,	//0x0eae		VoC_movreg32(ACC0,REG45,IN_PARALLEL)	|	VoC_sw32_p(RL7,REG1,DEFAULT)
0x0ED93304,	//0x0eb0		VoC_bez32_r(DeciDirectCTRL_L15,ACC0)
0x22051406,	//0x0eb2		VoC_lw16_d(REG6,0x2205)
0x42031405,	//0x0eb4		VoC_lw16_d(REG5,0x4203)
0x41FF1404,	//0x0eb6		VoC_lw16_d(REG4,0x41ff)
0x0EBC34A6,	//0x0eb8		VoC_bngt16_rr(DeciDirectCTRL_L16,REG4,REG6)
0x42021405,	//0x0eba		VoC_lw16_d(REG5,0x4202)
		//0x0ebc		DeciDirectCTRL_L16
0x41FE1404,	//0x0ebc		VoC_lw16_d(REG4,0x41fe)
0x0EC234A6,	//0x0ebe		VoC_bngt16_rr(DeciDirectCTRL_L17,REG4,REG6)
0x42011405,	//0x0ec0		VoC_lw16_d(REG5,0x4201)
		//0x0ec2		DeciDirectCTRL_L17
0x41FD1404,	//0x0ec2		VoC_lw16_d(REG4,0x41fd)
0x0EC834A6,	//0x0ec4		VoC_bngt16_rr(DeciDirectCTRL_L18,REG4,REG6)
0x42001405,	//0x0ec6		VoC_lw16_d(REG5,0x4200)
		//0x0ec8		DeciDirectCTRL_L18
0x819EF026,	//0x0ec8		VoC_add16_rp(REG6,REG6,REG3,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0ED834B5,	//0x0eca		VoC_bngt16_rr(DeciDirectCTRL_L115,REG6,REG5)
0xD995F006,	//0x0ecc		VoC_lw32_p(ACC1,REG2,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0ED236AC,	//0x0ece		VoC_bngt32_rr(DeciDirectCTRL_L20,ACC1,ACC0)
0xFFC07F25,	//0x0ed0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
		//0x0ed2		DeciDirectCTRL_L20
0x0ED536AF,	//0x0ed2		VoC_bngt32_rr(DeciDirectCTRL_L21,ACC1,RL7)
0xDD8CFF3D,	//0x0ed4		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_movreg32(ACC1,RL7,DEFAULT)
		//0x0ed5		DeciDirectCTRL_L21
0xDD97DD85,	//0x0ed6		VoC_sw32_p(RL7,REG2,DEFAULT)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
		//0x0ed8		DeciDirectCTRL_L115
0xD981DC36,	//0x0ed8		VoC_lw32_p(REG23,REG0,DEFAULT)	|	VoC_sw16_p(REG6,REG3,DEFAULT)
		//0x0ed9		DeciDirectCTRL_L15
0x3341FFC0,	//0x0eda		VoC_bnez32_r(DeciDirectCTRL_L22,REG23)(lo)	|	VoC_NOP
0xF0220EDE,	//0x0edc		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_bnez32_r(DeciDirectCTRL_L22,REG23)(hi)
		//0x0ede		DeciDirectCTRL_L22
0x00200A84,	//0x0ede		VoC_lw16i(REG4,0x20)
0x2B80DF44,	//0x0ee0		VoC_jal(Coolsand_ShrinkBit)(lo)	|	VoC_push32(ACC0,DEFAULT)
0xDF060FEE,	//0x0ee2		VoC_pop32(RL6,DEFAULT)	|	VoC_jal(Coolsand_ShrinkBit)(hi)
0x25D01584,	//0x0ee4		VoC_sw32_d(ACC0,0x25d0)
0xDF01FF27,	//0x0ee6		VoC_pop32(REG23,DEFAULT)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xE0256104,	//0x0ee8		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0xFFC07BC9,	//0x0eea		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff9,DEFAULT)
		//0x0eec		DeciDirectCTRL_L124
0x0EF2342C,	//0x0eec		VoC_bgt16_rr(DeciDirectCTRL_L123,REG5,REG4)
0xFA09780C,	//0x0eee		VoC_shr32_ri(REG23,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xFFC065FC,	//0x0ef0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DeciDirectCTRL_L124)
		//0x0ef2		DeciDirectCTRL_L123
0x7FFF0A8A,	//0x0ef2		VoC_lw16i(ACC1_LO,0x7fff)
0x3629F00B,	//0x0ef4		VoC_bgt32_rr(DeciDirectCTRL_L223,ACC1,REG23)(lo)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0xFF290EF8,	//0x0ef6		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_bgt32_rr(DeciDirectCTRL_L223,ACC1,REG23)(hi)
		//0x0ef8		DeciDirectCTRL_L223
0x21C40A86,	//0x0ef8		VoC_lw16i(REG6,0x21c4)
0xCBBDC1BE,	//0x0efa		VoC_sub32_rr(ACC1,RL6,RL7,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x1482DC62,	//0x0efc		VoC_lw32_d(REG45,0x25ce)(lo)	|	VoC_sw16_p(REG2,REG6,DEFAULT)
0x318725CE,	//0x0efe		VoC_bez16_r(DeciDirectCTRL_L23_1,REG7)(lo)	|	VoC_lw32_d(REG45,0x25ce)(hi)
0x14060F14,	//0x0f00		VoC_lw16_d(REG6,0x4209)(lo)	|	VoC_bez16_r(DeciDirectCTRL_L23_1,REG7)(hi)
0xFFC04209,	//0x0f02		VoC_NAD	|	VoC_lw16_d(REG6,0x4209)(hi)
0x0F0E2E38,	//0x0f04		VoC_loop_r(0,REG7)
0xF4027A22,	//0x0f06		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x4,DEFAULT)
0xF5897BFA,	//0x0f08		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xF90C4D74,	//0x0f0a		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG6,DEFAULT)
0xFFC0CE66,	//0x0f0c		VoC_NOP	|	VoC_macX_rr(REG4,REG6,DEFAULT)
		//0x0f0e		VoC_endloop0
0xFFC0FF22,	//0x0f0e		VoC_NOP	|	VoC_movreg32(REG45,ACC0,DEFAULT)
		//0x0f10		DeciDirectCTRL_L23_0
0x0F143696,	//0x0f10		VoC_bngt32_rr(DeciDirectCTRL_L23_1,REG45,RL6)
0xFFC04ABD,	//0x0f12		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(ACC1,REG45,RL7,DEFAULT)
		//0x0f14		DeciDirectCTRL_L23_1
0x0F1833C5,	//0x0f14		VoC_bnltz32_r(DeciDirectCTRL_L24,ACC1)
0xFFC07F45,	//0x0f16		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
		//0x0f18		DeciDirectCTRL_L24
0x21CE0A82,	//0x0f18		VoC_lw16i(REG2,0x21ce)
0xC0BA7F2F,	//0x0f1a		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC1,DEFAULT)
0x1401C0BA,	//0x0f1c		VoC_lw16_d(REG1,0x429d)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xD994429D,	//0x0f1e		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16_d(REG1,0x429d)(hi)
0xCBE2F719,	//0x0f20		VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,DEFAULT)
0xF90CFBFA,	//0x0f22		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xF0F9CD4E,	//0x0f24		VoC_lw16i_short(FORMAT32,0x7,DEFAULT)	|	VoC_multf32_rr(RL6,REG5,REG1,DEFAULT)
0xFFC0CD0F,	//0x0f26		VoC_NOP	|	VoC_multf32_rr(RL7,REG4,REG1,DEFAULT)
0xC9E2C9F7,	//0x0f28		VoC_add32_rr(REG45,RL7,ACC0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,RL6,DEFAULT)
0x25D01486,	//0x0f2a		VoC_lw32_d(RL6,0x25d0)
0x2B80F3E2,	//0x0f2c		VoC_jal(Coolsand_MSBPos)(lo)	|	VoC_lw16i_short(REG2,0x1f,DEFAULT)
0xF1020E52,	//0x0f2e		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_jal(Coolsand_MSBPos)(hi)
0x0A83C2D2,	//0x0f30		VoC_lw16i(REG3,0x23da)(lo)	|	VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)
0xC0FB23DA,	//0x0f32		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16i(REG3,0x23da)(hi)
0x0A8CFE92,	//0x0f34		VoC_lw16i(RL6_LO,0x7fff)(lo)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
0xF00D7FFF,	//0x0f36		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_lw16i(RL6_LO,0x7fff)(hi)
0x0F3C3632,	//0x0f38		VoC_bgt32_rr(DeciDirectCTRL_L125,RL6,REG45)
0xFFC07F32,	//0x0f3a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
		//0x0f3c		DeciDirectCTRL_L125
0x0F4033C2,	//0x0f3c		VoC_bnltz32_r(DeciDirectCTRL_L126,REG45)
0xFFC07F32,	//0x0f3e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
		//0x0f40		DeciDirectCTRL_L126
0x007F0A8C,	//0x0f40		VoC_lw16i(RL6_LO,0x7f)
0xE00D5C34,	//0x0f42		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
0xC996DFC4,	//0x0f44		VoC_add32_rr(RL6,RL6,REG45,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x2B80F202,	//0x0f46		VoC_jal(Coolsand_MSBPos)(lo)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xF1E20E52,	//0x0f48		VoC_lw16i_short(REG2,0xf,DEFAULT)	|	VoC_jal(Coolsand_MSBPos)(hi)
0x1404C2D2,	//0x0f4a		VoC_lw16_d(REG4,0x429f)(lo)	|	VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)
0xFE14429F,	//0x0f4c		VoC_shr16_rr(REG4,REG2,DEFAULT)	|	VoC_lw16_d(REG4,0x429f)(hi)
0x21F20A81,	//0x0f4e		VoC_lw16i(REG1,0x21f2)
0x0A86C079,	//0x0f50		VoC_lw16i(REG6,0x7f)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x34A6007F,	//0x0f52		VoC_bngt16_rr(DeciDirectCTRL_L31,REG4,REG6)(lo)	|	VoC_lw16i(REG6,0x7f)(hi)
0xE0C40F56,	//0x0f54		VoC_movreg16(REG4,REG6,DEFAULT)	|	VoC_bngt16_rr(DeciDirectCTRL_L31,REG4,REG6)(hi)
		//0x0f56		DeciDirectCTRL_L31
0x43A6DF85,	//0x0f56		VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x4C2DE014,	//0x0f58		VoC_bnlt16_rd(DeciDirectCTRL_L32_0,REG5,0x25d2)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x140625D2,	//0x0f5a		VoC_lw16_d(REG6,0x42a0)(lo)	|	VoC_bnlt16_rd(DeciDirectCTRL_L32_0,REG5,0x25d2)(hi)
0xFFC042A0,	//0x0f5c		VoC_NAD	|	VoC_lw16_d(REG6,0x42a0)(hi)
		//0x0f5e		DeciDirectCTRL_L32_0
0x0F7635BC,	//0x0f5e		VoC_bne16_rr(DeciDirectCTRL_L32_1,REG7,REG4)
0x25D21404,	//0x0f60		VoC_lw16_d(REG4,0x25d2)
0x42064825,	//0x0f62		VoC_blt16_rd(DeciDirectCTRL_L32_2,REG5,0x4206)
0x420807A4,	//0x0f64		VoC_sub16_rd(REG4,REG4,0x4208)
		//0x0f66		DeciDirectCTRL_L32_2
0x42074C25,	//0x0f66		VoC_bnlt16_rd(DeciDirectCTRL_L32_3,REG5,0x4207)
0x42080724,	//0x0f68		VoC_add16_rd(REG4,REG4,0x4208)
		//0x0f6a		DeciDirectCTRL_L32_3
0x42043C24,	//0x0f6a		VoC_bngt16_rd(DeciDirectCTRL_L32_4,REG4,0x4204)
0x42041404,	//0x0f6c		VoC_lw16_d(REG4,0x4204)
		//0x0f6e		DeciDirectCTRL_L32_4
0x42053824,	//0x0f6e		VoC_bgt16_rd(DeciDirectCTRL_L32_5,REG4,0x4205)
0x42051404,	//0x0f70		VoC_lw16_d(REG4,0x4205)
		//0x0f72		DeciDirectCTRL_L32_5
0x1504FFC0,	//0x0f72		VoC_sw16_d(REG4,0x25d2)(lo)	|	VoC_NOP
0xFFC025D2,	//0x0f74		VoC_NAD	|	VoC_sw16_d(REG4,0x25d2)(hi)
		//0x0f76		DeciDirectCTRL_L32_1
0x42A03826,	//0x0f76		VoC_bgt16_rd(DeciDirectCTRL_FixMax,REG6,0x42a0)
0x42A01406,	//0x0f78		VoC_lw16_d(REG6,0x42a0)
		//0x0f7a		DeciDirectCTRL_FixMax
0x22051404,	//0x0f7a		VoC_lw16_d(REG4,0x2205)
0x00320A85,	//0x0f7c		VoC_lw16i(REG5,0x32)
0x0F8234AC,	//0x0f7e		VoC_bngt16_rr(DeciDirectCTRL_L33,REG5,REG4)
0x42A01406,	//0x0f80		VoC_lw16_d(REG6,0x42a0)
		//0x0f82		DeciDirectCTRL_L33
0xDC16DFA9,	//0x0f82		VoC_sw16_p(REG6,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0f84		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0f86		Coolsand_CmplxAppxNorm
0xF8787F01,	//0x0f86		VoC_shr16_ri(REG0,0xf,IN_PARALLEL)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xF8796482,	//0x0f88		VoC_shr16_ri(REG1,0xf,IN_PARALLEL)	|	VoC_xor16_rr(REG2,REG0,DEFAULT)
0xC282648B,	//0x0f8a		VoC_sub16_rr(REG2,REG2,REG0,IN_PARALLEL)	|	VoC_xor16_rr(REG3,REG1,DEFAULT)
0xE1F042CB,	//0x0f8c		VoC_lw16i_short(REG0,0x1f,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
0x0F923413,	//0x0f8e		VoC_bgt16_rr(Coolsand_CmplxAppxNorm_L0,REG2,REG3)
0xF6436062,	//0x0f90		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
		//0x0f92		Coolsand_CmplxAppxNorm_L0
0xF41A70B9,	//0x0f92		VoC_lw16i_short(FORMATX,0x3,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x5,DEFAULT)
0xE0314C84,	//0x0f94		VoC_lw16i_short(REG1,0x3,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)
0xE580CE59,	//0x0f96		VoC_return	|	VoC_macX_rr(REG3,REG1,DEFAULT)
		//0x0f98		Coolsand_FirstOrderIIRSmooth2
0xFBC2CBE2,	//0x0f98		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)
0xF90CFA3A,	//0x0f9a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xCE69CE21,	//0x0f9c		VoC_macX_rr(REG5,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
0xDFE9E580,	//0x0f9e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f9f		Coolsand_NoisePSDEst
0x00320A87,	//0x0fa0		VoC_lw16i(REG7,0x32)
0xD98DD984,	//0x0fa2		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x0FAA34BE,	//0x0fa4		VoC_bngt16_rr(Coolsand_NoisePSDEst_L0,REG7,REG6)
0x2B00FF25,	//0x0fa6		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFFC00FE6,	//0x0fa8		VoC_NAD	|	VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(hi)
		//0x0faa		Coolsand_NoisePSDEst_L0
0x0FB636AC,	//0x0faa		VoC_bngt32_rr(Coolsand_NoisePSDEst_L1,ACC1,ACC0)
0x0FB23304,	//0x0fac		VoC_bez32_r(Coolsand_NoisePSDEst_L1_sub0,ACC0)
0x2B00FF25,	//0x0fae		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFFC00FE6,	//0x0fb0		VoC_NAD	|	VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(hi)
		//0x0fb2		Coolsand_NoisePSDEst_L1_sub0
0xE00B702A,	//0x0fb2		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0x1,DEFAULT)
0x0FE62B00,	//0x0fb4		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)
		//0x0fb6		Coolsand_NoisePSDEst_L1
0xE00D720C,	//0x0fb6		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x10,DEFAULT)
0x0FBC362E,	//0x0fb8		VoC_bgt32_rr(Coolsand_NoisePSDEst_L2,ACC1,RL6)
0xE5CFE087,	//0x0fba		VoC_jump(Coolsand_NoisePSDEst_L4)	|	VoC_movreg16(REG7,REG4,DEFAULT)
		//0x0fbc		Coolsand_NoisePSDEst_L2
0xE20C700D,	//0x0fbc		VoC_lw16i_short(RL6_LO,0x20,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x0FC236B5,	//0x0fbe		VoC_bngt32_rr(Coolsand_NoisePSDEst_L3,RL6,ACC1)
0xE5C9E0A7,	//0x0fc0		VoC_jump(Coolsand_NoisePSDEst_L4)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0fc2		Coolsand_NoisePSDEst_L3
0xF853F8B3,	//0x0fc2		VoC_shr16_ri(REG3,0xa,DEFAULT)	|	VoC_shr16_ri(REG3,0xfffffff6,DEFAULT)
0x238C0A84,	//0x0fc4		VoC_lw16i(REG4,0x238c)
0xFFC0C11C,	//0x0fc6		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0xFFC05847,	//0x0fc8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
		//0x0fca		Coolsand_NoisePSDEst_L4
0xF5A046BB,	//0x0fca		VoC_lw16i_short(FORMAT16,0xfffffff4,IN_PARALLEL)	|	VoC_multf16_rr(REG3,REG2,REG7,DEFAULT)
0x25A01404,	//0x0fcc		VoC_lw16_d(REG4,0x25a0)
0xF8E35F44,	//0x0fce		VoC_shr16_ri(REG3,0xfffffffc,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xDFC17AA1,	//0x0fd0		VoC_push16(REG1,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x14,DEFAULT)
0x0FEE2B80,	//0x0fd2		VoC_jal(Coolsand_ShrinkBit)
0x5F07DF81,	//0x0fd4		VoC_pop32(RL7,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x3307F707,	//0x0fd6		VoC_bez32_r(Coolsand_NoisePSDEst_Lx,RL7)(lo)	|	VoC_movreg16(REG7,ACC0_LO,IN_PARALLEL)
0x14020FE6,	//0x0fd8		VoC_lw16_d(REG2,0x25a1)(lo)	|	VoC_bez32_r(Coolsand_NoisePSDEst_Lx,RL7)(hi)
0xCBEA25A1,	//0x0fda		VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_lw16_d(REG2,0x25a1)(hi)
0xE0F37BC2,	//0x0fdc		VoC_lw16i_short(REG3,0xf,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xC29B7A3A,	//0x0fde		VoC_sub16_rr(REG3,REG2,REG3,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0x6059F90C,	//0x0fe0		VoC_movreg16(FORMAT32,REG2,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x607ACE27,	//0x0fe2		VoC_movreg16(FORMATX,REG3,DEFAULT)	|	VoC_mac32_rr(REG4,REG7,IN_PARALLEL)
0xFFC0CEAF,	//0x0fe4		VoC_NAD	|	VoC_macX_rr(REG5,REG7,IN_PARALLEL)
		//0x0fe6		Coolsand_NoisePSDEst_Lx
0xE00D708C,	//0x0fe6		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x4,DEFAULT)
0x0FEB362E,	//0x0fe8		VoC_bgt32_rr(Coolsand_NoisePSDEst_END,ACC1,RL6)
0xDFA9FF35,	//0x0fea		VoC_pop16(RA,DEFAULT)	|	VoC_movreg32(ACC1,RL6,DEFAULT)
		//0x0feb		Coolsand_NoisePSDEst_END
0xE580DD8D,	//0x0fec		VoC_return	|	VoC_sw32_p(ACC1,REG1,DEFAULT)
		//0x0fee		Coolsand_ShrinkBit
0xFAF97F0E,	//0x0fee		VoC_shr32_ri(REG23,0x1f,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xF6827F0F,	//0x0ff0		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0xDF465FE9,	//0x0ff2		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0E522B80,	//0x0ff4		VoC_jal(Coolsand_MSBPos)
0xDF065FA9,	//0x0ff6		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE0147F44,	//0x0ff8		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x10043183,	//0x0ffa		VoC_bez16_r(Coolsand_ShrinkBit_L0,REG3)
0xE005431A,	//0x0ffc		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0xFE92657E,	//0x0ffe		VoC_shr32_rr(REG45,REG2,IN_PARALLEL)	|	VoC_xor32_rr(RL6,RL7,DEFAULT)
0xE4F2CBBE,	//0x1000		VoC_and32_rr(REG45,RL6,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
0xCABCE57A,	//0x1002		VoC_sub32_rr(ACC0,REG45,RL7,DEFAULT)	|	VoC_xor32_rr(REG45,RL7,DEFAULT)
		//0x1004		Coolsand_ShrinkBit_L0
0xFF43E580,	//0x1004		VoC_lw32z(REG67,DEFAULT)	|	VoC_return
		//0x1005		Coolsand_Lin2Log
0x00200A86,	//0x1006		VoC_lw16i(REG6,0x20)
0x100B3340,	//0x1008		VoC_bnez32_r(Coolsand_Lin2Log1,REG01)
0xFF46E5DB,	//0x100a		VoC_lw32z(RL6,DEFAULT)	|	VoC_jump(Coolsand_Lin2Log2)
		//0x100b		Coolsand_Lin2Log1
0x0A85FF42,	//0x100c		VoC_lw16i(REG5,0x4000)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0xFF414000,	//0x100e		VoC_lw32z(REG23,DEFAULT)	|	VoC_lw16i(REG5,0x4000)(hi)
0x00010A82,	//0x1010		VoC_lw16i(REG2,0x1)
		//0x1012		while_start
0x32C0CA14,	//0x1012		VoC_bngtz32_r(while_end,REG01)(lo)	|	VoC_sub32_rr(ACC0,REG01,REG45,DEFAULT)
0x33C4101A,	//0x1014		VoC_bnltz32_r(while_end,ACC0)(lo)	|	VoC_bngtz32_r(while_end,REG01)(hi)
0xFBF8101A,	//0x1016		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_bnltz32_r(while_end,ACC0)(hi)
0xE5F9C98E,	//0x1018		VoC_jump(while_start)	|	VoC_add32_rr(RL6,RL6,REG23,DEFAULT)
		//0x101a		while_end
0xFAD0FF33,	//0x101a		VoC_shr32_ri(REG01,0x1a,DEFAULT)	|	VoC_movreg32(REG67,RL6,DEFAULT)
0x000F0A82,	//0x101c		VoC_lw16i(REG2,0xf)
0x26C50A83,	//0x101e		VoC_lw16i(REG3,0x26c5)
0xFFC0E410,	//0x1020		VoC_NOP	|	VoC_and16_rr(REG0,REG2,DEFAULT)
0xFFC0C0C3,	//0x1022		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
0xFBDBD830,	//0x1024		VoC_shr32_ri(REG67,0xfffffffb,DEFAULT)	|	VoC_lw16_p(REG0,REG3,DEFAULT)
		//0x1025		Coolsand_Lin2Log2
0xC818FFC0,	//0x1026		VoC_add32_rr(REG01,REG01,REG67,DEFAULT)	|	VoC_NOP
0xFFC0FF41,	//0x1028		VoC_NOP	|	VoC_lw32z(REG23,DEFAULT)
0xE580CA40,	//0x102a		VoC_return	|	VoC_sub32_rr(REG01,REG23,REG01,DEFAULT)
		//0x102c		Coolsand_PostFiltering
0x1407DFE9,	//0x102c		VoC_lw16_d(REG7,0x223b)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A80223B,	//0x102e		VoC_lw16i(REG0,0x2530)(lo)	|	VoC_lw16_d(REG7,0x223b)(hi)
0x0A812530,	//0x1030		VoC_lw16i(REG1,0x21f2)(lo)	|	VoC_lw16i(REG0,0x2530)(hi)
0x403821F2,	//0x1032		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x21f2)(hi)
0xD800C079,	//0x1034		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0xC408D811,	//0x1036		VoC_mult16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x007F0A84,	//0x1038		VoC_lw16i(REG4,0x7f)
0x3484F8CC,	//0x103a		VoC_bngt16_rr(Coolsand_PostFiltering_L1,REG0,REG4)(lo)	|	VoC_shr16_ri(REG4,0xfffffff9,DEFAULT)
0x08091040,	//0x103c		VoC_mult16_rd(REG1,REG1,0x42a7)(lo)	|	VoC_bngt16_rr(Coolsand_PostFiltering_L1,REG0,REG4)(hi)
0xE5C342A7,	//0x103e		VoC_jump(Coolsand_PostFiltering_L2)	|	VoC_mult16_rd(REG1,REG1,0x42a7)(hi)
		//0x1040		Coolsand_PostFiltering_L1
0xFFC0F8E1,	//0x1040		VoC_NOP	|	VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)
		//0x1042		Coolsand_PostFiltering_L2
0x21FC0A82,	//0x1042		VoC_lw16i(REG2,0x21fc)
0x0A83C0BA,	//0x1044		VoC_lw16i(REG3,0x2530)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x5C212530,	//0x1046		VoC_sw16_p(REG1,REG2,DEFAULT)	|	VoC_lw16i(REG3,0x2530)(hi)
0x0A80C0FB,	//0x1048		VoC_lw16i(REG0,0x2100)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x0A812100,	//0x104a		VoC_lw16i(REG1,0x210a)(lo)	|	VoC_lw16i(REG0,0x2100)(hi)
0x4038210A,	//0x104c		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x210a)(hi)
0xF6F8C079,	//0x104e		VoC_lw16i_short(FORMAT16,0xfffffff7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0xD811D800,	//0x1050		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x8C590C18,	//0x1052		VoC_multf16_rp(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_multf16_rp(REG0,REG0,REG3,DEFAULT)
0xFF07DF40,	//0x1054		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x0F862B80,	//0x1056		VoC_jal(Coolsand_CmplxAppxNorm)
0x6120FB84,	//0x1058		VoC_movreg16(REG0,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x4C04F439,	//0x105a		VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)
0x0A81F6E3,	//0x105c		VoC_lw16i(REG1,0x21e0)(lo)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0x78FB21E0,	//0x105e		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw16i(REG1,0x21e0)(hi)
0xC059F459,	//0x1060		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0x21FC0A82,	//0x1062		VoC_lw16i(REG2,0x21fc)
0x40BADD8C,	//0x1064		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
0xF778FF38,	//0x1066		VoC_lw16i_short(FORMAT16,0xfffffffb,DEFAULT)	|	VoC_movreg32(REG01,RL7,IN_PARALLEL)
0x8C510C10,	//0x1068		VoC_multf16_rp(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_multf16_rp(REG0,REG0,REG2,DEFAULT)
0xFF07FFC0,	//0x106a		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_NOP
0x0F862B80,	//0x106c		VoC_jal(Coolsand_CmplxAppxNorm)
0x0A82FB84,	//0x106e		VoC_lw16i(REG2,0x21f2)(lo)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x40BA21F2,	//0x1070		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_lw16i(REG2,0x21f2)(hi)
0x5FC9DF00,	//0x1072		VoC_push16(ACC0_HI,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0x0C10F5B8,	//0x1074		VoC_multf16_rp(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)
0x0A848C51,	//0x1076		VoC_lw16i(REG4,0x21ce)(lo)	|	VoC_multf16_rp(REG1,REG1,REG2,IN_PARALLEL)
0xF8FF21CE,	//0x1078		VoC_shr16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_lw16i(REG4,0x21ce)(hi)
0x0F862B80,	//0x107a		VoC_jal(Coolsand_CmplxAppxNorm)
0xFB84FFC0,	//0x107c		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_NOP
0x6120FFC0,	//0x107e		VoC_movreg16(REG0,ACC0_HI,DEFAULT)	|	VoC_NOP
0x4C04F5F9,	//0x1080		VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)
0xFFC0C13C,	//0x1082		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)
0x7F27DF47,	//0x1084		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0xDFC4D9A4,	//0x1086		VoC_push16(REG4,DEFAULT)	|	VoC_lw32_p(ACC0,REG4,IN_PARALLEL)
0xF5E27179,	//0x1088		VoC_lw16i_short(FORMATX,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xb,DEFAULT)
0x42BC1401,	//0x108a		VoC_lw16_d(REG1,0x42bc)
0xCBE2F019,	//0x108c		VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xF90CFBFA,	//0x108e		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCD0ECD4F,	//0x1090		VoC_multf32_rr(RL6,REG4,REG1,DEFAULT)	|	VoC_multf32_rr(RL7,REG5,REG1,DEFAULT)
0xFA5EFBE7,	//0x1092		VoC_shr32_ri(RL6,0xb,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffffc,DEFAULT)
0xC8A4C9BA,	//0x1094		VoC_add32_rr(ACC0,REG45,ACC0,DEFAULT)	|	VoC_add32_rr(REG45,RL6,RL7,DEFAULT)
0xDF075F84,	//0x1096		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0xDDA4FFC0,	//0x1098		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_NOP
0x420A1400,	//0x109a		VoC_lw16_d(REG0,0x420a)
0x118A3180,	//0x109c		VoC_bez16_r(RESIDUL_ECHO_AGC_OUT,REG0)
0xDF477F38,	//0x109e		VoC_push32(RL7,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0x0F862B80,	//0x10a0		VoC_jal(Coolsand_CmplxAppxNorm)
0x26741486,	//0x10a2		VoC_lw32_d(RL6,0x2674)
0x26761487,	//0x10a4		VoC_lw32_d(RL7,0x2676)
0x10AA36A6,	//0x10a6		VoC_bngt32_rr(FIX_L1,ACC0,RL6)
0xE5C4FF34,	//0x10a8		VoC_jump(FIX_L2)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x10aa		FIX_L1
0x10AD36BC,	//0x10aa		VoC_bngt32_rr(FIX_L2,RL7,ACC0)
0xF7F9FF3C,	//0x10ac		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x10ad		FIX_L2
0x1407FF22,	//0x10ae		VoC_lw16_d(REG7,0x223b)(lo)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x0A80223B,	//0x10b0		VoC_lw16i(REG0,0x2678)(lo)	|	VoC_lw16_d(REG7,0x223b)(hi)
0xF8FF2678,	//0x10b2		VoC_shr16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_lw16i(REG0,0x2678)(hi)
0xC038CD27,	//0x10b4		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_multf32_rr(RL7,REG4,REG4,DEFAULT)
0xD984F081,	//0x10b6		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x10BB363C,	//0x10b8		VoC_bgt32_rr(RESIDUL_ECHO_AGC1,RL7,ACC0)
0xF6B9F021,	//0x10ba		VoC_lw16i_short(FORMAT32,0xfffffff5,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x10bb		RESIDUL_ECHO_AGC1
0xFFC0CBE2,	//0x10bc		VoC_NOP	|	VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)
0xFFC0FBFA,	//0x10be		VoC_NOP	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCD4FF90C,	//0x10c0		VoC_multf32_rr(RL7,REG5,REG1,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCD0EF099,	//0x10c2		VoC_multf32_rr(RL6,REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x4,DEFAULT)
0xC9BAFFC0,	//0x10c4		VoC_add32_rr(REG45,RL6,RL7,DEFAULT)	|	VoC_NOP
0xC8A5FFC0,	//0x10c6		VoC_add32_rr(ACC1,REG45,ACC0,DEFAULT)	|	VoC_NOP
0xDD85FFC0,	//0x10c8		VoC_sw32_p(ACC1,REG0,DEFAULT)	|	VoC_NOP
0x2B80FF28,	//0x10ca		VoC_jal(Coolsand_Lin2Log)(lo)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0xDFC01005,	//0x10cc		VoC_push16(REG0,DEFAULT)	|	VoC_jal(Coolsand_Lin2Log)(hi)
0x00020A81,	//0x10ce		VoC_lw16i(REG1,0x2)
0x420B1400,	//0x10d0		VoC_lw16_d(REG0,0x420b)
0x223B1407,	//0x10d2		VoC_lw16_d(REG7,0x223b)
0x23C66C08,	//0x10d4		VoC_bez16_d(RESIDUL_ECHO_AGC_L0,0x23c6)
0x23C64031,	//0x10d6		VoC_be16_rd(RESIDUL_ECHO_AGC_L0,REG1,0x23c6)
0x2B00DF80,	//0x10d8		VoC_jump_lg(RESIDUL_ECHO_AGC_END)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xFFC01188,	//0x10da		VoC_NAD	|	VoC_jump_lg(RESIDUL_ECHO_AGC_END)(hi)
		//0x10dc		RESIDUL_ECHO_AGC_L0
0x26C44830,	//0x10dc		VoC_blt16_rd(RESIDUL_ECHO_AGC_L1,REG0,0x26c4)
0x2B00DF80,	//0x10de		VoC_jump_lg(RESIDUL_ECHO_AGC_END)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xFFC01188,	//0x10e0		VoC_NAD	|	VoC_jump_lg(RESIDUL_ECHO_AGC_END)(hi)
		//0x10e2		RESIDUL_ECHO_AGC_L1
0x269C0A80,	//0x10e2		VoC_lw16i(REG0,0x269c)
0x1401F8FF,	//0x10e4		VoC_lw16_d(REG1,0x420f)(lo)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xC038420F,	//0x10e6		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG1,0x420f)(hi)
0xD984FF2F,	//0x10e8		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_movreg32(RL7,ACC1,DEFAULT)
0xCBE2F799,	//0x10ea		VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffc,DEFAULT)
0xFBFAFFC0,	//0x10ec		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_NOP
0xF90CFFC0,	//0x10ee		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_NOP
0xF179CD4F,	//0x10f0		VoC_lw16i_short(FORMAT32,0xb,DEFAULT)	|	VoC_multf32_rr(RL7,REG5,REG1,DEFAULT)
0xFFC0CD0E,	//0x10f2		VoC_NOP	|	VoC_multf32_rr(RL6,REG4,REG1,DEFAULT)
0xFFC0C9BA,	//0x10f4		VoC_NOP	|	VoC_add32_rr(REG45,RL6,RL7,DEFAULT)
0xFFC0C8A4,	//0x10f6		VoC_NOP	|	VoC_add32_rr(ACC0,REG45,ACC0,DEFAULT)
0xFF20DD84,	//0x10f8		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x10052B80,	//0x10fa		VoC_jal(Coolsand_Lin2Log)
0x1401DF84,	//0x10fc		VoC_lw16_d(REG1,0x4211)(lo)	|	VoC_pop16(REG4,DEFAULT)
0x0A824211,	//0x10fe		VoC_lw16i(REG2,0x0)(lo)	|	VoC_lw16_d(REG1,0x4211)(hi)
0xC3000000,	//0x1100		VoC_sub16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG2,0x0)(hi)
0x0A82C28B,	//0x1102		VoC_lw16i(REG2,0x26ae)(lo)	|	VoC_sub16_rr(REG3,REG2,REG1,DEFAULT)
0xFE1826AE,	//0x1104		VoC_shr16_rr(REG0,REG3,DEFAULT)	|	VoC_lw16i(REG2,0x26ae)(hi)
0x223B1407,	//0x1106		VoC_lw16_d(REG7,0x223b)
0x00000A84,	//0x1108		VoC_lw16i(REG4,0x0)
0x1403C0BA,	//0x110a		VoC_lw16_d(REG3,0x4212)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x84104212,	//0x110c		VoC_sub16_rp(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16_d(REG3,0x4212)(hi)
0x03FF0A85,	//0x110e		VoC_lw16i(REG5,0x3ff)
0x7C000AC6,	//0x1110		VoC_lw16i(REG6,0xfc00)
0x11163485,	//0x1112		VoC_bngt16_rr(FIX_LIMIT_L0,REG0,REG5)
0xE5C5E0A0,	//0x1114		VoC_jump(FIX_LIMIT_L1)	|	VoC_movreg16(REG0,REG5,DEFAULT)
		//0x1116		FIX_LIMIT_L0
0x111A34B0,	//0x1116		VoC_bngt16_rr(FIX_LIMIT_L1,REG6,REG0)
0xFFC060C0,	//0x1118		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
		//0x111a		FIX_LIMIT_L1
0x11203143,	//0x111a		VoC_bngtz16_r(RESIDUL_ECHO_AGC_L2,REG3)
0xFFC0C31B,	//0x111c		VoC_NOP	|	VoC_sub16_rr(REG3,REG4,REG3,DEFAULT)
0xFFC07E18,	//0x111e		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_rr(REG0,REG3,DEFAULT)
		//0x1120		RESIDUL_ECHO_AGC_L2
0x11233141,	//0x1120		VoC_bngtz16_r(RESIDUL_ECHO_AGC_L3,REG1)
0xC018FE08,	//0x1122		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_shr16_rr(REG0,REG1,DEFAULT)
		//0x1123		RESIDUL_ECHO_AGC_L3
0x0A858010,	//0x1124		VoC_lw16i(REG5,0x3ff)(lo)	|	VoC_add16_rp(REG0,REG0,REG2,DEFAULT)
0x0AC603FF,	//0x1126		VoC_lw16i(REG6,0xfc00)(lo)	|	VoC_lw16i(REG5,0x3ff)(hi)
0x34857C00,	//0x1128		VoC_bngt16_rr(FIX_LIMIT_L00,REG0,REG5)(lo)	|	VoC_lw16i(REG6,0xfc00)(hi)
0xE0A0112E,	//0x112a		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_bngt16_rr(FIX_LIMIT_L00,REG0,REG5)(hi)
0xFFC065C6,	//0x112c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(FIX_LIMIT_L11)
		//0x112e		FIX_LIMIT_L00
0x113234B0,	//0x112e		VoC_bngt16_rr(FIX_LIMIT_L11,REG6,REG0)
0xFFC060C0,	//0x1130		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
		//0x1132		FIX_LIMIT_L11
0x420C1403,	//0x1132		VoC_lw16_d(REG3,0x420c)
0x1401DC20,	//0x1134		VoC_lw16_d(REG1,0x4211)(lo)	|	VoC_sw16_p(REG0,REG2,DEFAULT)
0x0A864211,	//0x1136		VoC_lw16i(REG6,0x0)(lo)	|	VoC_lw16_d(REG1,0x4211)(hi)
0x14040000,	//0x1138		VoC_lw16_d(REG4,0x420d)(lo)	|	VoC_lw16i(REG6,0x0)(hi)
0xC389420D,	//0x113a		VoC_sub16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_lw16_d(REG4,0x420d)(hi)
0x420E1405,	//0x113c		VoC_lw16_d(REG5,0x420e)
0xFE0CFE0B,	//0x113e		VoC_shr16_rr(REG4,REG1,DEFAULT)	|	VoC_shr16_rr(REG3,REG1,DEFAULT)
0xC018FE0D,	//0x1140		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_shr16_rr(REG5,REG1,DEFAULT)
0xFFC0C221,	//0x1142		VoC_NOP	|	VoC_sub16_rr(REG1,REG0,REG4,DEFAULT)
0x11483241,	//0x1144		VoC_bnltz16_r(RESIDUL_ECHO_AGC_L4,REG1)
0xFFC06080,	//0x1146		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
		//0x1148		RESIDUL_ECHO_AGC_L4
0x26B70A82,	//0x1148		VoC_lw16i(REG2,0x26b7)
0x1407C229,	//0x114a		VoC_lw16_d(REG7,0x223b)(lo)	|	VoC_sub16_rr(REG1,REG0,REG5,DEFAULT)
0x3141223B,	//0x114c		VoC_bngtz16_r(RESIDUL_ECHO_AGC_L5,REG1)(lo)	|	VoC_lw16_d(REG7,0x223b)(hi)
0xE0A01150,	//0x114e		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_bngtz16_r(RESIDUL_ECHO_AGC_L5,REG1)(hi)
		//0x1150		RESIDUL_ECHO_AGC_L5
0xFFC0C0BF,	//0x1150		VoC_NOP	|	VoC_add16_rr(REG7,REG2,REG7,DEFAULT)
0x1401D872,	//0x1152		VoC_lw16_d(REG1,0x4210)(lo)	|	VoC_lw16_p(REG2,REG7,DEFAULT)
0xC2134210,	//0x1154		VoC_sub16_rr(REG3,REG0,REG2,DEFAULT)	|	VoC_lw16_d(REG1,0x4210)(hi)
0x00040A99,	//0x1156		VoC_lw16i(FORMAT32,0x4)
0xFFC0CCCA,	//0x1158		VoC_NOP	|	VoC_multf32_rr(REG45,REG3,REG1,DEFAULT)
0x03FF0A81,	//0x115a		VoC_lw16i(REG1,0x3ff)
0x0AC0C114,	//0x115c		VoC_lw16i(REG0,0xfc00)(lo)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x34A17C00,	//0x115e		VoC_bngt16_rr(RESIDUL_ECHO_AGC_L6,REG4,REG1)(lo)	|	VoC_lw16i(REG0,0xfc00)(hi)
0xE0241164,	//0x1160		VoC_movreg16(REG4,REG1,DEFAULT)	|	VoC_bngt16_rr(RESIDUL_ECHO_AGC_L6,REG4,REG1)(hi)
0xFFC065C6,	//0x1162		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RESIDUL_ECHO_AGC_L7)
		//0x1164		RESIDUL_ECHO_AGC_L6
0x11683484,	//0x1164		VoC_bngt16_rr(RESIDUL_ECHO_AGC_L7,REG0,REG4)
0xFFC06004,	//0x1166		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG4,REG0,DEFAULT)
		//0x1168		RESIDUL_ECHO_AGC_L7
0x42111403,	//0x1168		VoC_lw16_d(REG3,0x4211)
0xFE1CDC74,	//0x116a		VoC_shr16_rr(REG4,REG3,DEFAULT)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0x26D50A80,	//0x116c		VoC_lw16i(REG0,0x26d5)
0x1604E081,	//0x116e		VoC_and16_ri(REG4,0x1f)(lo)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xDF03001F,	//0x1170		VoC_pop32(REG67,DEFAULT)	|	VoC_and16_ri(REG4,0x1f)(hi)
0xF831C020,	//0x1172		VoC_shr16_ri(REG1,0x6,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x3181D800,	//0x1174		VoC_bez16_r(RESIDUL_ECHO_AGC_L8,REG1)(lo)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x0A83117C,	//0x1176		VoC_lw16i(REG3,0x5a82)(lo)	|	VoC_bez16_r(RESIDUL_ECHO_AGC_L8,REG1)(hi)
0x0A995A82,	//0x1178		VoC_lw16i(FORMAT32,0xf)(lo)	|	VoC_lw16i(REG3,0x5a82)(hi)
0xCC18000F,	//0x117a		VoC_multf32_rr(REG01,REG0,REG3,DEFAULT)	|	VoC_lw16i(FORMAT32,0xf)(hi)
		//0x117c		RESIDUL_ECHO_AGC_L8
0x42141401,	//0x117c		VoC_lw16_d(REG1,0x4214)
0x000F0A99,	//0x117e		VoC_lw16i(FORMAT32,0xf)
0xCDC2CD81,	//0x1180		VoC_multf32_rr(REG45,REG7,REG0,DEFAULT)	|	VoC_multf32_rr(REG23,REG6,REG0,DEFAULT)
0xFE8AFE89,	//0x1182		VoC_shr32_rr(REG45,REG1,DEFAULT)	|	VoC_shr32_rr(REG23,REG1,DEFAULT)
0xE08FE04E,	//0x1184		VoC_movreg16(RL7_HI,REG4,DEFAULT)	|	VoC_movreg16(RL7_LO,REG2,DEFAULT)
0xDF47FFC0,	//0x1186		VoC_push32(RL7,DEFAULT)	|	VoC_NOP
		//0x1188		RESIDUL_ECHO_AGC_END
0xFFC05F07,	//0x1188		VoC_NAD(IN_PARALLEL)	|	VoC_pop32(RL7,DEFAULT)
		//0x118a		RESIDUL_ECHO_AGC_OUT
0x223B1407,	//0x118a		VoC_lw16_d(REG7,0x223b)
0x23C80A81,	//0x118c		VoC_lw16i(REG1,0x23c8)
0xC079F8FF,	//0x118e		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xD98DFFC0,	//0x1190		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_NOP
0xFA25FFC0,	//0x1192		VoC_shr32_ri(ACC1,0x4,DEFAULT)	|	VoC_NOP
0x502DFBE5,	//0x1194		VoC_bgt32_rd(Coolsand_PostFiltering_L3,ACC1,0x42a8)(lo)	|	VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)
0x148542A8,	//0x1196		VoC_lw32_d(ACC1,0x42a8)(lo)	|	VoC_bgt32_rd(Coolsand_PostFiltering_L3,ACC1,0x42a8)(hi)
0xFFC042A8,	//0x1198		VoC_NAD	|	VoC_lw32_d(ACC1,0x42a8)(hi)
		//0x119a		Coolsand_PostFiltering_L3
0x42A61402,	//0x119a		VoC_lw16_d(REG2,0x42a6)
0x7BF8FF28,	//0x119c		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x7908F5C1,	//0x119e		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,IN_PARALLEL)
0xCC14F54A,	//0x11a0		VoC_multf32_rr(ACC0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xffffffe9,IN_PARALLEL)
0x1406CE4A,	//0x11a2		VoC_lw16_d(REG6,0x42a0)(lo)	|	VoC_macX_rr(REG1,REG2,DEFAULT)
0xFA4442A0,	//0x11a4		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_lw16_d(REG6,0x42a0)(hi)
0xE1827F26,	//0x11a6		VoC_lw16i_short(REG2,0x18,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0E522B80,	//0x11a8		VoC_jal(Coolsand_MSBPos)
0xE1817000,	//0x11aa		VoC_lw16i_short(REG1,0x18,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x11C23183,	//0x11ac		VoC_bez16_r(Coolsand_PostFiltering_L5,REG3)
0xE17442CA,	//0x11ae		VoC_lw16i_short(REG4,0x17,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG3,REG1,DEFAULT)
0x00011602,	//0x11b0		VoC_and16_ri(REG2,0x1)
0x11BC3182,	//0x11b2		VoC_bez16_r(Coolsand_PostFiltering_L4,REG2)
0xE094431A,	//0x11b4		VoC_lw16i_short(REG4,0x9,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0x42A2F80A,	//0x11b6		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFE10E030,	//0x11b8		VoC_shr16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x3,IN_PARALLEL)
0xFFC065C8,	//0x11ba		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_PostFiltering_L5)
		//0x11bc		Coolsand_PostFiltering_L4
0xE0B4425A,	//0x11bc		VoC_lw16i_short(REG4,0xb,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG1,REG3,DEFAULT)
0x42A2F80A,	//0x11be		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFE10E010,	//0x11c0		VoC_shr16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
		//0x11c2		Coolsand_PostFiltering_L5
0xF4014C34,	//0x11c2		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG0,REG6,DEFAULT)
0x1F080A82,	//0x11c4		VoC_lw16i(REG2,0x1f08)
0x1F180A83,	//0x11c6		VoC_lw16i(REG3,0x1f18)
0x223B1407,	//0x11c8		VoC_lw16_d(REG7,0x223b)
0xC0FB40BA,	//0x11ca		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xFF3A5F81,	//0x11cc		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x7805FF45,	//0x11ce		VoC_bez32_d(Coolsand_PostFiltering_L8,0x42a8)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x0A8A42A8,	//0x11d0		VoC_lw16i(ACC1_LO,0x5b)(lo)	|	VoC_bez32_d(Coolsand_PostFiltering_L8,0x42a8)(hi)
0xFFC0005B,	//0x11d2		VoC_NAD	|	VoC_lw16i(ACC1_LO,0x5b)(hi)
		//0x11d4		Coolsand_PostFiltering_L8
0x11D736AC,	//0x11d4		VoC_bngt32_rr(Coolsand_PostFiltering_L6,ACC1,ACC0)
0xFB9CFF2C,	//0x11d6		VoC_shr32_ri(ACC0,0xfffffff3,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x11d7		Coolsand_PostFiltering_L6
0xE0266120,	//0x11d8		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xF60C78F8,	//0x11da		VoC_movreg16(RL6_LO,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x23C64426,	//0x11dc		VoC_bne16_rd(Coolsand_PostFiltering_L9,REG6,0x23c6)
0x223B3906,	//0x11de		VoC_bgt16_rd(Coolsand_PostFiltering_L7,REG6,0x223b)
		//0x11e0		Coolsand_PostFiltering_L9
0x11EE3481,	//0x11e0		VoC_bngt16_rr(Coolsand_PostFiltering_L7,REG0,REG1)
0x11F42B80,	//0x11e2		VoC_jal(Coolsand_Generate)
0xF7847026,	//0x11e4		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF8F978F8,	//0x11e6		VoC_shr16_ri(REG1,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xC2714230,	//0x11e8		VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)
0xC50D4504,	//0x11ea		VoC_mult16_rr(REG5,REG4,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG4,REG0,DEFAULT)
0xE5C3FFC0,	//0x11ec		VoC_jump(Coolsand_PostFiltering_End)	|	VoC_NOP
		//0x11ee		Coolsand_PostFiltering_L7
0x11F42B80,	//0x11ee		VoC_jal(Coolsand_Generate)
		//0x11f0		Coolsand_PostFiltering_End
0xDC24DFA9,	//0x11f0		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE580DC35,	//0x11f2		VoC_return	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x11f4		Coolsand_Generate
0x22061804,	//0x11f4		VoC_lw16i_set_inc(REG0,0x2206,0x1)
0x220A1805,	//0x11f6		VoC_lw16i_set_inc(REG1,0x220a,0x1)
0xE0076884,	//0x11f8		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFFC08246,	//0x11fa		VoC_NOP	|	VoC_add16inc_rp(REG6,REG1,REG0,DEFAULT)
		//0x11fc		VoC_endloop0
0x140A81F7,	//0x11fc		VoC_lw16_d(ACC1_LO,0x2229)(lo)	|	VoC_add16_rp(REG7,REG7,REG6,DEFAULT)
0x140B2229,	//0x11fe		VoC_lw16_d(ACC1_HI,0x2224)(lo)	|	VoC_lw16_d(ACC1_LO,0x2229)(hi)
0x1FBC2224,	//0x1200		VoC_lw16i_set_inc(REG0,0x2229,0xffffffff)(lo)	|	VoC_lw16_d(ACC1_HI,0x2224)(hi)
0x1FBD2229,	//0x1202		VoC_lw16i_set_inc(REG1,0x2228,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x2229,0xffffffff)(hi)
0x60E62228,	//0x1204		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x2228,0xffffffff)(hi)
0x1606F87F,	//0x1206		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_shr16_ri(REG7,0xf,IN_PARALLEL)
0x64BE0001,	//0x1208		VoC_xor16_rr(REG6,REG7,DEFAULT)	|	VoC_and16_ri(REG6,0x1)(hi)
0x6BE3D898,	//0x120a		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG1,IN_PARALLEL)
0xD898C3BE,	//0x120c		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
		//0x120e		VoC_endloop0
0x5C86DC88,	//0x120e		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xE580FF28,	//0x1210		VoC_return	|	VoC_movreg32(REG01,ACC1,IN_PARALLEL)
		//0x1212		Coolsand_SumInstantPower
0xD8A0DFE9,	//0x1212		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2B80D8B1,	//0x1214		VoC_jal(Coolsand_InstantPower)(lo)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
0xDFA9121A,	//0x1216		VoC_pop16(RA,DEFAULT)	|	VoC_jal(Coolsand_InstantPower)(hi)
0xE580FFC0,	//0x1218		VoC_return	|	VoC_NOP
		//0x121a		Coolsand_InstantPower
0xDF41DFE9,	//0x121a		VoC_push32(REG23,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0F862B80,	//0x121c		VoC_jal(Coolsand_CmplxAppxNorm)
0xFB845FA9,	//0x121e		VoC_shr32_ri(ACC0,0xfffffff0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xF4396124,	//0x1220		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xDF014D24,	//0x1222		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG4,DEFAULT)
0xFFC06580,	//0x1224		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1226		Coolsand_ControlLogicMergeChnlEnhancedDTD
0xDF445FE9,	//0x1226		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x128E2B80,	//0x1228		VoC_jal(Coolsand_ControlLogicCalVarSub)
0x1407DF07,	//0x122a		VoC_lw16_d(REG7,0x42b8)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x0A8642B8,	//0x122c		VoC_lw16i(REG6,0x253a)(lo)	|	VoC_lw16_d(REG7,0x42b8)(hi)
0xFFC0253A,	//0x122e		VoC_NAD	|	VoC_lw16i(REG6,0x253a)(hi)
0x13302B80,	//0x1230		VoC_jal(Coolsand_SmoothPeakPower)
0x12D22B80,	//0x1232		VoC_jal(Coolsand_ControlLogicChnlDecisionEnhanced)
0xFFC0DFA9,	//0x1234		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1236		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1238		Coolsand_ControlLogicSingleChnlEnhanced
0xE0205FE9,	//0x1238		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x23C727BE,	//0x123a		VoC_lw16d_set_inc(REG2,0x23c7,0xffffffff)
0x23C44510,	//0x123c		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L1,REG0,0x23c4)
0x25391404,	//0x123e		VoC_lw16_d(REG4,0x2539)
0x42C11405,	//0x1240		VoC_lw16_d(REG5,0x42c1)
0xF6A47041,	//0x1242		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x42C01402,	//0x1244		VoC_lw16_d(REG2,0x42c0)
0x12862B00,	//0x1246		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x1248		Coolsand_ControlLogicSingleChnl_L0
0xE0017026,	//0x1248		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC1347002,	//0x124a		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x12862B00,	//0x124c		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x124e		Coolsand_ControlLogicSingleChnl_L1
0x4518F020,	//0x124e		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L4,REG0,0x23c4)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x140423C4,	//0x1250		VoC_lw16_d(REG4,0x2539)(lo)	|	VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L4,REG0,0x23c4)(hi)
0x14052539,	//0x1252		VoC_lw16_d(REG5,0x42c1)(lo)	|	VoC_lw16_d(REG4,0x2539)(hi)
0x34AC42C1,	//0x1254		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L2,REG5,REG4)(lo)	|	VoC_lw16_d(REG5,0x42c1)(hi)
0xF0041258,	//0x1256		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L2,REG5,REG4)(hi)
		//0x1258		Coolsand_ControlLogicSingleChnl_L2
0x23C76E06,	//0x1258		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L3,0x23c7)
0xE0047021,	//0x125a		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x12862B00,	//0x125c		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x125e		Coolsand_ControlLogicSingleChnl_L3
0xDE107041,	//0x125e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x12862B00,	//0x1260		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x1262		Coolsand_ControlLogicSingleChnl_L4
0x4518F060,	//0x1262		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L7,REG0,0x23c4)(lo)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0x140423C4,	//0x1264		VoC_lw16_d(REG4,0x2539)(lo)	|	VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L7,REG0,0x23c4)(hi)
0x14052539,	//0x1266		VoC_lw16_d(REG5,0x42c1)(lo)	|	VoC_lw16_d(REG4,0x2539)(hi)
0x34AC42C1,	//0x1268		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L5,REG5,REG4)(lo)	|	VoC_lw16_d(REG5,0x42c1)(hi)
0xF004126C,	//0x126a		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L5,REG5,REG4)(hi)
		//0x126c		Coolsand_ControlLogicSingleChnl_L5
0x23C76E06,	//0x126c		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L6,0x23c7)
0xE0047061,	//0x126e		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0xFFC065D6,	//0x1270		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x1272		Coolsand_ControlLogicSingleChnl_L6
0xDE107041,	//0x1272		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC065D2,	//0x1274		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x1276		Coolsand_ControlLogicSingleChnl_L7
0x25391404,	//0x1276		VoC_lw16_d(REG4,0x2539)
0x42C11405,	//0x1278		VoC_lw16_d(REG5,0x42c1)
0x127E34AC,	//0x127a		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L8,REG5,REG4)
0xFFC07004,	//0x127c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x127e		Coolsand_ControlLogicSingleChnl_L8
0x23C76E06,	//0x127e		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L9,0x23c7)
0xE0047001,	//0x1280		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC065C4,	//0x1282		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x1284		Coolsand_ControlLogicSingleChnl_L9
0xDE107041,	//0x1284		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
		//0x1286		Coolsand_ControlLogicSingleChnl_End
0x1501DFA9,	//0x1286		VoC_sw16_d(REG1,0x23c6)(lo)	|	VoC_pop16(RA,DEFAULT)
0x150223C6,	//0x1288		VoC_sw16_d(REG2,0x23c7)(lo)	|	VoC_sw16_d(REG1,0x23c6)(hi)
0x150423C7,	//0x128a		VoC_sw16_d(REG4,0x2539)(lo)	|	VoC_sw16_d(REG2,0x23c7)(hi)
0xE5802539,	//0x128c		VoC_return	|	VoC_sw16_d(REG4,0x2539)(hi)
		//0x128e		Coolsand_ControlLogicCalVarSub
0xDF465FE9,	//0x128e		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x42B81407,	//0x1290		VoC_lw16_d(REG7,0x42b8)
0x23B40A86,	//0x1292		VoC_lw16i(REG6,0x23b4)
0x13302B80,	//0x1294		VoC_jal(Coolsand_SmoothPeakPower)
0x23B81484,	//0x1296		VoC_lw32_d(ACC0,0x23b8)
0x23B41485,	//0x1298		VoC_lw32_d(ACC1,0x23b4)
0x13462B80,	//0x129a		VoC_jal(Coolsand_InstantSNR)
0xE0B27187,	//0x129c		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x23B40A80,	//0x129e		VoC_lw16i(REG0,0x23b4)
0x23B80A81,	//0x12a0		VoC_lw16i(REG1,0x23b8)
0x25A01507,	//0x12a2		VoC_sw16_d(REG7,0x25a0)
0x25A11502,	//0x12a4		VoC_sw16_d(REG2,0x25a1)
0x22051406,	//0x12a6		VoC_lw16_d(REG6,0x2205)
0x23BE0A87,	//0x12a8		VoC_lw16i(REG7,0x23be)
0x42B91402,	//0x12aa		VoC_lw16_d(REG2,0x42b9)
0x13582B80,	//0x12ac		VoC_jal(Coolsand_OverallNoiseEst)
0x1407DF07,	//0x12ae		VoC_lw16_d(REG7,0x42b8)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x0A8642B8,	//0x12b0		VoC_lw16i(REG6,0x23ac)(lo)	|	VoC_lw16_d(REG7,0x42b8)(hi)
0xFFC023AC,	//0x12b2		VoC_NAD	|	VoC_lw16i(REG6,0x23ac)(hi)
0x13302B80,	//0x12b4		VoC_jal(Coolsand_SmoothPeakPower)
0x23B01484,	//0x12b6		VoC_lw32_d(ACC0,0x23b0)
0x23AC1485,	//0x12b8		VoC_lw32_d(ACC1,0x23ac)
0x13462B80,	//0x12ba		VoC_jal(Coolsand_InstantSNR)
0xE0B27187,	//0x12bc		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x23AC0A80,	//0x12be		VoC_lw16i(REG0,0x23ac)
0x23B00A81,	//0x12c0		VoC_lw16i(REG1,0x23b0)
0x25A01507,	//0x12c2		VoC_sw16_d(REG7,0x25a0)
0x25A11502,	//0x12c4		VoC_sw16_d(REG2,0x25a1)
0x22051406,	//0x12c6		VoC_lw16_d(REG6,0x2205)
0x23BC0A87,	//0x12c8		VoC_lw16i(REG7,0x23bc)
0x42B91402,	//0x12ca		VoC_lw16_d(REG2,0x42b9)
0x13582B80,	//0x12cc		VoC_jal(Coolsand_OverallNoiseEst)
0xFFC0DFA9,	//0x12ce		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x12d0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x12d2		Coolsand_ControlLogicChnlDecisionEnhanced
0x23B01483,	//0x12d2		VoC_lw32_d(REG67,0x23b0)
0xFBFB5FE9,	//0x12d4		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x42BA1405,	//0x12d6		VoC_lw16_d(REG5,0x42ba)
0xF401790E,	//0x12d8		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF58A4DAC,	//0x12da		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x1485CE7D,	//0x12dc		VoC_lw32_d(ACC1,0x23ac)(lo)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0x7BE523AC,	//0x12de		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw32_d(ACC1,0x23ac)(hi)
0x36ACE004,	//0x12e0		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L0,ACC1,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xF02412E4,	//0x12e2		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L0,ACC1,ACC0)(hi)
		//0x12e4		Coolsand_ControlLogicChnlDecisionEnhanced_L0
0x23B81483,	//0x12e4		VoC_lw32_d(REG67,0x23b8)
0x23C01504,	//0x12e6		VoC_sw16_d(REG4,0x23c0)
0x790EFBFB,	//0x12e8		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0x4DACF401,	//0x12ea		VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x4E7DF58A,	//0x12ec		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)
0x1485EFF0,	//0x12ee		VoC_lw32_d(ACC1,0x23b4)(lo)	|	VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)
0x148623B4,	//0x12f0		VoC_lw32_d(RL6,0x23b0)(lo)	|	VoC_lw32_d(ACC1,0x23b4)(hi)
0x7BE523B0,	//0x12f2		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw32_d(RL6,0x23b0)(hi)
0x1483E004,	//0x12f4		VoC_lw32_d(REG67,0x23b0)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x36AC23B0,	//0x12f6		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L1,ACC1,ACC0)(lo)	|	VoC_lw32_d(REG67,0x23b0)(hi)
0x642B12FE,	//0x12f8		VoC_bnlt32_rd(Coolsand_ControlLogicChnlDecisionEnhanced_L1,REG67,0x23b4)(lo)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L1,ACC1,ACC0)(hi)
0xF02423B4,	//0x12fa		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bnlt32_rd(Coolsand_ControlLogicChnlDecisionEnhanced_L1,REG67,0x23b4)(hi)
0xFFC07FC0,	//0x12fc		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x12fe		Coolsand_ControlLogicChnlDecisionEnhanced_L1
0x23C21504,	//0x12fe		VoC_sw16_d(REG4,0x23c2)
0x23C26E16,	//0x1300		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L2,0x23c2)
0x23C06C14,	//0x1302		VoC_bez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L2,0x23c0)
0x253A1483,	//0x1304		VoC_lw32_d(REG67,0x253a)
0x42BE1405,	//0x1306		VoC_lw16_d(REG5,0x42be)
0xF4017BFB,	//0x1308		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xF58A790E,	//0x130a		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCE7DCDAC,	//0x130c		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x23B41485,	//0x130e		VoC_lw32_d(ACC1,0x23b4)
0x36A5FBE5,	//0x1310		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L2,ACC0,ACC1)(lo)	|	VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)
0xF0201316,	//0x1312		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L2,ACC0,ACC1)(hi)
0xFFC065D8,	//0x1314		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)
		//0x1316		Coolsand_ControlLogicChnlDecisionEnhanced_L2
0x23AC7A06,	//0x1316		VoC_bnez32_d(Coolsand_ControlLogicChnlDecisionEnhanced_L3,0x23ac)
0x23B47A04,	//0x1318		VoC_bnez32_d(Coolsand_ControlLogicChnlDecisionEnhanced_L3,0x23b4)
0xE5D1F060,	//0x131a		VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x131c		Coolsand_ControlLogicChnlDecisionEnhanced_L3
0x23C26E0C,	//0x131c		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L4,0x23c2)
0x23C06E0A,	//0x131e		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L4,0x23c0)
0x23AC1484,	//0x1320		VoC_lw32_d(ACC0,0x23ac)
0x23B41485,	//0x1322		VoC_lw32_d(ACC1,0x23b4)
0x132836A5,	//0x1324		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L4,ACC0,ACC1)
0xE5C5F060,	//0x1326		VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x1328		Coolsand_ControlLogicChnlDecisionEnhanced_L4
0x6E03F040,	//0x1328		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_End,0x25a8)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xF00025A8,	//0x132a		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_End,0x25a8)(hi)
		//0x132c		Coolsand_ControlLogicChnlDecisionEnhanced_End
0x1500DFA9,	//0x132c		VoC_sw16_d(REG0,0x23c4)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE58023C4,	//0x132e		VoC_return	|	VoC_sw16_d(REG0,0x23c4)(hi)
		//0x1330		Coolsand_SmoothPeakPower
0xE0085FE9,	//0x1330		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE40959B5,	//0x1332		VoC_lw16i_short(ACC0_HI,0x40,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG6,DEFAULT)
0x133A36BD,	//0x1334		VoC_bngt32_rr(Coolsand_SmoothPeakPower_L0,RL7,ACC1)
0x133A36A7,	//0x1336		VoC_bngt32_rr(Coolsand_SmoothPeakPower_L0,ACC0,RL7)
0xE5C7FF3C,	//0x1338		VoC_jump(Coolsand_SmoothPeakPower_L1)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x133a		Coolsand_SmoothPeakPower_L0
0xFF2C60E1,	//0x133a		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0xF5E27179,	//0x133c		VoC_lw16i_short(FORMATX,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xb,DEFAULT)
0x0F982B80,	//0x133e		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
		//0x1340		Coolsand_SmoothPeakPower_L1
0x134333C4,	//0x1340		VoC_bnltz32_r(Coolsand_SmoothPeakPower_L2,ACC0)
0xDFA9FF44,	//0x1342		VoC_pop16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x1343		Coolsand_SmoothPeakPower_L2
0xE580DDB4,	//0x1344		VoC_return	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x1346		Coolsand_InstantSNR
0xFA245FE9,	//0x1346		VoC_shr32_ri(ACC0,0x4,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x134C3344,	//0x1348		VoC_bnez32_r(Coolsand_InstantSNR_L0,ACC0)
0xE0097028,	//0x134a		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x134c		Coolsand_InstantSNR_L0
0xE1427F26,	//0x134c		VoC_lw16i_short(REG2,0x14,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0E522B80,	//0x134e		VoC_jal(Coolsand_MSBPos)
0xC2FBF7E7,	//0x1350		VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0xFB45FE9D,	//0x1352		VoC_shr32_ri(ACC1,0xffffffe8,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xDFA97AC5,	//0x1354		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x18,DEFAULT)
0xE580E143,	//0x1356		VoC_return	|	VoC_movreg16(REG3,ACC1_LO,DEFAULT)
		//0x1358		Coolsand_OverallNoiseEst
0xE105598C,	//0x1358		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xE1045FE9,	//0x135a		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xDF445FC3,	//0x135c		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xDF405FC7,	//0x135e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x0F9F2B80,	//0x1360		VoC_jal(Coolsand_NoisePSDEst)
0xDF005F87,	//0x1362		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF045F83,	//0x1364		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0x3305D985,	//0x1366		VoC_bez32_r(Coolsand_OverallNoiseEst_L2,ACC1)(lo)	|	VoC_lw32_p(ACC1,REG0,DEFAULT)
0x7025137B,	//0x1368		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bez32_r(Coolsand_OverallNoiseEst_L2,ACC1)(hi)
0x7006D98D,	//0x136a		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,IN_PARALLEL)
0x37ACE204,	//0x136c		VoC_bne32_rr(Coolsand_OverallNoiseEst_L0,ACC1,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x20,IN_PARALLEL)
0x349C1372,	//0x136e		VoC_bngt16_rr(Coolsand_OverallNoiseEst_L0,REG3,REG4)(lo)	|	VoC_bne32_rr(Coolsand_OverallNoiseEst_L0,ACC1,ACC0)(hi)
0x817E1372,	//0x1370		VoC_add16_rp(REG6,REG5,REG7,DEFAULT)	|	VoC_bngt16_rr(Coolsand_OverallNoiseEst_L0,REG3,REG4)(hi)
		//0x1372		Coolsand_OverallNoiseEst_L0
0x0FA00A84,	//0x1372		VoC_lw16i(REG4,0xfa0)
0xFBFDD98D,	//0x1374		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x137A34B4,	//0x1376		VoC_bngt16_rr(Coolsand_OverallNoiseEst_L1,REG6,REG4)
0xDD8DF006,	//0x1378		VoC_sw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x137a		Coolsand_OverallNoiseEst_L1
0xDFA9DC76,	//0x137a		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_p(REG6,REG7,DEFAULT)
		//0x137b		Coolsand_OverallNoiseEst_L2
0xE580FFC0,	//0x137c		VoC_return	|	VoC_NOP
		//0x137e		Coolsand_OverallNoiseEstwState
0x223B1407,	//0x137e		VoC_lw16_d(REG7,0x223b)
0xDFE978FF,	//0x1380		VoC_push16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x21960A80,	//0x1382		VoC_lw16i(REG0,0x2196)
0x21A80A81,	//0x1384		VoC_lw16i(REG1,0x21a8)
0xC0794038,	//0x1386		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xDFC77064,	//0x1388		VoC_push16(REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x5F40D98C,	//0x138a		VoC_push32(REG01,DEFAULT)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDF44DFC3,	//0x138c		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0x42C56C04,	//0x138e		VoC_bez16_d(Coolsand_OverallNoiseEstwState_L0_subL0,0x42c5)
0x23C64504,	//0x1390		VoC_bne16_rd(Coolsand_OverallNoiseEstwState_L0,REG4,0x23c6)
		//0x1392		Coolsand_OverallNoiseEstwState_L0_subL0
0xE0B27186,	//0x1392		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xc,DEFAULT)
0xE1057024,	//0x1394		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x25A01506,	//0x1396		VoC_sw16_d(REG6,0x25a0)
0x25A11502,	//0x1398		VoC_sw16_d(REG2,0x25a1)
0x22051406,	//0x139a		VoC_lw16_d(REG6,0x2205)
0x429C1402,	//0x139c		VoC_lw16_d(REG2,0x429c)
0x0F9F2B80,	//0x139e		VoC_jal(Coolsand_NoisePSDEst)
		//0x13a0		Coolsand_OverallNoiseEstwState_L0
0xDF045F83,	//0x13a0		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xDF84DF00,	//0x13a2		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x23C80A80,	//0x13a4		VoC_lw16i(REG0,0x23c8)
0xD9854020,	//0x13a6		VoC_lw32_p(ACC1,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x0A87F80C,	//0x13a8		VoC_lw16i(REG7,0x21ba)(lo)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1E721BA,	//0x13aa		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG7,0x21ba)(hi)
0x13C23305,	//0x13ac		VoC_bez32_r(Coolsand_OverallNoiseEstwState_L3,ACC1)
0xD98D7025,	//0x13ae		VoC_lw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xE1047006,	//0x13b0		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x13B837AC,	//0x13b2		VoC_bne32_rr(Coolsand_OverallNoiseEstwState_L1,ACC1,ACC0)
0x13B8349C,	//0x13b4		VoC_bngt16_rr(Coolsand_OverallNoiseEstwState_L1,REG3,REG4)
0xFFC0017E,	//0x13b6		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rp(REG6,REG5,REG7,DEFAULT)
		//0x13b8		Coolsand_OverallNoiseEstwState_L1
0x1F400A84,	//0x13b8		VoC_lw16i(REG4,0x1f40)
0xFBFDD98D,	//0x13ba		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x13C134B4,	//0x13bc		VoC_bngt16_rr(Coolsand_OverallNoiseEstwState_L2,REG6,REG4)
0xDD8D7006,	//0x13be		VoC_sw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xDC76DD85,	//0x13c0		VoC_sw16_p(REG6,REG7,DEFAULT)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
		//0x13c1		Coolsand_OverallNoiseEstwState_L2
		//0x13c2		Coolsand_OverallNoiseEstwState_L3
0x00320A84,	//0x13c2		VoC_lw16i(REG4,0x32)
0x3C1CD98C,	//0x13c4		VoC_bngt16_rd(Coolsand_OverallNoiseEstwState_L4,REG4,0x2205)(lo)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDD842205,	//0x13c6		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_bngt16_rd(Coolsand_OverallNoiseEstwState_L4,REG4,0x2205)(hi)
		//0x13c8		Coolsand_OverallNoiseEstwState_L4
0xE0365984,	//0x13c8		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0xE0057044,	//0x13ca		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x13D03344,	//0x13cc		VoC_bnez32_r(Coolsand_OverallNoiseEstwState_L5,ACC0)
0xFFC05D82,	//0x13ce		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(REG45,REG0,DEFAULT)
		//0x13d0		Coolsand_OverallNoiseEstwState_L5
0xE0345987,	//0x13d0		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG0,DEFAULT)
0xFF3B598D,	//0x13d2		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x42C56C04,	//0x13d4		VoC_bez16_d(Coolsand_OverallNoiseEstwState_L7,0x42c5)
0x23C64514,	//0x13d6		VoC_bne16_rd(Coolsand_OverallNoiseEstwState_End,REG4,0x23c6)
		//0x13d8		Coolsand_OverallNoiseEstwState_L7
0x362BFBFB,	//0x13d8		VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_L6,ACC1,REG67)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xFF2F13DE,	//0x13da		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_L6,ACC1,REG67)(hi)
0xFFC065CC,	//0x13dc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_OverallNoiseEstwState_End)
		//0x13de		Coolsand_OverallNoiseEstwState_L6
0xE325790E,	//0x13de		VoC_lw16i_short(REG5,0x32,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF4014DAC,	//0x13e0		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0xF58A4E7D,	//0x13e2		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0x3625FFC0,	//0x13e4		VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_End,ACC0,ACC1)(lo)	|	VoC_NOP
0xFF2F13E8,	//0x13e6		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_End,ACC0,ACC1)(hi)
		//0x13e8		Coolsand_OverallNoiseEstwState_End
0xDD87DFA9,	//0x13e8		VoC_sw32_p(RL7,REG0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x13ea		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x13eb		Cooland_InstantPower
0x0F862B80,	//0x13ec		VoC_jal(Coolsand_CmplxAppxNorm)
0xF4397B84,	//0x13ee		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0xDFA96120,	//0x13f0		VoC_pop16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xE580CC04,	//0x13f2		VoC_return	|	VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)
		//0x13f4		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL
0x1407DFE9,	//0x13f4		VoC_lw16_d(REG7,0x223b)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A82223B,	//0x13f6		VoC_lw16i(REG2,0x2100)(lo)	|	VoC_lw16_d(REG7,0x223b)(hi)
0x0A832100,	//0x13f8		VoC_lw16i(REG3,0x210a)(lo)	|	VoC_lw16i(REG2,0x2100)(hi)
0xC0BA210A,	//0x13fa		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_lw16i(REG3,0x210a)(hi)
0x5820C0FB,	//0x13fc		VoC_lw16_p(REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x5831D824,	//0x13fe		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_lw16_p(REG4,REG2,IN_PARALLEL)
0x2B80D835,	//0x1400		VoC_jal(Coolsand_CmplxAppxNorm)(lo)	|	VoC_lw16_p(REG5,REG3,IN_PARALLEL)
0xFB840F86,	//0x1402		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm)(hi)
0xF4396126,	//0x1404		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0CDB4,	//0x1406		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG6,DEFAULT)
0xFA44FBC4,	//0x1408		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xDF44FFC0,	//0x140a		VoC_push32(ACC0,DEFAULT)	|	VoC_NOP
0x149B2B80,	//0x140c		VoC_jal(Coolsand_EchoPSDEst_MFCOHFFix)
0x251E0A80,	//0x140e		VoC_lw16i(REG0,0x251e)
0x223B1407,	//0x1410		VoC_lw16_d(REG7,0x223b)
0x25300A81,	//0x1412		VoC_lw16i(REG1,0x2530)
0xC07978FF,	//0x1414		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xDF07C038,	//0x1416		VoC_pop32(RL7,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xFA11D981,	//0x1418		VoC_shr32_ri(REG23,0x2,DEFAULT)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0xDF4772C4,	//0x141a		VoC_push32(RL7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x16,DEFAULT)
0x0FEE2B80,	//0x141c		VoC_jal(Coolsand_ShrinkBit)
0x3344F2C4,	//0x141e		VoC_bnez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x16,DEFAULT)
0xF2A41424,	//0x1420		VoC_lw16i_short(REG4,0x15,DEFAULT)	|	VoC_bnez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0,ACC0)(hi)
0xE0097028,	//0x1422		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x1424		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0
0xDF0342E4,	//0x1424		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0xFF1E7EA3,	//0x1426		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
0xDFC47A83,	//0x1428		VoC_push16(REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFBF37BF4,	//0x142a		VoC_shr32_ri(REG67,0xfffffffe,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x3287CBA7,	//0x142c		VoC_bgtz32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1,RL7)(lo)	|	VoC_sub32_rr(RL7,RL6,ACC0,DEFAULT)
0x702E1432,	//0x142e		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_bgtz32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1,RL7)(hi)
0xFFC0E00F,	//0x1430		VoC_NAD	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
		//0x1432		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1
0x223B1402,	//0x1432		VoC_lw16_d(REG2,0x223b)
0x0A83F8FA,	//0x1434		VoC_lw16i(REG3,0x21e0)(lo)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x40D321E0,	//0x1436		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i(REG3,0x21e0)(hi)
0x1401FBC7,	//0x1438		VoC_lw16_d(REG1,0x42a2)(lo)	|	VoC_shr32_ri(RL7,0xfffffff8,IN_PARALLEL)
0x599D42A2,	//0x143a		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x42a2)(hi)
0xCBEAFA47,	//0x143c		VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_shr32_ri(RL7,0x8,IN_PARALLEL)
0xFF2C7BC2,	//0x143e		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xF4397A3A,	//0x1440		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xF5C2790C,	//0x1442		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE69CE21,	//0x1444		VoC_macX_rr(REG5,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
0x0A80DF84,	//0x1446		VoC_lw16i(REG0,0x23e3)(lo)	|	VoC_pop16(REG4,DEFAULT)
0x070023E3,	//0x1448		VoC_add16_rd(REG0,REG0,0x223b)(lo)	|	VoC_lw16i(REG0,0x23e3)(hi)
0x7EA4223B,	//0x144a		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x223b)(hi)
0x0ACEE00F,	//0x144c		VoC_lw16i(RL7_LO,0x8000)(lo)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x493C0000,	//0x144e		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw16i(RL7_LO,0x8000)(hi)
0x7A84FF47,	//0x1450		VoC_shr32_ri(ACC0,0x10,DEFAULT)	|	VoC_lw32z(RL7,IN_PARALLEL)
0x0A8EE102,	//0x1452		VoC_lw16i(RL7_LO,0x80)(lo)	|	VoC_lw16i_short(REG2,0x10,IN_PARALLEL)
0x5C080080,	//0x1454		VoC_sw16_p(ACC0_LO,REG0,DEFAULT)	|	VoC_lw16i(RL7_LO,0x80)(hi)
0xC9BEFF26,	//0x1456		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x0E522B80,	//0x1458		VoC_jal(Coolsand_MSBPos)
0xC2C3F1C0,	//0x145a		VoC_sub16_rr(REG3,REG3,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0xe,DEFAULT)
0x42A41401,	//0x145c		VoC_lw16_d(REG1,0x42a4)
0xF8C1FE19,	//0x145e		VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x0A82F841,	//0x1460		VoC_lw16i(REG2,0x80)(lo)	|	VoC_shr16_ri(REG1,0x8,DEFAULT)
0xC28C0080,	//0x1462		VoC_sub16_rr(REG4,REG2,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x80)(hi)
0x25300A81,	//0x1464		VoC_lw16i(REG1,0x2530)
0x223B0709,	//0x1466		VoC_add16_rd(REG1,REG1,0x223b)
0x42C56E10,	//0x1468		VoC_bnez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L3,0x42c5)
0xE02278F4,	//0x146a		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x42A5382C,	//0x146c		VoC_bgt16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2,REG4,0x42a5)
0x42A51404,	//0x146e		VoC_lw16_d(REG4,0x42a5)
0xF814C114,	//0x1470		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
		//0x1471		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2
0x23C66C26,	//0x1472		VoC_bez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,0x23c6)
0x007F0A84,	//0x1474		VoC_lw16i(REG4,0x7f)
0x14982B00,	//0x1476		VoC_jump_lg(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End)
		//0x1478		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L3
0xE0137042,	//0x1478		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x42AD0A85,	//0x147a		VoC_lw16i(REG5,0x42ad)
0x223B072D,	//0x147c		VoC_add16_rd(REG5,REG5,0x223b)
0x23C64422,	//0x147e		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L4,REG2,0x23c6)
0xFFC05853,	//0x1480		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG3,REG5,DEFAULT)
		//0x1482		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L4
0x42A5081E,	//0x1482		VoC_mult16_rd(REG6,REG3,0x42a5)
0xE02778F4,	//0x1484		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x148A3426,	//0x1486		VoC_bgt16_rr(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L5,REG4,REG6)
0xC13CE0C4,	//0x1488		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x148a		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L5
0xFFC07814,	//0x148a		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
		//0x148c		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L7
0xE0337022,	//0x148c		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x23C64432,	//0x148e		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L6,REG2,0x23c6)
0x007F0A84,	//0x1490		VoC_lw16i(REG4,0x7f)
0xFFC065C6,	//0x1492		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End)
		//0x1494		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L6
0x23C64423,	//0x1494		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,REG3,0x23c6)
0x007F0A84,	//0x1496		VoC_lw16i(REG4,0x7f)
		//0x1498		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End
0xDC14DFA9,	//0x1498		VoC_sw16_p(REG4,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x149a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x149b		Coolsand_EchoPSDEst_MFCOHFFix
0x223B1402,	//0x149c		VoC_lw16_d(REG2,0x223b)
0xF8EA5F42,	//0x149e		VoC_shr16_ri(REG2,0xfffffffd,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x1F280A86,	//0x14a0		VoC_lw16i(REG6,0x1f28)
0x1F700A87,	//0x14a2		VoC_lw16i(REG7,0x1f70)
0xC1D7C196,	//0x14a4		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0xF0065860,	//0x14a6		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG6,DEFAULT)
0xF0075871,	//0x14a8		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG7,DEFAULT)
0x0F862B80,	//0x14aa		VoC_jal(Coolsand_CmplxAppxNorm)
0xF4196101,	//0x14ac		VoC_lw16i_short(FORMAT32,0x3,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0x0A80CC4C,	//0x14ae		VoC_lw16i(REG0,0x23ec)(lo)	|	VoC_multf32_rr(ACC0,REG1,REG1,DEFAULT)
0x140123EC,	//0x14b0		VoC_lw16_d(REG1,0x223b)(lo)	|	VoC_lw16i(REG0,0x23ec)(hi)
0x78F9223B,	//0x14b2		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG1,0x223b)(hi)
0x4008FBB4,	//0x14b4		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff6,IN_PARALLEL)
0x1401FA54,	//0x14b6		VoC_lw16_d(REG1,0x42a1)(lo)	|	VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)
0xD98542A1,	//0x14b8		VoC_lw32_p(ACC1,REG0,DEFAULT)	|	VoC_lw16_d(REG1,0x42a1)(hi)
0xFF197F27,	//0x14ba		VoC_movreg32(REG23,REG67,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x7BB2CBEA,	//0x14bc		VoC_shr32_ri(REG45,0xfffffff6,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)
0x7A4AFF2C,	//0x14be		VoC_shr32_ri(REG45,0x9,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x790CF439,	//0x14c0		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)
0xCE21F5C2,	//0x14c2		VoC_mac32_rr(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0xFFC0CE69,	//0x14c4		VoC_NOP	|	VoC_macX_rr(REG5,REG1,DEFAULT)
0xF4297BB4,	//0x14c6		VoC_lw16i_short(FORMAT32,0x5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)
0xFA547F47,	//0x14c8		VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xFF265F02,	//0x14ca		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xE0005D84,	//0x14cc		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x223B1407,	//0x14ce		VoC_lw16_d(REG7,0x223b)
0xF8E7422D,	//0x14d0		VoC_shr16_ri(REG7,0xfffffffc,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0x23FE1808,	//0x14d2		VoC_lw16i_set_inc(REG0,0x23fe,0x2)
0x248E1809,	//0x14d4		VoC_lw16i_set_inc(REG1,0x248e,0x2)
0xC0794038,	//0x14d6		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x42A11407,	//0x14d8		VoC_lw16_d(REG7,0x42a1)
0x15332C10,	//0x14da		VoC_loop_i(0x0,0x8)
0x995D9914,	//0x14dc		VoC_multf32_rp(ACC1,REG5,REG3,DEFAULT)	|	VoC_multf32_rp(ACC0,REG4,REG2,DEFAULT)
0xFBB5FBB4,	//0x14de		VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)
0xFA557A54,	//0x14e0		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xa,DEFAULT)
0xCB2E1B1C,	//0x14e2		VoC_sub32_rr(RL6,ACC0,ACC1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,DEFAULT)
0xFBB49B55,	//0x14e4		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG5,REG2,DEFAULT)
0xDF427BB5,	//0x14e6		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0xFA557A54,	//0x14e8		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xa,DEFAULT)
0xDF41492D,	//0x14ea		VoC_push32(REG23,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0xFBB57BB6,	//0x14ec		VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff6,DEFAULT)
0xFA557A56,	//0x14ee		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xa,DEFAULT)
0xF4391581,	//0x14f0		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_sub32_rp(REG23,RL6,REG0,DEFAULT)
0xF5C2154A,	//0x14f2		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_sub32_rp(REG45,ACC1,REG1,DEFAULT)
0xFBB27BB1,	//0x14f4		VoC_shr32_ri(REG45,0xfffffff6,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff6,DEFAULT)
0xFA4A7A49,	//0x14f6		VoC_shr32_ri(REG45,0x9,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x9,DEFAULT)
0xF90C790A,	//0x14f8		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCD3D4CBC,	//0x14fa		VoC_multf32_rr(ACC1,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG7,DEFAULT)
0xCEAF4E5F,	//0x14fc		VoC_macX_rr(REG5,REG7,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG7,DEFAULT)
0x7BB4FFC0,	//0x14fe		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_NOP
0x7A54FBB5,	//0x1500		VoC_shr32_ri(ACC0,0xa,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)
0x9104FA55,	//0x1502		VoC_add32_rp(ACC0,ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)
0x7BB4914D,	//0x1504		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_add32_rp(ACC1,ACC1,REG1,DEFAULT)
0x7A54FBB5,	//0x1506		VoC_shr32_ri(ACC0,0xa,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)
0xFFC0FA55,	//0x1508		VoC_NOP	|	VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)
0xFA2C5DC4,	//0x150a		VoC_shr32_ri(ACC0,0x5,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xFA2D5DCD,	//0x150c		VoC_shr32_ri(ACC1,0x5,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0xFB7D7B7C,	//0x150e		VoC_shr32_ri(ACC1,0xffffffef,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)
0xFA8D7A8C,	//0x1510		VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0xFAFC7F22,	//0x1512		VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x7F2EE562,	//0x1514		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0x656EFAFD,	//0x1516		VoC_xor32_rr(RL6,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x1f,IN_PARALLEL)
0xCBADCAA4,	//0x1518		VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)	|	VoC_sub32_rr(ACC0,REG45,ACC0,IN_PARALLEL)
0xFB7D7B7C,	//0x151a		VoC_shr32_ri(ACC1,0xffffffef,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)
0xFA8D7A8C,	//0x151c		VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0x15223625,	//0x151e		VoC_bgt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L0,ACC0,ACC1)
0xFF257F2C,	//0x1520		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x1522		Coolsand_EchoPSDEst_MFCOHFFix_L0
0xFF2A7F26,	//0x1522		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFD7BDC,	//0x1524		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffb,DEFAULT)
0xC9554B34,	//0x1526		VoC_add32_rr(ACC1,ACC1,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFA1D7A2C,	//0x1528		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0xFB7CC92C,	//0x152a		VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xF4017A8C,	//0x152c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0xFF3C6106,	//0x152e		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x5F01CE36,	//0x1530		VoC_pop32(REG23,DEFAULT)	|	VoC_mac32_rr(REG6,REG6,DEFAULT)
0x5F02F429,	//0x1532		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x5,IN_PARALLEL)
		//0x1533		VoC_endloop0
0x0A80FF27,	//0x1534		VoC_lw16i(REG0,0x2550)(lo)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0x0A812550,	//0x1536		VoC_lw16i(REG1,0x2562)(lo)	|	VoC_lw16i(REG0,0x2550)(hi)
0x0A822562,	//0x1538		VoC_lw16i(REG2,0x23ec)(lo)	|	VoC_lw16i(REG1,0x2562)(hi)
0x140423EC,	//0x153a		VoC_lw16_d(REG4,0x223b)(lo)	|	VoC_lw16i(REG2,0x23ec)(hi)
0x7043223B,	//0x153c		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_lw16_d(REG4,0x223b)(hi)
0x4020F8FC,	//0x153e		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)
0xC0A2C061,	//0x1540		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xD98CD986,	//0x1542		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0x1404D995,	//0x1544		VoC_lw16_d(REG4,0x23c6)(lo)	|	VoC_lw32_p(ACC1,REG2,DEFAULT)
0x359C23C6,	//0x1546		VoC_bne16_rr(Coolsand_EchoPSDEst_MFCOHFFix_L4,REG3,REG4)(lo)	|	VoC_lw16_d(REG4,0x23c6)(hi)
0x3306158C,	//0x1548		VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L4,RL6)(lo)	|	VoC_bne16_rr(Coolsand_EchoPSDEst_MFCOHFFix_L4,REG3,REG4)(hi)
0xDF47158C,	//0x154a		VoC_push32(RL7,DEFAULT)	|	VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L4,RL6)(hi)
0xDF467A24,	//0x154c		VoC_push32(RL6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x4,DEFAULT)
0x15523344,	//0x154e		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L1,ACC0)
0xE0097028,	//0x1550		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x1552		Coolsand_EchoPSDEst_MFCOHFFix_L1
0xE1227F26,	//0x1552		VoC_lw16i_short(REG2,0x12,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0E522B80,	//0x1554		VoC_jal(Coolsand_MSBPos)
0xFF447107,	//0x1556		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0xE01842FB,	//0x1558		VoC_lw16i_short(ACC0_LO,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)
0xFBAC7E9D,	//0x155a		VoC_shr32_ri(ACC0,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xE0027BBD,	//0x155c		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff7,DEFAULT)
0xDF007A4D,	//0x155e		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x9,DEFAULT)
0x156336AC,	//0x1560		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L2,ACC1,ACC0)
0xF0A4F102,	//0x1562		VoC_lw16i_short(REG4,0x5,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1563		Coolsand_EchoPSDEst_MFCOHFFix_L2
0xFA307E95,	//0x1564		VoC_shr32_ri(REG01,0x6,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG2,DEFAULT)
0xFB857B80,	//0x1566		VoC_shr32_ri(ACC1,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff0,DEFAULT)
0xC3146163,	//0x1568		VoC_sub16_rr(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG3,ACC1_HI,DEFAULT)
0xF6994C58,	//0x156a		VoC_movreg16(FORMAT32,REG4,IN_PARALLEL)	|	VoC_multf32_rr(REG01,REG1,REG3,DEFAULT)
0x42AC1403,	//0x156c		VoC_lw16_d(REG3,0x42ac)
0xF4097BC0,	//0x156e		VoC_lw16i_short(FORMAT32,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff8,DEFAULT)
0xF5927A38,	//0x1570		VoC_lw16i_short(FORMATX,0xfffffff2,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x7,DEFAULT)
0xCC1CF908,	//0x1572		VoC_multf32_rr(ACC0,REG0,REG3,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xDF074E4B,	//0x1574		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_macX_rr(REG1,REG3,DEFAULT)
0x251E0A80,	//0x1576		VoC_lw16i(REG0,0x251e)
0x223B1404,	//0x1578		VoC_lw16_d(REG4,0x223b)
0xF8FC7BC4,	//0x157a		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xC0207A44,	//0x157c		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x5986FF25,	//0x157e		VoC_lw32_p(RL6,REG0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x36B5FBF5,	//0x1580		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L3,RL6,ACC1)(lo)	|	VoC_shr32_ri(ACC1,0xfffffffe,IN_PARALLEL)
0xFA161586,	//0x1582		VoC_shr32_ri(RL6,0x2,DEFAULT)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L3,RL6,ACC1)(hi)
0xFFC07F34,	//0x1584		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x1586		Coolsand_EchoPSDEst_MFCOHFFix_L3
0x15B83344,	//0x1586		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,ACC0)
0xE0097028,	//0x1588		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0x15B82B00,	//0x158a		VoC_jump_lg(Coolsand_EchoPSDEst_MFCOHFFix_L7)
		//0x158c		Coolsand_EchoPSDEst_MFCOHFFix_L4
0x708AFF2E,	//0x158c		VoC_lw16i_short(ACC1_LO,0x4,DEFAULT)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0x36B5E00B,	//0x158e		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL6,ACC1)(lo)	|	VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)
0x33471596,	//0x1590		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL7)(lo)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL6,ACC1)(hi)
0x700F1596,	//0x1592		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL7)(hi)
0xFFC0E01E,	//0x1594		VoC_NAD	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
		//0x1596		Coolsand_EchoPSDEst_MFCOHFFix_L5
0x159C3346,	//0x1596		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L6,RL6)
0x23C66C04,	//0x1598		VoC_bez16_d(Coolsand_EchoPSDEst_MFCOHFFix_L6,0x23c6)
0xFFC07F47,	//0x159a		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x159c		Coolsand_EchoPSDEst_MFCOHFFix_L6
0xFF3572C2,	//0x159c		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x16,DEFAULT)
0x0E522B80,	//0x159e		VoC_jal(Coolsand_MSBPos)
0x0A80F164,	//0x15a0		VoC_lw16i(REG0,0x251e)(lo)	|	VoC_lw16i_short(REG4,0xb,DEFAULT)
0x1407251E,	//0x15a2		VoC_lw16_d(REG7,0x223b)(lo)	|	VoC_lw16i(REG0,0x251e)(hi)
0x42E3223B,	//0x15a4		VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16_d(REG7,0x223b)(hi)
0x7E9FF8FF,	//0x15a6		VoC_shr32_rr(RL7,REG3,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)
0x7BC7C038,	//0x15a8		VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)
0x7A47E009,	//0x15aa		VoC_shr32_ri(RL7,0x8,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
0x3307E018,	//0x15ac		VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL7)(lo)	|	VoC_lw16i_short(ACC0_LO,0x1,IN_PARALLEL)
0x7F3C15B8,	//0x15ae		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL7)(hi)
0x7BF5FF3D,	//0x15b0		VoC_shr32_ri(ACC1,0xfffffffe,DEFAULT)	|	VoC_movreg32(ACC1,RL7,IN_PARALLEL)
0x36B5D986,	//0x15b2		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL6,ACC1)(lo)	|	VoC_lw32_p(RL6,REG0,IN_PARALLEL)
0xFA1615B8,	//0x15b4		VoC_shr32_ri(RL6,0x2,DEFAULT)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL6,ACC1)(hi)
0xFFC07F34,	//0x15b6		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x15b8		Coolsand_EchoPSDEst_MFCOHFFix_L7
0x223B1407,	//0x15b8		VoC_lw16_d(REG7,0x223b)
0xF8FF5D84,	//0x15ba		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x23EC0A81,	//0x15bc		VoC_lw16i(REG1,0x23ec)
0x25620A82,	//0x15be		VoC_lw16i(REG2,0x2562)
0x25500A83,	//0x15c0		VoC_lw16i(REG3,0x2550)
0xC0BA4079,	//0x15c2		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x1486C0FB,	//0x15c4		VoC_lw32_d(RL6,0x42aa)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x598D42AA,	//0x15c6		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw32_d(RL6,0x42aa)(hi)
0x6E08FBE6,	//0x15c8		VoC_bnez16_d(Coolsand_EchoPSDEst_MFCOHFFix_End,0x23c6)(lo)	|	VoC_shr32_ri(RL6,0xfffffffc,IN_PARALLEL)
0x36AE23C6,	//0x15ca		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC1,RL6)(lo)	|	VoC_bnez16_d(Coolsand_EchoPSDEst_MFCOHFFix_End,0x23c6)(hi)
0x542415D1,	//0x15cc		VoC_bngt32_rd(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC0,0x42aa)(lo)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC1,RL6)(hi)
0xDD9542AA,	//0x15ce		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_bngt32_rd(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC0,0x42aa)(hi)
0xDFA9DD9C,	//0x15d0		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_p(ACC0,REG3,DEFAULT)
		//0x15d1		Coolsand_EchoPSDEst_MFCOHFFix_End
0xE580FFC0,	//0x15d2		VoC_return	|	VoC_NOP
		//0x15d4		Coolsand_ControlLogicDTD
0x0A80DFE9,	//0x15d4		VoC_lw16i(REG0,0x1ee8)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A811EE8,	//0x15d6		VoC_lw16i(REG1,0x1ef8)(lo)	|	VoC_lw16i(REG0,0x1ee8)(hi)
0x07001EF8,	//0x15d8		VoC_add16_rd(REG0,REG0,0x21cd)(lo)	|	VoC_lw16i(REG1,0x1ef8)(hi)
0x070921CD,	//0x15da		VoC_add16_rd(REG1,REG1,0x21cd)(lo)	|	VoC_add16_rd(REG0,REG0,0x21cd)(hi)
0xD80021CD,	//0x15dc		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x21cd)(hi)
0x2B80D811,	//0x15de		VoC_jal(Cooland_InstantPower)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xFF2713EB,	//0x15e0		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_jal(Cooland_InstantPower)(hi)
0xF5C270F9,	//0x15e2		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x25840A81,	//0x15e4		VoC_lw16i(REG1,0x2584)
0x21C30709,	//0x15e6		VoC_add16_rd(REG1,REG1,0x21c3)
0x42C21401,	//0x15e8		VoC_lw16_d(REG1,0x42c2)
0xFFC0598C,	//0x15ea		VoC_NAD(IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0x0F982B80,	//0x15ec		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x15F23344,	//0x15ee		VoC_bnez32_r(Coolsand_ControlLogicDTD_L0,ACC0)
0xE0097028,	//0x15f0		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x15f2		Coolsand_ControlLogicDTD_L0
0x21000A80,	//0x15f2		VoC_lw16i(REG0,0x2100)
0x210A0A81,	//0x15f4		VoC_lw16i(REG1,0x210a)
0x21CD0700,	//0x15f6		VoC_add16_rd(REG0,REG0,0x21cd)
0x21CD0709,	//0x15f8		VoC_add16_rd(REG1,REG1,0x21cd)
0xD811D800,	//0x15fa		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x25840A82,	//0x15fc		VoC_lw16i(REG2,0x2584)
0x21C30712,	//0x15fe		VoC_add16_rd(REG2,REG2,0x21c3)
0xDD94FFC0,	//0x1600		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x13EB2B80,	//0x1602		VoC_jal(Cooland_InstantPower)
0x70F9FF27,	//0x1604		VoC_lw16i_short(FORMAT32,0x7,DEFAULT)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0A81F5C2,	//0x1606		VoC_lw16i(REG1,0x2588)(lo)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0x07092588,	//0x1608		VoC_add16_rd(REG1,REG1,0x21c3)(lo)	|	VoC_lw16i(REG1,0x2588)(hi)
0x140121C3,	//0x160a		VoC_lw16_d(REG1,0x42c2)(lo)	|	VoC_add16_rd(REG1,REG1,0x21c3)(hi)
0xD98C42C2,	//0x160c		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16_d(REG1,0x42c2)(hi)
0x0F982B80,	//0x160e		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x16143344,	//0x1610		VoC_bnez32_r(Coolsand_ControlLogicDTD_L1,ACC0)
0xE0097028,	//0x1612		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x1614		Coolsand_ControlLogicDTD_L1
0x1EE80A80,	//0x1614		VoC_lw16i(REG0,0x1ee8)
0x1EF80A81,	//0x1616		VoC_lw16i(REG1,0x1ef8)
0x21CD0700,	//0x1618		VoC_add16_rd(REG0,REG0,0x21cd)
0x21CD0709,	//0x161a		VoC_add16_rd(REG1,REG1,0x21cd)
0xD811D800,	//0x161c		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x21000A82,	//0x161e		VoC_lw16i(REG2,0x2100)
0x210A0A83,	//0x1620		VoC_lw16i(REG3,0x210a)
0x21CD0712,	//0x1622		VoC_add16_rd(REG2,REG2,0x21cd)
0x21CD071B,	//0x1624		VoC_add16_rd(REG3,REG3,0x21cd)
0xD833D822,	//0x1626		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xC2C94210,	//0x1628		VoC_sub16_rr(REG1,REG3,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)
0x25880A82,	//0x162a		VoC_lw16i(REG2,0x2588)
0x21C30712,	//0x162c		VoC_add16_rd(REG2,REG2,0x21c3)
0xDD94DF40,	//0x162e		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x13EB2B80,	//0x1630		VoC_jal(Cooland_InstantPower)
0x70F9FF27,	//0x1632		VoC_lw16i_short(FORMAT32,0x7,DEFAULT)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0A81F5C2,	//0x1634		VoC_lw16i(REG1,0x258c)(lo)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0x0709258C,	//0x1636		VoC_add16_rd(REG1,REG1,0x21c3)(lo)	|	VoC_lw16i(REG1,0x258c)(hi)
0x140121C3,	//0x1638		VoC_lw16_d(REG1,0x42c2)(lo)	|	VoC_add16_rd(REG1,REG1,0x21c3)(hi)
0xD98C42C2,	//0x163a		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16_d(REG1,0x42c2)(hi)
0x0F982B80,	//0x163c		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x16423344,	//0x163e		VoC_bnez32_r(Coolsand_ControlLogicDTD_L2,ACC0)
0xE0097028,	//0x1640		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x1642		Coolsand_ControlLogicDTD_L2
0x258C0A82,	//0x1642		VoC_lw16i(REG2,0x258c)
0x21C30712,	//0x1644		VoC_add16_rd(REG2,REG2,0x21c3)
0xDD94FFC0,	//0x1646		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x25840A82,	//0x1648		VoC_lw16i(REG2,0x2584)
0x21C30712,	//0x164a		VoC_add16_rd(REG2,REG2,0x21c3)
0xD995FFC0,	//0x164c		VoC_lw32_p(ACC1,REG2,DEFAULT)	|	VoC_NOP
0x25900A82,	//0x164e		VoC_lw16i(REG2,0x2590)
0x21C30712,	//0x1650		VoC_add16_rd(REG2,REG2,0x21c3)
0xD994FFC0,	//0x1652		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x13462B80,	//0x1654		VoC_jal(Coolsand_InstantSNR)
0xE0727107,	//0x1656		VoC_lw16i_short(REG2,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x25840A80,	//0x1658		VoC_lw16i(REG0,0x2584)
0x25900A81,	//0x165a		VoC_lw16i(REG1,0x2590)
0x21C30700,	//0x165c		VoC_add16_rd(REG0,REG0,0x21c3)
0x21C30709,	//0x165e		VoC_add16_rd(REG1,REG1,0x21c3)
0x25A01507,	//0x1660		VoC_sw16_d(REG7,0x25a0)
0x25A11502,	//0x1662		VoC_sw16_d(REG2,0x25a1)
0x22051406,	//0x1664		VoC_lw16_d(REG6,0x2205)
0x25940A87,	//0x1666		VoC_lw16i(REG7,0x2594)
0x21C3073F,	//0x1668		VoC_add16_rd(REG7,REG7,0x21c3)
0x42C21402,	//0x166a		VoC_lw16_d(REG2,0x42c2)
0x13582B80,	//0x166c		VoC_jal(Coolsand_OverallNoiseEst)
0xF4397000,	//0x166e		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x1EE80A82,	//0x1670		VoC_lw16i(REG2,0x1ee8)
0x1EF80A83,	//0x1672		VoC_lw16i(REG3,0x1ef8)
0x21CD0712,	//0x1674		VoC_add16_rd(REG2,REG2,0x21cd)
0x21CD071B,	//0x1676		VoC_add16_rd(REG3,REG3,0x21cd)
0xD833D822,	//0x1678		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x21000A84,	//0x167a		VoC_lw16i(REG4,0x2100)
0x210A0A85,	//0x167c		VoC_lw16i(REG5,0x210a)
0x21CD0724,	//0x167e		VoC_add16_rd(REG4,REG4,0x21cd)
0x21CD072D,	//0x1680		VoC_add16_rd(REG5,REG5,0x21cd)
0xD855D844,	//0x1682		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xFFC0422D,	//0x1684		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0x17822B80,	//0x1686		VoC_jal(Coolsand_CmplxMul)
0xF5C270F9,	//0x1688		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x42C21401,	//0x168a		VoC_lw16_d(REG1,0x42c2)
0xFF2F7F26,	//0x168c		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x25740A82,	//0x168e		VoC_lw16i(REG2,0x2574)
0x25780A83,	//0x1690		VoC_lw16i(REG3,0x2578)
0x21C30712,	//0x1692		VoC_add16_rd(REG2,REG2,0x21c3)
0x21C3071B,	//0x1694		VoC_add16_rd(REG3,REG3,0x21c3)
0xD99DD994,	//0x1696		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0x17982B80,	//0x1698		VoC_jal(Coolsand_Double_FirstOrderIIRSmooth2)
0xF4395F02,	//0x169a		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x25740A82,	//0x169c		VoC_lw16i(REG2,0x2574)
0x25780A83,	//0x169e		VoC_lw16i(REG3,0x2578)
0x21C30712,	//0x16a0		VoC_add16_rd(REG2,REG2,0x21c3)
0x21C3071B,	//0x16a2		VoC_add16_rd(REG3,REG3,0x21c3)
0xDD9DDD94,	//0x16a4		VoC_sw32_p(ACC1,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0x1EE80A82,	//0x16a6		VoC_lw16i(REG2,0x1ee8)
0x1EF80A83,	//0x16a8		VoC_lw16i(REG3,0x1ef8)
0x21CD0712,	//0x16aa		VoC_add16_rd(REG2,REG2,0x21cd)
0x21CD071B,	//0x16ac		VoC_add16_rd(REG3,REG3,0x21cd)
0xD833D822,	//0x16ae		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x17822B80,	//0x16b0		VoC_jal(Coolsand_CmplxMul)
0xF5C270F9,	//0x16b2		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x42C21401,	//0x16b4		VoC_lw16_d(REG1,0x42c2)
0xFF2F7F26,	//0x16b6		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x257C0A82,	//0x16b8		VoC_lw16i(REG2,0x257c)
0x25800A83,	//0x16ba		VoC_lw16i(REG3,0x2580)
0x21C30712,	//0x16bc		VoC_add16_rd(REG2,REG2,0x21c3)
0x21C3071B,	//0x16be		VoC_add16_rd(REG3,REG3,0x21c3)
0xD99DD994,	//0x16c0		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0x17982B80,	//0x16c2		VoC_jal(Coolsand_Double_FirstOrderIIRSmooth2)
0x257C0A82,	//0x16c4		VoC_lw16i(REG2,0x257c)
0x25800A83,	//0x16c6		VoC_lw16i(REG3,0x2580)
0x21C30712,	//0x16c8		VoC_add16_rd(REG2,REG2,0x21c3)
0x21C3071B,	//0x16ca		VoC_add16_rd(REG3,REG3,0x21c3)
0xDD9DDD94,	//0x16cc		VoC_sw32_p(ACC1,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0x0E382B80,	//0x16ce		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xE01A7BC4,	//0x16d0		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xE00B7A44,	//0x16d2		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xE0877BB5,	//0x16d4		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0x16DA3625,	//0x16d6		VoC_bgt32_rr(Coolsand_ControlLogicDTD_L3,ACC0,ACC1)
0xFFC07007,	//0x16d8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x16da		Coolsand_ControlLogicDTD_L3
0x25840A82,	//0x16da		VoC_lw16i(REG2,0x2584)
0x21C30712,	//0x16dc		VoC_add16_rd(REG2,REG2,0x21c3)
0x25900A83,	//0x16de		VoC_lw16i(REG3,0x2590)
0x21C3071B,	//0x16e0		VoC_add16_rd(REG3,REG3,0x21c3)
0x9599D996,	//0x16e2		VoC_sub32_rp(REG23,RL6,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xF4017EBC,	//0x16e4		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0xFBF96106,	//0x16e6		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0xF90A4DB6,	//0x16e8		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_multf32_rr(RL6,REG6,REG6,DEFAULT)
0x42C31400,	//0x16ea		VoC_lw16_d(REG0,0x42c3)
0xE08170E6,	//0x16ec		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0xC3C941BE,	//0x16ee		VoC_sub16_rr(REG1,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x258C0A84,	//0x16f0		VoC_lw16i(REG4,0x258c)
0x21C30724,	//0x16f2		VoC_add16_rd(REG4,REG4,0x21c3)
0xD9A2FFC0,	//0x16f4		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_NOP
0xFBFA60D9,	//0x16f6		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(FORMAT32,REG6,DEFAULT)
0xF90C603A,	//0x16f8		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(FORMATX,REG1,DEFAULT)
0xCD054C84,	//0x16fa		VoC_multf32_rr(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)
0xCEA84E58,	//0x16fc		VoC_macX_rr(REG5,REG0,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG0,DEFAULT)
0x7F21F019,	//0x16fe		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x7B81FF2A,	//0x1700		VoC_shr32_ri(REG23,0xfffffff0,DEFAULT)	|	VoC_movreg32(REG45,ACC1,IN_PARALLEL)
0x3103FB82,	//0x1702		VoC_bgtz16_r(Coolsand_ControlLogicDTD_L4,REG3)(lo)	|	VoC_shr32_ri(REG45,0xfffffff0,IN_PARALLEL)
0xF0231706,	//0x1704		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bgtz16_r(Coolsand_ControlLogicDTD_L4,REG3)(hi)
		//0x1706		Coolsand_ControlLogicDTD_L4
0x170A31C5,	//0x1706		VoC_bnez16_r(Coolsand_ControlLogicDTD_L5,REG5)
0xFFC07025,	//0x1708		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x170a		Coolsand_ControlLogicDTD_L5
0xF5C272E6,	//0x170a		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x17,DEFAULT)
0xC3BE4CEA,	//0x170c		VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_multf32_rr(REG45,REG3,REG5,DEFAULT)
0xF8FE7327,	//0x170e		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x19,DEFAULT)
0xF4397BFA,	//0x1710		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xDF42790C,	//0x1712		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x42C61402,	//0x1714		VoC_lw16_d(REG2,0x42c6)
0xCE6ACD14,	//0x1716		VoC_macX_rr(REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xFF22FFC0,	//0x1718		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0xF90CFBFA,	//0x171a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE6ACD14,	//0x171c		VoC_macX_rr(REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0x4BA7FFC0,	//0x171e		VoC_sub32_rr(RL7,RL6,ACC0,DEFAULT)	|	VoC_NOP
0x7EB7C3BE,	//0x1720		VoC_shr32_rr(RL7,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
0x0A84DF46,	//0x1722		VoC_lw16i(REG4,0x2574)(lo)	|	VoC_push32(RL6,IN_PARALLEL)
0x0A852574,	//0x1724		VoC_lw16i(REG5,0x2578)(lo)	|	VoC_lw16i(REG4,0x2574)(hi)
0x0A872578,	//0x1726		VoC_lw16i(REG7,0x2598)(lo)	|	VoC_lw16i(REG5,0x2578)(hi)
0x07242598,	//0x1728		VoC_add16_rd(REG4,REG4,0x21c3)(lo)	|	VoC_lw16i(REG7,0x2598)(hi)
0x072D21C3,	//0x172a		VoC_add16_rd(REG5,REG5,0x21c3)(lo)	|	VoC_add16_rd(REG4,REG4,0x21c3)(hi)
0x073F21C3,	//0x172c		VoC_add16_rd(REG7,REG7,0x21c3)(lo)	|	VoC_add16_rd(REG5,REG5,0x21c3)(hi)
0xD9A421C3,	//0x172e		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x21c3)(hi)
0xDDBFD9AD,	//0x1730		VoC_sw32_p(RL7,REG7,DEFAULT)	|	VoC_lw32_p(ACC1,REG5,DEFAULT)
0x0E382B80,	//0x1732		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xE01A7BC4,	//0x1734		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xE00B7A44,	//0x1736		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xE0877BB5,	//0x1738		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0x173E3625,	//0x173a		VoC_bgt32_rr(Coolsand_ControlLogicDTD_L6,ACC0,ACC1)
0xFFC07007,	//0x173c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x173e		Coolsand_ControlLogicDTD_L6
0x25840A82,	//0x173e		VoC_lw16i(REG2,0x2584)
0x21C30712,	//0x1740		VoC_add16_rd(REG2,REG2,0x21c3)
0xF4017EBC,	//0x1742		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0x6106D991,	//0x1744		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_lw32_p(REG23,REG2,DEFAULT)
0x4DB6FBF9,	//0x1746		VoC_multf32_rr(RL6,REG6,REG6,DEFAULT)	|	VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)
0x1400F90A,	//0x1748		VoC_lw16_d(REG0,0x42c4)(lo)	|	VoC_shru16_ri(REG2,0x1,IN_PARALLEL)
0x70E642C4,	//0x174a		VoC_lw16i_short(REG6,0x7,DEFAULT)	|	VoC_lw16_d(REG0,0x42c4)(hi)
0x41BEE081,	//0x174c		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG1,0x8,IN_PARALLEL)
0x0A84C3C9,	//0x174e		VoC_lw16i(REG4,0x2588)(lo)	|	VoC_sub16_rr(REG1,REG7,REG1,IN_PARALLEL)
0x07242588,	//0x1750		VoC_add16_rd(REG4,REG4,0x21c3)(lo)	|	VoC_lw16i(REG4,0x2588)(hi)
0xFFC021C3,	//0x1752		VoC_NOP	|	VoC_add16_rd(REG4,REG4,0x21c3)(hi)
0x60D9D9A2,	//0x1754		VoC_movreg16(FORMAT32,REG6,DEFAULT)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0x603AFBFA,	//0x1756		VoC_movreg16(FORMATX,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)
0x4C84F90C,	//0x1758		VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0x4E58CD05,	//0x175a		VoC_macX_rr(REG3,REG0,DEFAULT)	|	VoC_multf32_rr(ACC1,REG4,REG0,IN_PARALLEL)
0xF019CEA8,	//0x175c		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_macX_rr(REG5,REG0,IN_PARALLEL)
0xFF2A7F21,	//0x175e		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0xFB827B81,	//0x1760		VoC_shr32_ri(REG45,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff0,DEFAULT)
0x176631C3,	//0x1762		VoC_bnez16_r(Coolsand_ControlLogicDTD_L7,REG3)
0xFFC07023,	//0x1764		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x1766		Coolsand_ControlLogicDTD_L7
0x176931C5,	//0x1766		VoC_bnez16_r(Coolsand_ControlLogicDTD_L8,REG5)
0xF2E6F025,	//0x1768		VoC_lw16i_short(REG6,0x17,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x1769		Coolsand_ControlLogicDTD_L8
0xC3BE4CEC,	//0x176a		VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)
0xF8FE7325,	//0x176c		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x19,DEFAULT)
0xC3AE4BA5,	//0x176e		VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,RL6,ACC0,DEFAULT)
0xDF077EB5,	//0x1770		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG6,DEFAULT)
0x259C0A86,	//0x1772		VoC_lw16i(REG6,0x259c)
0x21C30736,	//0x1774		VoC_add16_rd(REG6,REG6,0x21c3)
0xDF057000,	//0x1776		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x36AFDDB5,	//0x1778		VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,ACC1,RL7)(lo)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0x36B4177E,	//0x177a		VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,RL6,ACC0)(lo)	|	VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,ACC1,RL7)(hi)
0xF020177E,	//0x177c		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,RL6,ACC0)(hi)
		//0x177e		Coolsand_ControlLogicDTD_L9
0xFFC0DFA9,	//0x177e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1780		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1782		Coolsand_CmplxMul
0xCD5D4D14,	//0x1782		VoC_multf32_rr(ACC1,REG5,REG3,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xCD554D1C,	//0x1784		VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG3,DEFAULT)
0xFF2F7F26,	//0x1786		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBC57BC4,	//0x1788		VoC_shr32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xFA457A44,	//0x178a		VoC_shr32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xFBC77BC6,	//0x178c		VoC_shr32_ri(RL7,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)
0xFA477A46,	//0x178e		VoC_shr32_ri(RL7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
0xC92D4BBC,	//0x1790		VoC_add32_rr(ACC1,ACC0,ACC1,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,RL6,RL7,DEFAULT)
0xFBC57BC4,	//0x1792		VoC_shr32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xFA457A44,	//0x1794		VoC_shr32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xFFC06580,	//0x1796		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1798		Coolsand_Double_FirstOrderIIRSmooth2
0xCBEA4BA1,	//0x1798		VoC_sub32_rr(REG45,RL7,ACC1,IN_PARALLEL)	|	VoC_sub32_rr(REG23,RL6,ACC0,DEFAULT)
0xFBC2FBC1,	//0x179a		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_shr32_ri(REG23,0xfffffff8,DEFAULT)
0xFA3A7A39,	//0x179c		VoC_shr32_ri(REG45,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x7,DEFAULT)
0xF90C790A,	//0x179e		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCE214E11,	//0x17a0		VoC_mac32_rr(REG4,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG2,REG1,DEFAULT)
0xCEA94E59,	//0x17a2		VoC_macX_rr(REG5,REG1,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG1,DEFAULT)
0xFFC0E580,	//0x17a4		VoC_NAD	|	VoC_return
