		//0x1f00		VoC_code_section_2
		//0x1f00		CII_JPEG_Decode
0x7F44DFE9,	//0x1f00		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF000F401,	//0x1f02		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xF01DF01C,	//0x1f04		VoC_lw16i_short(WRAP1,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF01FF01E,	//0x1f06		VoC_lw16i_short(WRAP3,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x7FC11540,	//0x1f08		VoC_sw16_d(REG0,0xffc1)
0x003F0A96,	//0x1f0a		VoC_lw16i(STATUS,0x3f)
0x0F361584,	//0x1f0c		VoC_sw32_d(ACC0,0xf36)
0x0F381509,	//0x1f0e		VoC_sw16_d(ACC0_HI,0xf38)
0x21402B80,	//0x1f10		VoC_jal(CII_DMAI_READDATA)
0x63821804,	//0x1f12		VoC_lw16i_set_inc(REG0,0x6382,0x1)
0x58FF0AC2,	//0x1f14		VoC_lw16i(REG2,0xd8ff)
0xEFF45886,	//0x1f16		VoC_lw16i_short(REG4,0xffffffff,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xE0055887,	//0x1f18		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0x60FF0AC3,	//0x1f1a		VoC_lw16i(REG3,0xe0ff)
0x20473596,	//0x1f1c		VoC_bne16_rr(Decode_106,REG2,REG6)
0x2047359F,	//0x1f1e		VoC_bne16_rr(Decode_106,REG3,REG7)
0xF4037F46,	//0x1f20		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x401D1505,	//0x1f22		VoC_sw16_d(REG5,0x401d)
0xE280E240,	//0x1f24		VoC_rbinc_i(REG4,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
0x2E21F90C,	//0x1f26		VoC_loop_r(1,REG4)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xE2401F2A,	//0x1f28		VoC_lbinc_p(REG0)	|	VoC_loop_r(1,REG4)(hi)
		//0x1f2a		VoC_endloop1
0xE240E281,	//0x1f2a		VoC_lbinc_p(REG0)	|	VoC_rbinc_i(REG5,0x10,DEFAULT)
0x481DE281,	//0x1f2c		VoC_blt16_rd(M_DQT_CASE0,REG5,0x5da8)(lo)	|	VoC_rbinc_i(REG5,0x10,DEFAULT)
0xE5DB5DA8,	//0x1f2e		VoC_jump(M_DQT_CASE1)	|	VoC_blt16_rd(M_DQT_CASE0,REG5,0x5da8)(hi)
		//0x1f30		M_DQT_CASE0
0xE2A1E240,	//0x1f30		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x1807E2A0,	//0x1f32		VoC_lw16i_set_inc(REG3,0x230a,0x1)(lo)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0xFFC0230A,	//0x1f34		VoC_NOP	|	VoC_lw16i_set_inc(REG3,0x230a,0x1)(hi)
0xEBE5DCB4,	//0x1f36		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xE2A1E240,	//0x1f38		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0xDCB5E2A0,	//0x1f3a		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
		//0x1f3c		VoC_endloop0
0xE240DCB4,	//0x1f3c		VoC_lbinc_p(REG0)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xE2A0E2A1,	//0x1f3e		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_rbinc_i(REG5,0x8,DEFAULT)
0xDE00DCB5,	//0x1f40		VoC_inc_p(REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xEC05DE00,	//0x1f42		VoC_loop_i_short(0x20,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xE2A1E240,	//0x1f44		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0xDCB5E2A0,	//0x1f46		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
		//0x1f48		VoC_endloop0
0xE5D8DCB4,	//0x1f48		VoC_jump(M_SOF0_CASE)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1f4a		M_DQT_CASE1
0xE2A1E240,	//0x1f4a		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x1807E2A0,	//0x1f4c		VoC_lw16i_set_inc(REG3,0x230a,0x1)(lo)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0xFFC0230A,	//0x1f4e		VoC_NOP	|	VoC_lw16i_set_inc(REG3,0x230a,0x1)(hi)
0xEBE5DCB4,	//0x1f50		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xE2A1E240,	//0x1f52		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0xDCB5E2A0,	//0x1f54		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
		//0x1f56		VoC_endloop0
0xE240DCB4,	//0x1f56		VoC_lbinc_p(REG0)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xE2A0E2A1,	//0x1f58		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_rbinc_i(REG5,0x8,DEFAULT)
0xEC05DCB5,	//0x1f5a		VoC_loop_i_short(0x20,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xE2A1E240,	//0x1f5c		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0xDCB5E2A0,	//0x1f5e		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
		//0x1f60		VoC_endloop0
0xDE00DCB4,	//0x1f60		VoC_inc_p(REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1f61		M_SOF0_CASE
0xE240E006,	//0x1f62		VoC_lbinc_p(REG0)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xF90FE283,	//0x1f64		VoC_shru16_ri(REG7,0x1,DEFAULT)	|	VoC_rbinc_i(REG7,0x10,DEFAULT)
0xE240E240,	//0x1f66		VoC_lbinc_p(REG0)	|	VoC_lbinc_p(REG0)
0xE281E2A0,	//0x1f68		VoC_rbinc_i(REG5,0x10,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0x072DE240,	//0x1f6a		VoC_add16_rd(REG5,REG5,0x5da2)(lo)	|	VoC_lbinc_p(REG0)
0xF9255DA2,	//0x1f6c		VoC_shru16_ri(REG5,0x4,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x5da2)(hi)
0xE280F8E5,	//0x1f6e		VoC_rbinc_i(REG4,0x10,DEFAULT)	|	VoC_shr16_ri(REG5,0xfffffffc,DEFAULT)
0x23DC1505,	//0x1f70		VoC_sw16_d(REG5,0x23dc)
0xFFC0F825,	//0x1f72		VoC_NOP	|	VoC_shr16_ri(REG5,0x4,DEFAULT)
0x23DD1505,	//0x1f74		VoC_sw16_d(REG5,0x23dd)
0x0724E2A1,	//0x1f76		VoC_add16_rd(REG4,REG4,0x5da2)(lo)	|	VoC_rbinc_i(REG5,0x8,DEFAULT)
0xF9245DA2,	//0x1f78		VoC_shru16_ri(REG4,0x4,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x5da2)(hi)
0x07A5F8E4,	//0x1f7a		VoC_sub16_rd(REG5,REG4,0x5da3)(lo)	|	VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)
0xC1B85DA3,	//0x1f7c		VoC_add16_rr(REG0,REG6,REG7,DEFAULT)	|	VoC_sub16_rd(REG5,REG4,0x5da3)(hi)
0x23DB1504,	//0x1f7e		VoC_sw16_d(REG4,0x23db)
0x1505F824,	//0x1f80		VoC_sw16_d(REG5,0x23de)(lo)	|	VoC_shr16_ri(REG4,0x4,DEFAULT)
0x150423DE,	//0x1f82		VoC_sw16_d(REG4,0x23df)(lo)	|	VoC_sw16_d(REG5,0x23de)(hi)
0xDE0023DF,	//0x1f84		VoC_inc_p(REG0,DEFAULT)	|	VoC_sw16_d(REG4,0x23df)(hi)
0xF0077003,	//0x1f86		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xE006E240,	//0x1f88		VoC_movreg16(REG6,REG0,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE2A0E240,	//0x1f8a		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE2A3E281,	//0x1f8c		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_rbinc_i(REG5,0x10,DEFAULT)
0x5D733C8D,	//0x1f8e		VoC_bngt16_rd(M_DHT_CASE0,REG5,0x5d73)
0x2802E0A2,	//0x1f90		VoC_and16_rd(REG2,0x5d99)(lo)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0x31825D99,	//0x1f92		VoC_bez16_r(M_SOS_CASE1,REG2)(lo)	|	VoC_and16_rd(REG2,0x5d99)(hi)
0x2B001FD6,	//0x1f94		VoC_jump_lg(M_SOS_CASE0)(lo)	|	VoC_bez16_r(M_SOS_CASE1,REG2)(hi)
0xE0A21FCA,	//0x1f96		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_jump_lg(M_SOS_CASE0)(hi)
		//0x1f97		M_DHT_CASE0
0x5D992802,	//0x1f98		VoC_and16_rd(REG2,0x5d99)
0x1FAE3182,	//0x1f9a		VoC_bez16_r(DHT1,REG2)
		//0x1f9c		DHT0
0x5D990736,	//0x1f9c		VoC_add16_rd(REG6,REG6,0x5d99)
0xC1A8F90D,	//0x1f9e		VoC_add16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0xE240E006,	//0x1fa0		VoC_lbinc_p(REG0)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xE0A2E281,	//0x1fa2		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_rbinc_i(REG5,0x10,DEFAULT)
0x5D992802,	//0x1fa4		VoC_and16_rd(REG2,0x5d99)
0x481BDE18,	//0x1fa6		VoC_blt16_rd(DHT0_CONTINUE,REG3,0x5d9b)(lo)	|	VoC_inc_p(REG3,DEFAULT)
0xE5D95D9B,	//0x1fa8		VoC_jump(COMPARE0)	|	VoC_blt16_rd(DHT0_CONTINUE,REG3,0x5d9b)(hi)
		//0x1faa		DHT0_CONTINUE
0x1F9C3182,	//0x1faa		VoC_bez16_r(DHT0,REG2)
0x5D990736,	//0x1fac		VoC_add16_rd(REG6,REG6,0x5d99)
		//0x1fae		DHT1
0xC1A8F90D,	//0x1fae		VoC_add16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0xE240FFC0,	//0x1fb0		VoC_lbinc_p(REG0)	|	VoC_NOP
0xE240E006,	//0x1fb2		VoC_lbinc_p(REG0)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xE281E2A0,	//0x1fb4		VoC_rbinc_i(REG5,0x10,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0xE0A2E2A3,	//0x1fb6		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0x5D992802,	//0x1fb8		VoC_and16_rd(REG2,0x5d99)
0x481BDE18,	//0x1fba		VoC_blt16_rd(DHT2_CONTINUE,REG3,0x5d9b)(lo)	|	VoC_inc_p(REG3,DEFAULT)
0xE5CB5D9B,	//0x1fbc		VoC_jump(COMPARE1)	|	VoC_blt16_rd(DHT2_CONTINUE,REG3,0x5d9b)(hi)
		//0x1fbe		DHT2_CONTINUE
0x1F9C31C2,	//0x1fbe		VoC_bnez16_r(DHT0,REG2)
0xFFC065EE,	//0x1fc0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DHT1)
		//0x1fc2		COMPARE0
0x1FCA3182,	//0x1fc2		VoC_bez16_r(M_SOS_CASE0,REG2)
0x5D990736,	//0x1fc4		VoC_add16_rd(REG6,REG6,0x5d99)
0xFFC065D0,	//0x1fc6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(M_SOS_CASE1)
		//0x1fc8		COMPARE1
0x1FD63182,	//0x1fc8		VoC_bez16_r(M_SOS_CASE1,REG2)
		//0x1fca		M_SOS_CASE0
0x5D990736,	//0x1fca		VoC_add16_rd(REG6,REG6,0x5d99)
0xC1A8F90D,	//0x1fcc		VoC_add16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0xE240E006,	//0x1fce		VoC_lbinc_p(REG0)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xF90DE281,	//0x1fd0		VoC_shru16_ri(REG5,0x1,DEFAULT)	|	VoC_rbinc_i(REG5,0x10,DEFAULT)
0xFF4741A8,	//0x1fd2		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG6,REG5,DEFAULT)
0xE5D3F001,	//0x1fd4		VoC_jump(Decode_begin_work)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
		//0x1fd6		M_SOS_CASE1
0xC1A8F90D,	//0x1fd6		VoC_add16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0xE240E006,	//0x1fd8		VoC_lbinc_p(REG0)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xE2A0E240,	//0x1fda		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE2A3E281,	//0x1fdc		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_rbinc_i(REG5,0x10,DEFAULT)
0xC1A8F90D,	//0x1fde		VoC_add16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0x5882FFC0,	//0x1fe0		VoC_lw16inc_p(REG2,REG0,DEFAULT)	|	VoC_NOP
0xF942E081,	//0x1fe2		VoC_shru16_ri(REG2,0x8,DEFAULT)	|	VoC_lw16i_short(REG1,0x8,IN_PARALLEL)
0xE005700F,	//0x1fe4		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0xFFC0604E,	//0x1fe6		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG2,DEFAULT)
		//0x1fe8		Decode_begin_work
0x23081505,	//0x1fe8		VoC_sw16_d(REG5,0x2308)
0x40096C06,	//0x1fea		VoC_bez16_d(Decode_100,0x4009)
0x21262B80,	//0x1fec		VoC_jal(CII_SetYUVPara)
0x20152B00,	//0x1fee		VoC_jump_lg(LABLE_JPEGDec_100)
		//0x1ff0		Decode_100
0x1806F003,	//0x1ff0		VoC_lw16i_set_inc(REG2,0x1048,0x1)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x15051048,	//0x1ff2		VoC_sw16_d(REG5,0x23d8)(lo)	|	VoC_lw16i_set_inc(REG2,0x1048,0x1)(hi)
0x5FC523D8,	//0x1ff4		VoC_push16(REG5,DEFAULT)	|	VoC_sw16_d(REG5,0x23d8)(hi)
0xDF41F401,	//0x1ff6		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
		//0x1ff7		Decode_101
0x22052B80,	//0x1ff8		VoC_jal(CII_DecodeMCUBlock)
0xF0065909,	//0x1ffa		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0x21E22B80,	//0x1ffc		VoC_jal(CII_StoreBuffer)
0x0712DF01,	//0x1ffe		VoC_add16_rd(REG2,REG2,0x5da3)(lo)	|	VoC_pop32(REG23,DEFAULT)
0x071B5DA3,	//0x2000		VoC_add16_rd(REG3,REG3,0x5d99)(lo)	|	VoC_add16_rd(REG2,REG2,0x5da3)(hi)
0x4B235D99,	//0x2002		VoC_blt16_rd(Decode_101,REG3,0x23df)(lo)	|	VoC_add16_rd(REG3,REG3,0x5d99)(hi)
0x2B8023DF,	//0x2004		VoC_jal(CII_DMAI_WRITEDATA)(lo)	|	VoC_blt16_rd(Decode_101,REG3,0x23df)(hi)
0xDF852154,	//0x2006		VoC_pop16(REG5,DEFAULT)	|	VoC_jal(CII_DMAI_WRITEDATA)(hi)
0x5D99072D,	//0x2008		VoC_add16_rd(REG5,REG5,0x5d99)
0x0F3D1400,	//0x200a		VoC_lw16_d(REG0,0xf3d)
0x23DD4A25,	//0x200c		VoC_blt16_rd(Decode_100,REG5,0x23dd)
0x1404F7F9,	//0x200e		VoC_lw16_d(REG4,0x23db)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x0A2423DB,	//0x2010		VoC_multf32_rd(ACC0,REG4,0x23dc)(lo)	|	VoC_lw16_d(REG4,0x23db)(hi)
0x2B0023DC,	//0x2012		VoC_jump_lg(LABLE_JPEGDEC_EXIT)(lo)	|	VoC_multf32_rd(ACC0,REG4,0x23dc)(hi)
0xF003203C,	//0x2014		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_jump_lg(LABLE_JPEGDEC_EXIT)(hi)
		//0x2015		LABLE_JPEGDec_100
0x10481806,	//0x2016		VoC_lw16i_set_inc(REG2,0x1048,0x1)
0x23D81505,	//0x2018		VoC_sw16_d(REG5,0x23d8)
0xF4015FC5,	//0x201a		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
		//0x201c		LABLE_JPEGDec_101
0x2B80DF41,	//0x201c		VoC_jal(CII_DecodeMCUBlock)(lo)	|	VoC_push32(REG23,DEFAULT)
0xDFC12205,	//0x201e		VoC_push16(REG1,DEFAULT)	|	VoC_jal(CII_DecodeMCUBlock)(hi)
0x204C2B80,	//0x2020		VoC_jal(CII_StoreYUV)
0xDF015F81,	//0x2022		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x0F3D2004,	//0x2024		VoC_lw16d_set_inc(REG0,0xf3d,0x1)
0x5DA30712,	//0x2026		VoC_add16_rd(REG2,REG2,0x5da3)
0x5D99071B,	//0x2028		VoC_add16_rd(REG3,REG3,0x5d99)
0x23DF4B13,	//0x202a		VoC_blt16_rd(LABLE_JPEGDec_101,REG3,0x23df)
0x20E22B80,	//0x202c		VoC_jal(CII_DMAOUT_YUV)
0x072DDF85,	//0x202e		VoC_add16_rd(REG5,REG5,0x5d99)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x14005D99,	//0x2030		VoC_lw16_d(REG0,0xf3d)(lo)	|	VoC_add16_rd(REG5,REG5,0x5d99)(hi)
0x4A150F3D,	//0x2032		VoC_blt16_rd(LABLE_JPEGDec_100,REG5,0x23dd)(lo)	|	VoC_lw16_d(REG0,0xf3d)(hi)
0x703923DD,	//0x2034		VoC_lw16i_short(FORMAT32,0x1,DEFAULT)	|	VoC_blt16_rd(LABLE_JPEGDec_100,REG5,0x23dd)(hi)
0x082DE035,	//0x2036		VoC_mult16_rd(REG5,REG5,0x23dc)(lo)	|	VoC_lw16i_short(REG5,0x3,IN_PARALLEL)
0x140423DC,	//0x2038		VoC_lw16_d(REG4,0x23db)(lo)	|	VoC_mult16_rd(REG5,REG5,0x23dc)(hi)
0xCD2C23DB,	//0x203a		VoC_multf32_rr(ACC0,REG4,REG5,DEFAULT)	|	VoC_lw16_d(REG4,0x23db)(hi)
		//0x203c		LABLE_JPEGDEC_EXIT
0x23DC1405,	//0x203c		VoC_lw16_d(REG5,0x23dc)
0xE00370A2,	//0x203e		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x5,DEFAULT)
0x401E1582,	//0x2040		VoC_sw32_d(REG45,0x401e)
0x40141581,	//0x2042		VoC_sw32_d(REG23,0x4014)
0x40161584,	//0x2044		VoC_sw32_d(ACC0,0x4016)
0xDFA9F004,	//0x2046		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x2047		Decode_106
0x401D1504,	//0x2048		VoC_sw16_d(REG4,0x401d)
0xFFC06580,	//0x204a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x204c		CII_StoreYUV
0x0F3E1808,	//0x204c		VoC_lw16i_set_inc(REG0,0xf3e,0x2)
0x103E2006,	//0x204e		VoC_lw16d_set_inc(REG2,0x103e,0x1)
0x00800A81,	//0x2050		VoC_lw16i(REG1,0x80)
0x23DB1403,	//0x2052		VoC_lw16_d(REG3,0x23db)
0xFFC0790B,	//0x2054		VoC_NAD(IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0x20892C20,	//0x2056		VoC_loop_i(0x0,0x10)
0xF64859C2,	//0x2058		VoC_movreg16(ACC0_LO,REG2,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xC14D410C,	//0x205a		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xF9C559C3,	//0x205c		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xC1CF418E,	//0x205e		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xF9C7646C,	//0x2060		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xD9C2647E,	//0x2062		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xC14D5CA4,	//0x2064		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xF9C5410C,	//0x2066		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xD9C3646C,	//0x2068		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xC1CF5CA6,	//0x206a		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xF9C7418E,	//0x206c		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xDCA4647E,	//0x206e		VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x5CA6D9C2,	//0x2070		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x410CC14D,	//0x2072		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)
0x41CFD9C3,	//0x2074		VoC_add16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0x646CF9C5,	//0x2076		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)
0xF9C7C18E,	//0x2078		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,IN_PARALLEL)
0xD9C2647E,	//0x207a		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xC14D5CA4,	//0x207c		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xF9C5410C,	//0x207e		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xD9C3646C,	//0x2080		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xC1CF5CA6,	//0x2082		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xF9C7418E,	//0x2084		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x5CA4E47E,	//0x2086		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x5C26F705,	//0x2088		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)
		//0x2089		VoC_endloop0
0x7104C15A,	//0x208a		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_add16_rr(REG2,REG5,REG3,IN_PARALLEL)
0x0722F90B,	//0x208c		VoC_add16_rd(REG2,REG4,0x103e)(lo)	|	VoC_shru16_ri(REG3,0x1,IN_PARALLEL)
0x2006103E,	//0x208e		VoC_lw16d_set_inc(REG2,0x103f,0x1)(lo)	|	VoC_add16_rd(REG2,REG4,0x103e)(hi)
0x1502103F,	//0x2090		VoC_sw16_d(REG2,0x103e)(lo)	|	VoC_lw16d_set_inc(REG2,0x103f,0x1)(hi)
0x1804103E,	//0x2092		VoC_lw16i_set_inc(REG0,0xdac,0x1)(lo)	|	VoC_sw16_d(REG2,0x103e)(hi)
0xFFC00DAC,	//0x2094		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xdac,0x1)(hi)
0x20B12C10,	//0x2096		VoC_loop_i(0x0,0x8)
0xF64859C2,	//0x2098		VoC_movreg16(ACC0_LO,REG2,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xC14D410C,	//0x209a		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xF9C559C3,	//0x209c		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xC1CF418E,	//0x209e		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xF9C7646C,	//0x20a0		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xD9C2647E,	//0x20a2		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xC14D5CA4,	//0x20a4		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xF9C5410C,	//0x20a6		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xD9C3646C,	//0x20a8		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xC1CF5CA6,	//0x20aa		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xF9C7418E,	//0x20ac		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x5CA4E47E,	//0x20ae		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x5C26F705,	//0x20b0		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)
		//0x20b1		VoC_endloop0
0xF084C15A,	//0x20b2		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_add16_rr(REG2,REG5,REG3,IN_PARALLEL)
0x103F0722,	//0x20b4		VoC_add16_rd(REG2,REG4,0x103f)
0x10402006,	//0x20b6		VoC_lw16d_set_inc(REG2,0x1040,0x1)
0x103F1502,	//0x20b8		VoC_sw16_d(REG2,0x103f)
0x0DEC1808,	//0x20ba		VoC_lw16i_set_inc(REG0,0xdec,0x2)
0x20D72C10,	//0x20bc		VoC_loop_i(0x0,0x8)
0xF64859C2,	//0x20be		VoC_movreg16(ACC0_LO,REG2,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xC14D410C,	//0x20c0		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xF9C559C3,	//0x20c2		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xC1CF418E,	//0x20c4		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xF9C7646C,	//0x20c6		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xD9C2647E,	//0x20c8		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xC14D5CA4,	//0x20ca		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xF9C5410C,	//0x20cc		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xD9C3646C,	//0x20ce		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xC1CF5CA6,	//0x20d0		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xF9C7418E,	//0x20d2		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x5CA4E47E,	//0x20d4		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x5C26F705,	//0x20d6		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)
		//0x20d7		VoC_endloop0
0x7084C15A,	//0x20d8		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_add16_rr(REG2,REG5,REG3,IN_PARALLEL)
0x0722F004,	//0x20da		VoC_add16_rd(REG2,REG4,0x1040)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x70311040,	//0x20dc		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_add16_rd(REG2,REG4,0x1040)(hi)
0x1502F007,	//0x20de		VoC_sw16_d(REG2,0x1040)(lo)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xE5801040,	//0x20e0		VoC_return	|	VoC_sw16_d(REG2,0x1040)(hi)
		//0x20e2		CII_DMAOUT_YUV
0x10421404,	//0x20e2		VoC_lw16_d(REG4,0x1042)
0x08240A85,	//0x20e4		VoC_lw16i(REG5,0x824)
0x40061484,	//0x20e6		VoC_lw32_d(ACC0,0x4006)
0x7FC215C2,	//0x20e8		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x20ea		VoC_sw32_d(ACC0,0xffc4)
0x10440924,	//0x20ec		VoC_add32_rd(ACC0,ACC0,0x1044)
0x1584FFC0,	//0x20ee		VoC_sw32_d(ACC0,0x4006)(lo)	|	VoC_NOP
0x14044006,	//0x20f0		VoC_lw16_d(REG4,0x1043)(lo)	|	VoC_sw32_d(ACC0,0x4006)(hi)
0x0A851043,	//0x20f2		VoC_lw16i(REG5,0xe64)(lo)	|	VoC_lw16_d(REG4,0x1043)(hi)
0x14840E64,	//0x20f4		VoC_lw32_d(ACC0,0x4010)(lo)	|	VoC_lw16i(REG5,0xe64)(hi)
0xDE804010,	//0x20f6		VoC_cfg(0x0)	|	VoC_lw32_d(ACC0,0x4010)(hi)
0x1794FFC0,	//0x20f8		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x15C20008,	//0x20fa		VoC_sw32_d(REG45,0xffc2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15C47FC2,	//0x20fc		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw32_d(REG45,0xffc2)(hi)
0x09247FC4,	//0x20fe		VoC_add32_rd(ACC0,ACC0,0x1046)(lo)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0xFFC01046,	//0x2100		VoC_NOP	|	VoC_add32_rd(ACC0,ACC0,0x1046)(hi)
0x40101584,	//0x2102		VoC_sw32_d(ACC0,0x4010)
0x10431404,	//0x2104		VoC_lw16_d(REG4,0x1043)
0x0FF40A85,	//0x2106		VoC_lw16i(REG5,0xff4)
0x40121484,	//0x2108		VoC_lw32_d(ACC0,0x4012)
0xFFC0DE80,	//0x210a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x210c		VoC_cfg_lg(0x8,)
0x7FC215C2,	//0x210e		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x2110		VoC_sw32_d(ACC0,0xffc4)
0x10460924,	//0x2112		VoC_add32_rd(ACC0,ACC0,0x1046)
0x1584FFC0,	//0x2114		VoC_sw32_d(ACC0,0x4012)(lo)	|	VoC_NOP
0x0A844012,	//0x2116		VoC_lw16i(REG4,0x1048)(lo)	|	VoC_sw32_d(ACC0,0x4012)(hi)
0x0A851048,	//0x2118		VoC_lw16i(REG5,0x1cc8)(lo)	|	VoC_lw16i(REG4,0x1048)(hi)
0x0A861CC8,	//0x211a		VoC_lw16i(REG6,0x1fe8)(lo)	|	VoC_lw16i(REG5,0x1cc8)(hi)
0x15821FE8,	//0x211c		VoC_sw32_d(REG45,0x103e)(lo)	|	VoC_lw16i(REG6,0x1fe8)(hi)
0x1506103E,	//0x211e		VoC_sw16_d(REG6,0x1040)(lo)	|	VoC_sw32_d(REG45,0x103e)(hi)
0xDE801040,	//0x2120		VoC_cfg(0x0)	|	VoC_sw16_d(REG6,0x1040)(hi)
0x1794FFC0,	//0x2122		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x2124		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x2126		CII_SetYUVPara
0x10480A84,	//0x2126		VoC_lw16i(REG4,0x1048)
0x1CC80A85,	//0x2128		VoC_lw16i(REG5,0x1cc8)
0x1FE80A86,	//0x212a		VoC_lw16i(REG6,0x1fe8)
0x103E1582,	//0x212c		VoC_sw32_d(REG45,0x103e)
0xE1047019,	//0x212e		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x23DB0A24,	//0x2130		VoC_multf32_rd(ACC0,REG4,0x23db)
0x10401506,	//0x2132		VoC_sw16_d(REG6,0x1040)
0x1584FC14,	//0x2134		VoC_sw32_d(ACC0,0x1044)(lo)	|	VoC_shru32_ri(ACC0,0x2,DEFAULT)
0x15841044,	//0x2136		VoC_sw32_d(ACC0,0x1046)(lo)	|	VoC_sw32_d(ACC0,0x1044)(hi)
0x7C141046,	//0x2138		VoC_shru32_ri(ACC0,0x2,DEFAULT)	|	VoC_sw32_d(ACC0,0x1046)(hi)
0x1508E005,	//0x213a		VoC_sw16_d(ACC0_LO,0x1042)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x15081042,	//0x213c		VoC_sw16_d(ACC0_LO,0x1043)(lo)	|	VoC_sw16_d(ACC0_LO,0x1042)(hi)
0xE5801043,	//0x213e		VoC_return	|	VoC_sw16_d(ACC0_LO,0x1043)(hi)
		//0x2140		CII_DMAI_READDATA
0x00E00A84,	//0x2140		VoC_lw16i(REG4,0xe0)
0x31C10A85,	//0x2142		VoC_lw16i(REG5,0x31c1)
0x40041485,	//0x2144		VoC_lw32_d(ACC1,0x4004)
0x7FC215C2,	//0x2146		VoC_sw32_d(REG45,0xffc2)
0x7FC415C5,	//0x2148		VoC_sw32_d(ACC1,0xffc4)
0xF9F47005,	//0x214a		VoC_shru16_ri(REG4,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDE80C955,	//0x214c		VoC_cfg(0x0)	|	VoC_add32_rr(ACC1,ACC1,REG45,DEFAULT)
0x1585FFC0,	//0x214e		VoC_sw32_d(ACC1,0x4004)(lo)	|	VoC_NOP
0x17944004,	//0x2150		VoC_cfg_lg(0x8,)(lo)	|	VoC_sw32_d(ACC1,0x4004)(hi)
0xE5800008,	//0x2152		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x2154		CII_DMAI_WRITEDATA
0x5D9A4437,	//0x2154		VoC_bne16_rd(Decode_original_picture,REG7,0x5d9a)
0x00500A84,	//0x2156		VoC_lw16i(REG4,0x50)
0xFFC065C4,	//0x2158		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DMA_begin)
		//0x215a		Decode_original_picture
0x23DB1404,	//0x215a		VoC_lw16_d(REG4,0x23db)
		//0x215c		DMA_begin
0x08240A85,	//0x215c		VoC_lw16i(REG5,0x824)
0x1486F8EC,	//0x215e		VoC_lw32_d(RL6,0x4006)(lo)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0x15C24006,	//0x2160		VoC_sw32_d(REG45,0xffc2)(lo)	|	VoC_lw32_d(RL6,0x4006)(hi)
0x15C67FC2,	//0x2162		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw32_d(REG45,0xffc2)(hi)
0x70057FC4,	//0x2164		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0xC996F9F4,	//0x2166		VoC_add32_rr(RL6,RL6,REG45,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffffe,IN_PARALLEL)
0xFFC0DE80,	//0x2168		VoC_NOP	|	VoC_cfg(0x0)
0x40061586,	//0x216a		VoC_sw32_d(RL6,0x4006)
0x00081794,	//0x216c		VoC_cfg_lg(0x8,)
0xFFC06580,	//0x216e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x2170		CII_storebuffer_intern
0x21DF2C10,	//0x2170		VoC_loop_i(0x0,0x8)
0x5DA41008,	//0x2172		VoC_mac32_pd(REG1,0x5da4)
0x5D871018,	//0x2174		VoC_mac32_pd(REG3,0x5d87)
0x5DA90084,	//0x2176		VoC_add16inc_pd(REG4,REG0,0x5da9)
0x217C33C4,	//0x2178		VoC_bnltz32_r(CII_StoreBuffer100,ACC0)
0xFFC07F44,	//0x217a		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x217c		CII_StoreBuffer100
0x5DB45424,	//0x217c		VoC_bngt32_rd(CII_StoreBuffer103,ACC0,0x5db4)
0xE00977E8,	//0x217e		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0xffff,DEFAULT)
		//0x2180		CII_StoreBuffer103
0xFF34E106,	//0x2180		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x5D881208,	//0x2182		VoC_msu32_pd(REG1,0x5d88)
0x5D891218,	//0x2184		VoC_msu32_pd(REG3,0x5d89)
0x78001646,	//0x2186		VoC_and16_ri(REG6,0xf800)
0x218C33C4,	//0x2188		VoC_bnltz32_r(CII_StoreBuffer106,ACC0)
0xFFC07F44,	//0x218a		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x218c		CII_StoreBuffer106
0x5DB45424,	//0x218c		VoC_bngt32_rd(CII_StoreBuffer107,ACC0,0x5db4)
0xE00977E8,	//0x218e		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0xffff,DEFAULT)
		//0x2190		CII_StoreBuffer107
0x7F34E105,	//0x2190		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,DEFAULT)
0x1008F92D,	//0x2192		VoC_mac32_pd(REG1,0x5d8a)(lo)	|	VoC_shru16_ri(REG5,0x5,IN_PARALLEL)
0x12185D8A,	//0x2194		VoC_msu32_pd(REG3,0x5d8b)(lo)	|	VoC_mac32_pd(REG1,0x5d8a)(hi)
0x16055D8B,	//0x2196		VoC_and16_ri(REG5,0x7e0)(lo)	|	VoC_msu32_pd(REG3,0x5d8b)(hi)
0x33C407E0,	//0x2198		VoC_bnltz32_r(CII_StoreBuffer101,ACC0)(lo)	|	VoC_and16_ri(REG5,0x7e0)(hi)
0xFF44219C,	//0x219a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bnltz32_r(CII_StoreBuffer101,ACC0)(hi)
		//0x219c		CII_StoreBuffer101
0x5DB45424,	//0x219c		VoC_bngt32_rd(CII_StoreBuffer104,ACC0,0x5db4)
0xE00977E8,	//0x219e		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0xffff,DEFAULT)
		//0x21a0		CII_StoreBuffer104
0xC1AE6107,	//0x21a0		VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0xFF44795F,	//0x21a2		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xb,DEFAULT)
0xF68941F7,	//0x21a4		VoC_movreg16(ACC0_HI,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
0x5CA7FA44,	//0x21a6		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x1008FF26,	//0x21a8		VoC_mac32_pd(REG1,0x5da4)(lo)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x10185DA4,	//0x21aa		VoC_mac32_pd(REG3,0x5d87)(lo)	|	VoC_mac32_pd(REG1,0x5da4)(hi)
0xFFC05D87,	//0x21ac		VoC_NOP	|	VoC_mac32_pd(REG3,0x5d87)(hi)
0x21B233C4,	//0x21ae		VoC_bnltz32_r(CII_StoreBuffer102,ACC0)
0xFFC07F44,	//0x21b0		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x21b2		CII_StoreBuffer102
0x5DB45424,	//0x21b2		VoC_bngt32_rd(CII_StoreBuffer105,ACC0,0x5db4)
0xE00977E8,	//0x21b4		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0xffff,DEFAULT)
		//0x21b6		CII_StoreBuffer105
0xFF34E106,	//0x21b6		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x5D881208,	//0x21b8		VoC_msu32_pd(REG1,0x5d88)
0x5D891218,	//0x21ba		VoC_msu32_pd(REG3,0x5d89)
0x78001646,	//0x21bc		VoC_and16_ri(REG6,0xf800)
0x21C233C4,	//0x21be		VoC_bnltz32_r(CII_StoreBuffer108,ACC0)
0xFFC07F44,	//0x21c0		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x21c2		CII_StoreBuffer108
0x5DB45424,	//0x21c2		VoC_bngt32_rd(CII_StoreBuffer109,ACC0,0x5db4)
0xE00977E8,	//0x21c4		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0xffff,DEFAULT)
		//0x21c6		CII_StoreBuffer109
0x7F34E105,	//0x21c6		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,DEFAULT)
0x1108F92D,	//0x21c8		VoC_mac32inc_pd(REG1,0x5d8a)(lo)	|	VoC_shru16_ri(REG5,0x5,IN_PARALLEL)
0x13185D8A,	//0x21ca		VoC_msu32inc_pd(REG3,0x5d8b)(lo)	|	VoC_mac32inc_pd(REG1,0x5d8a)(hi)
0x16055D8B,	//0x21cc		VoC_and16_ri(REG5,0x7e0)(lo)	|	VoC_msu32inc_pd(REG3,0x5d8b)(hi)
0x33C407E0,	//0x21ce		VoC_bnltz32_r(CII_StoreBuffer110,ACC0)(lo)	|	VoC_and16_ri(REG5,0x7e0)(hi)
0xFF4421D2,	//0x21d0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bnltz32_r(CII_StoreBuffer110,ACC0)(hi)
		//0x21d2		CII_StoreBuffer110
0x5DB45424,	//0x21d2		VoC_bngt32_rd(CII_StoreBuffer111,ACC0,0x5db4)
0xE00977E8,	//0x21d4		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0xffff,DEFAULT)
		//0x21d6		CII_StoreBuffer111
0xC1AE6107,	//0x21d6		VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0x5DA90084,	//0x21d8		VoC_add16inc_pd(REG4,REG0,0x5da9)
0xFF44795F,	//0x21da		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xb,DEFAULT)
0xF68941F7,	//0x21dc		VoC_movreg16(ACC0_HI,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
0x7F26FA44,	//0x21de		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
		//0x21df		VoC_endloop0
0xE580DCA7,	//0x21e0		VoC_return	|	VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)
		//0x21e2		CII_StoreBuffer
0xFF445FE9,	//0x21e2		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF4015FC1,	//0x21e4		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x0F3E1804,	//0x21e6		VoC_lw16i_set_inc(REG0,0xf3e,0x1)
0x0DAC1805,	//0x21e8		VoC_lw16i_set_inc(REG1,0xdac,0x1)
0x0DEC1807,	//0x21ea		VoC_lw16i_set_inc(REG3,0xdec,0x1)
0x5DA90084,	//0x21ec		VoC_add16inc_pd(REG4,REG0,0x5da9)
0xFA44E089,	//0x21ee		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG4,DEFAULT)
0xFFC07F26,	//0x21f0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x21FE2C11,	//0x21f2		VoC_loop_i(0x1,0x8)
0x21702B80,	//0x21f4		VoC_jal(CII_storebuffer_intern)
0x23DE0712,	//0x21f6		VoC_add16_rd(REG2,REG2,0x23de)
0x5DA00789,	//0x21f8		VoC_sub16_rd(REG1,REG1,0x5da0)
0x5DA0079B,	//0x21fa		VoC_sub16_rd(REG3,REG3,0x5da0)
0x21702B80,	//0x21fc		VoC_jal(CII_storebuffer_intern)
		//0x21fe		VoC_endloop1
0x23DE0712,	//0x21fe		VoC_add16_rd(REG2,REG2,0x23de)
0xDFA9DF81,	//0x2200		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x0F3D2004,	//0x2202		VoC_lw16d_set_inc(REG0,0xf3d,0x1)
0xDFE9E580,	//0x2204		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2205		CII_DecodeMCUBlock
0x0CAC180A,	//0x2206		VoC_lw16i_set_inc(REG2,0xcac,0x2)
0x1502FF44,	//0x2208		VoC_sw16_d(REG2,0xf3b)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x2D800F3B,	//0x220a		VoC_loop_i(0x0,0xc0)(lo)	|	VoC_sw16_d(REG2,0xf3b)(hi)
0xDDD4220D,	//0x220c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_i(0x0,0xc0)(hi)
		//0x220d		VoC_endloop0
0x0FC60A83,	//0x220e		VoC_lw16i(REG3,0xfc6)
0x0FBE0A82,	//0x2210		VoC_lw16i(REG2,0xfbe)
0x0F460A85,	//0x2212		VoC_lw16i(REG5,0xf46)
0x0F3E0A84,	//0x2214		VoC_lw16i(REG4,0xf3e)
0xDFC2DFC3,	//0x2216		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0xFF415FC5,	//0x2218		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
		//0x221a		Y_IDCT_START
0x0F360A85,	//0x221a		VoC_lw16i(REG5,0xf36)
0xDFC4DFC3,	//0x221c		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0xE0227003,	//0x221e		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x230A0A84,	//0x2220		VoC_lw16i(REG4,0x230a)
0x229C2B80,	//0x2222		VoC_jal(CII_HufBlock)
0x003F1603,	//0x2224		VoC_and16_ri(REG3,0x3f)
0xDF40DF47,	//0x2226		VoC_push32(REG01,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x222E31C3,	//0x2228		VoC_bnez16_r(Y_IDCT_44_C,REG3)
0x23CE2B80,	//0x222a		VoC_jal(CII_IDCT_11_C)
0xFFC065CA,	//0x222c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Y_IDCT_end)
		//0x222e		Y_IDCT_44_C
0x5DA14C33,	//0x222e		VoC_bnlt16_rd(Y_IDCT_88_C,REG3,0x5da1)
0x23D82B80,	//0x2230		VoC_jal(CII_IDCT_44_C)
0xFFC065C4,	//0x2232		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Y_IDCT_end)
		//0x2234		Y_IDCT_88_C
0x23EE2B80,	//0x2234		VoC_jal(CII_IDCT_88_C)
		//0x2236		Y_IDCT_end
0x200ADF00,	//0x2236		VoC_lw16d_set_inc(REG2,0xf3b,0x2)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x70300F3B,	//0x2238		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16d_set_inc(REG2,0xf3b,0x2)(hi)
0x7053DF83,	//0x223a		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_pop16(REG3,IN_PARALLEL)
0xFFC0D9D4,	//0x223c		VoC_NAD	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
0x22442C11,	//0x223e		VoC_loop_i(0x1,0x8)
0x22432C08,	//0x2240		VoC_loop_i(0x0,0x4)
0xDDDCD9D4,	//0x2242		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
		//0x2243		VoC_endloop0
		//0x2244		VoC_endloop1
0x5DA0071B,	//0x2244		VoC_add16_rd(REG3,REG3,0x5da0)
0xDF075F83,	//0x2246		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0x0F3B1402,	//0x2248		VoC_lw16_d(REG2,0xf3b)
0x5DA70712,	//0x224a		VoC_add16_rd(REG2,REG2,0x5da7)
0x1502F033,	//0x224c		VoC_sw16_d(REG2,0xf3b)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x4C3B0F3B,	//0x224e		VoC_bnlt16_rd(U_IDCT_START,REG3,0x5d9b)(lo)	|	VoC_sw16_d(REG2,0xf3b)(hi)
0x5E185D9B,	//0x2250		VoC_inc_p(REG3,DEFAULT)	|	VoC_bnlt16_rd(U_IDCT_START,REG3,0x5d9b)(hi)
0x2B00DF84,	//0x2252		VoC_jump_lg(Y_IDCT_START)(lo)	|	VoC_pop16(REG4,IN_PARALLEL)
0xFFC0221A,	//0x2254		VoC_NAD	|	VoC_jump_lg(Y_IDCT_START)(hi)
		//0x2256		U_IDCT_START
0xE0327023,	//0x2256		VoC_lw16i_short(REG2,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x0F370A85,	//0x2258		VoC_lw16i(REG5,0xf37)
0x234A0A84,	//0x225a		VoC_lw16i(REG4,0x234a)
0x229C2B80,	//0x225c		VoC_jal(CII_HufBlock)
0x003F1603,	//0x225e		VoC_and16_ri(REG3,0x3f)
0xDF40DF47,	//0x2260		VoC_push32(REG01,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x226831C3,	//0x2262		VoC_bnez16_r(U_IDCT_44_C,REG3)
0x23CE2B80,	//0x2264		VoC_jal(CII_IDCT_11_C)
0xFFC065CA,	//0x2266		VoC_NAD(IN_PARALLEL)	|	VoC_jump(U_IDCT_END)
		//0x2268		U_IDCT_44_C
0x5DA14C33,	//0x2268		VoC_bnlt16_rd(U_IDCT_88_C,REG3,0x5da1)
0x23D82B80,	//0x226a		VoC_jal(CII_IDCT_44_C)
0xFFC065C4,	//0x226c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(U_IDCT_END)
		//0x226e		U_IDCT_88_C
0x23EE2B80,	//0x226e		VoC_jal(CII_IDCT_88_C)
		//0x2270		U_IDCT_END
0x1402DF00,	//0x2270		VoC_lw16_d(REG2,0xf3b)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07120F3B,	//0x2272		VoC_add16_rd(REG2,REG2,0x5da7)(lo)	|	VoC_lw16_d(REG2,0xf3b)(hi)
0x5F075DA7,	//0x2274		VoC_pop32(RL7,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x5da7)(hi)
0x1502F004,	//0x2276		VoC_sw16_d(REG2,0xf3b)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x70230F3B,	//0x2278		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_sw16_d(REG2,0xf3b)(hi)
0x0A85E032,	//0x227a		VoC_lw16i(REG5,0xf38)(lo)	|	VoC_lw16i_short(REG2,0x3,IN_PARALLEL)
0x0A840F38,	//0x227c		VoC_lw16i(REG4,0x234a)(lo)	|	VoC_lw16i(REG5,0xf38)(hi)
0xFFC0234A,	//0x227e		VoC_NAD	|	VoC_lw16i(REG4,0x234a)(hi)
0x229C2B80,	//0x2280		VoC_jal(CII_HufBlock)
0x0F3D1500,	//0x2282		VoC_sw16_d(REG0,0xf3d)
0x003F1603,	//0x2284		VoC_and16_ri(REG3,0x3f)
0xDFC15F47,	//0x2286		VoC_push16(REG1,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0x228E31C3,	//0x2288		VoC_bnez16_r(V_IDCT_44_C,REG3)
0x23CE2B80,	//0x228a		VoC_jal(CII_IDCT_11_C)
0xFFC065CA,	//0x228c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(V_IDCT_END)
		//0x228e		V_IDCT_44_C
0x5DA14C33,	//0x228e		VoC_bnlt16_rd(V_IDCT_88_C,REG3,0x5da1)
0x23D82B80,	//0x2290		VoC_jal(CII_IDCT_44_C)
0xFFC065C4,	//0x2292		VoC_NAD(IN_PARALLEL)	|	VoC_jump(V_IDCT_END)
		//0x2294		V_IDCT_88_C
0x23EE2B80,	//0x2294		VoC_jal(CII_IDCT_88_C)
		//0x2296		V_IDCT_END
0xDF075F81,	//0x2296		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xF030DFA9,	//0x2298		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x229a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x229c		CII_HufBlock
0xF0065FE9,	//0x229c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xDFC25F42,	//0x229e		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x5DAA1484,	//0x22a0		VoC_lw32_d(ACC0,0x5daa)
0x5D984023,	//0x22a2		VoC_be16_rd(DecodeLumDc_CASE,REG3,0x5d98)
0x22C62B00,	//0x22a4		VoC_jump_lg(DecodeChromDc_CASE)
		//0x22a6		DecodeLumDc_CASE
0x5DA04C21,	//0x22a6		VoC_bnlt16_rd(DecodeLumDc_100,REG1,0x5da0)
0x23A32B80,	//0x22a8		VoC_jal(CII_ReadByte)
		//0x22aa		DecodeLumDc_100
0x078FFF3A,	//0x22aa		VoC_sub16_rd(REG7,REG1,0x5da0)(lo)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x7EBA5DA0,	//0x22ac		VoC_shr32_rr(REG45,REG7,DEFAULT)	|	VoC_sub16_rd(REG7,REG1,0x5da0)(hi)
0x1604FF46,	//0x22ae		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_lw32z(RL6,IN_PARALLEL)
0xE08500FF,	//0x22b0		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0x0A82F925,	//0x22b2		VoC_lw16i(REG2,0x5dba)(lo)	|	VoC_shru16_ri(REG5,0x4,DEFAULT)
0x3C345DBA,	//0x22b4		VoC_bngt16_rd(DecodeLumDc_101,REG4,0x5d74)(lo)	|	VoC_lw16i(REG2,0x5dba)(hi)
0x07A55D74,	//0x22b6		VoC_sub16_rd(REG5,REG4,0x5d75)(lo)	|	VoC_bngt16_rd(DecodeLumDc_101,REG4,0x5d74)(hi)
0x0A825D75,	//0x22b8		VoC_lw16i(REG2,0x5dca)(lo)	|	VoC_sub16_rd(REG5,REG4,0x5d75)(hi)
0xC0AA5DCA,	//0x22ba		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16i(REG2,0x5dca)(hi)
		//0x22bb		DecodeLumDc_101
0xE242FFC0,	//0x22bc		VoC_lbinc_p(REG2)	|	VoC_NOP
0xE2A0E2A2,	//0x22be		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x31C6C261,	//0x22c0		VoC_bnez16_r(DecodeDc_100,REG6)(lo)	|	VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)
0xF00422E6,	//0x22c2		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bnez16_r(DecodeDc_100,REG6)(hi)
0x22FC2B00,	//0x22c4		VoC_jump_lg(HufBlock_100)
		//0x22c6		DecodeChromDc_CASE
		//0x22c6		DecodeChromDc_CIRCLE
0x5DA14C29,	//0x22c6		VoC_bnlt16_rd(DecodeChromDc_100,REG1,0x5da1)
0x23A32B80,	//0x22c8		VoC_jal(CII_ReadByte)
0xFF3AE5FC,	//0x22ca		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_jump(DecodeChromDc_CIRCLE)
		//0x22cb		DecodeChromDc_100
0x5DA1078F,	//0x22cc		VoC_sub16_rd(REG7,REG1,0x5da1)
0xFF467EBA,	//0x22ce		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_shr32_rr(REG45,REG7,DEFAULT)
0x03FF1604,	//0x22d0		VoC_and16_ri(REG4,0x3ff)
0xF92DE085,	//0x22d2		VoC_shru16_ri(REG5,0x5,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x5DDA0A82,	//0x22d4		VoC_lw16i(REG2,0x5dda)
0x5D773C34,	//0x22d6		VoC_bngt16_rd(DecodeChromDc_101,REG4,0x5d77)
0x5D7807A5,	//0x22d8		VoC_sub16_rd(REG5,REG4,0x5d78)
0x5DFA0A82,	//0x22da		VoC_lw16i(REG2,0x5dfa)
		//0x22dc		DecodeChromDc_101
0xFFC0C0AA,	//0x22dc		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xE2A2E242,	//0x22de		VoC_rbinc_i(REG6,0x8,DEFAULT)	|	VoC_lbinc_p(REG2)
0xC261E2A0,	//0x22e0		VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0x22E631C6,	//0x22e2		VoC_bnez16_r(DecodeDc_100,REG6)
0xE5D7F004,	//0x22e4		VoC_jump(HufBlock_100)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x22e6		DecodeDc_100
0x22EC34B1,	//0x22e6		VoC_bngt16_rr(DecodeDc_101,REG6,REG1)
		//0x22e8		DecodeDc_CIRCLE0
0x23A32B80,	//0x22e8		VoC_jal(CII_ReadByte)
0x22E83439,	//0x22ea		VoC_bgt16_rr(DecodeDc_CIRCLE0,REG7,REG1)
		//0x22ec		DecodeDc_101
0x5DA60B34,	//0x22ec		VoC_sub16_dr(REG4,0x5da6,REG6)
0xC2717F3D,	//0x22ee		VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_movreg32(ACC1,RL7,DEFAULT)
0xFEE47E8D,	//0x22f0		VoC_shru32_rr(ACC0,REG4,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG1,DEFAULT)
0x07B6E4E5,	//0x22f2		VoC_sub16_rd(REG6,REG6,0x5d99)(lo)	|	VoC_and32_rr(ACC1,ACC0,DEFAULT)
0x7F2E5D99,	//0x22f4		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_sub16_rd(REG6,REG6,0x5d99)(hi)
0x09ADFEF5,	//0x22f6		VoC_sub32_rd(ACC1,ACC1,0x5d99)(lo)	|	VoC_shru32_rr(ACC1,REG6,IN_PARALLEL)
0xFEE55D99,	//0x22f8		VoC_shru32_rr(ACC1,REG4,DEFAULT)	|	VoC_sub32_rd(ACC1,ACC1,0x5d99)(hi)
0xFFC04BAB,	//0x22fa		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(REG67,RL6,ACC1,DEFAULT)
		//0x22fc		HufBlock_100
0xDF855F01,	//0x22fc		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x0F3B1407,	//0x22fe		VoC_lw16_d(REG7,0xf3b)
0x7F0E819E,	//0x2300		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG3,DEFAULT)
0xDC368994,	//0x2302		VoC_sw16_p(REG6,REG3,DEFAULT)	|	VoC_mult16_rp(REG4,REG6,REG2,IN_PARALLEL)
0xF6A27023,	//0x2304		VoC_movreg16(REG2,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xF0075C74,	//0x2306		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
		//0x2308		HufBlock_101
0x5F46DF41,	//0x2308		VoC_push32(RL6,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x402AE106,	//0x230a		VoC_be16_rd(DecodeLumAc_CASE,REG2,0x5d9a)(lo)	|	VoC_lw16i_short(REG6,0x10,IN_PARALLEL)
0x2B005D9A,	//0x230c		VoC_jump_lg(DecodeChromAc_CASE)(lo)	|	VoC_be16_rd(DecodeLumAc_CASE,REG2,0x5d9a)(hi)
0xFFC02342,	//0x230e		VoC_NAD	|	VoC_jump_lg(DecodeChromAc_CASE)(hi)
		//0x2310		DecodeLumAc_CASE
		//0x2310		DecodeLumAc_CIRCLE
0x5DA34C31,	//0x2310		VoC_bnlt16_rd(DecodeLumAc_100,REG1,0x5da3)
0x23A32B80,	//0x2312		VoC_jal(CII_ReadByte)
0xFFC065FC,	//0x2314		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DecodeLumAc_CIRCLE)
		//0x2316		DecodeLumAc_100
0xFF3A4277,	//0x2316		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG1,REG6,DEFAULT)
0x2982FEBA,	//0x2318		VoC_and32_rd(REG45,0x5db4)(lo)	|	VoC_shr32_rr(REG45,REG7,DEFAULT)
0x543A5DB4,	//0x231a		VoC_bngt32_rd(DecodeLumAc_101,REG45,0x5db6)(lo)	|	VoC_and32_rd(REG45,0x5db4)(hi)
0x09925DB6,	//0x231c		VoC_sub32_rd(REG45,REG45,0x5db8)(lo)	|	VoC_bngt32_rd(DecodeLumAc_101,REG45,0x5db6)(hi)
0x0A825DB8,	//0x231e		VoC_lw16i(REG2,0x5efa)(lo)	|	VoC_sub32_rd(REG45,REG45,0x5db8)(hi)
0xE5D45EFA,	//0x2320		VoC_jump(DecodeLumAc_104)	|	VoC_lw16i(REG2,0x5efa)(hi)
		//0x2322		DecodeLumAc_101
0x3C3CF924,	//0x2322		VoC_bngt16_rd(DecodeLumAc_102,REG4,0x5d7a)(lo)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0x07A45D7A,	//0x2324		VoC_sub16_rd(REG4,REG4,0x5d7c)(lo)	|	VoC_bngt16_rd(DecodeLumAc_102,REG4,0x5d7a)(hi)
0x0A825D7C,	//0x2326		VoC_lw16i(REG2,0x5eba)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5d7c)(hi)
0xE5CC5EBA,	//0x2328		VoC_jump(DecodeLumAc_104)	|	VoC_lw16i(REG2,0x5eba)(hi)
		//0x232a		DecodeLumAc_102
0x3C3CF91C,	//0x232a		VoC_bngt16_rd(DecodeLumAc_103,REG4,0x5d7b)(lo)	|	VoC_shru16_ri(REG4,0x3,DEFAULT)
0x07A45D7B,	//0x232c		VoC_sub16_rd(REG4,REG4,0x5d79)(lo)	|	VoC_bngt16_rd(DecodeLumAc_103,REG4,0x5d7b)(hi)
0x0A825D79,	//0x232e		VoC_lw16i(REG2,0x5e5a)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5d79)(hi)
0xE5C45E5A,	//0x2330		VoC_jump(DecodeLumAc_104)	|	VoC_lw16i(REG2,0x5e5a)(hi)
		//0x2332		DecodeLumAc_103
0x0A82F924,	//0x2332		VoC_lw16i(REG2,0x5e1a)(lo)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0xC0A25E1A,	//0x2334		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i(REG2,0x5e1a)(hi)
		//0x2335		DecodeLumAc_104
0xFF46C0A2,	//0x2336		VoC_lw32z(RL6,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xE2A3E242,	//0x2338		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_lbinc_p(REG2)
0x845162A2,	//0x233a		VoC_sub16_rp(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x237431C6,	//0x233c		VoC_bnez16_r(DecodeAc_100,REG6)
0xDF067004,	//0x233e		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x238C2B00,	//0x2340		VoC_jump_lg(HufBlock_102)
		//0x2342		DecodeChromAc_CASE
		//0x2342		DecodeChromAc_CIRCLE
0x5DA34C31,	//0x2342		VoC_bnlt16_rd(DecodeChromAc_100,REG1,0x5da3)
0x23A32B80,	//0x2344		VoC_jal(CII_ReadByte)
0xFFC065FC,	//0x2346		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DecodeChromAc_CIRCLE)
		//0x2348		DecodeChromAc_100
0xFF3A4277,	//0x2348		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG1,REG6,DEFAULT)
0x2982FEBA,	//0x234a		VoC_and32_rd(REG45,0x5db4)(lo)	|	VoC_shr32_rr(REG45,REG7,DEFAULT)
0x543A5DB4,	//0x234c		VoC_bngt32_rd(DecodeChromAc_101,REG45,0x5db6)(lo)	|	VoC_and32_rd(REG45,0x5db4)(hi)
0x09925DB6,	//0x234e		VoC_sub32_rd(REG45,REG45,0x5db8)(lo)	|	VoC_bngt32_rd(DecodeChromAc_101,REG45,0x5db6)(hi)
0x0A825DB8,	//0x2350		VoC_lw16i(REG2,0x60fa)(lo)	|	VoC_sub32_rd(REG45,REG45,0x5db8)(hi)
0xE5D460FA,	//0x2352		VoC_jump(DecodeChromAc_104)	|	VoC_lw16i(REG2,0x60fa)(hi)
		//0x2354		DecodeChromAc_101
0x3C3CF924,	//0x2354		VoC_bngt16_rd(DecodeChromAc_102,REG4,0x5d7a)(lo)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0x07A45D7A,	//0x2356		VoC_sub16_rd(REG4,REG4,0x5d7c)(lo)	|	VoC_bngt16_rd(DecodeChromAc_102,REG4,0x5d7a)(hi)
0x0A825D7C,	//0x2358		VoC_lw16i(REG2,0x60ba)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5d7c)(hi)
0xE5CC60BA,	//0x235a		VoC_jump(DecodeChromAc_104)	|	VoC_lw16i(REG2,0x60ba)(hi)
		//0x235c		DecodeChromAc_102
0x3C3CF91C,	//0x235c		VoC_bngt16_rd(DecodeChromAc_103,REG4,0x5d7d)(lo)	|	VoC_shru16_ri(REG4,0x3,DEFAULT)
0x07A45D7D,	//0x235e		VoC_sub16_rd(REG4,REG4,0x5d7e)(lo)	|	VoC_bngt16_rd(DecodeChromAc_103,REG4,0x5d7d)(hi)
0x0A825D7E,	//0x2360		VoC_lw16i(REG2,0x603a)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5d7e)(hi)
0xE5C4603A,	//0x2362		VoC_jump(DecodeChromAc_104)	|	VoC_lw16i(REG2,0x603a)(hi)
		//0x2364		DecodeChromAc_103
0x0A82F924,	//0x2364		VoC_lw16i(REG2,0x5ffa)(lo)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0xC0A25FFA,	//0x2366		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i(REG2,0x5ffa)(hi)
		//0x2367		DecodeChromAc_104
0xFF46C0A2,	//0x2368		VoC_lw32z(RL6,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xE2A3E242,	//0x236a		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_lbinc_p(REG2)
0x845162A2,	//0x236c		VoC_sub16_rp(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x237431C6,	//0x236e		VoC_bnez16_r(DecodeAc_100,REG6)
0xDF067004,	//0x2370		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xFFC065DA,	//0x2372		VoC_NAD(IN_PARALLEL)	|	VoC_jump(HufBlock_102)
		//0x2374		DecodeAc_100
0x237A34B1,	//0x2374		VoC_bngt16_rr(DecodeAc_101,REG6,REG1)
0x23A32B80,	//0x2376		VoC_jal(CII_ReadByte)
0xFFC065FC,	//0x2378		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DecodeAc_100)
		//0x237a		DecodeAc_101
0x5DAA1484,	//0x237a		VoC_lw32_d(ACC0,0x5daa)
0x5DA60B34,	//0x237c		VoC_sub16_dr(REG4,0x5da6,REG6)
0xC2717F3D,	//0x237e		VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_movreg32(ACC1,RL7,DEFAULT)
0x5D9907B6,	//0x2380		VoC_sub16_rd(REG6,REG6,0x5d99)
0xFEE47E8D,	//0x2382		VoC_shru32_rr(ACC0,REG4,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG1,DEFAULT)
0x7F2CE4E5,	//0x2384		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_and32_rr(ACC1,ACC0,DEFAULT)
0x09ADFEF5,	//0x2386		VoC_sub32_rd(ACC1,ACC1,0x5d99)(lo)	|	VoC_shru32_rr(ACC1,REG6,IN_PARALLEL)
0x7EE55D99,	//0x2388		VoC_shru32_rr(ACC1,REG4,DEFAULT)	|	VoC_sub32_rd(ACC1,ACC1,0x5d99)(hi)
0xCB2ADF06,	//0x238a		VoC_sub32_rr(REG45,ACC0,ACC1,DEFAULT)	|	VoC_pop32(RL6,IN_PARALLEL)
		//0x238c		HufBlock_102
0xDF016086,	//0x238c		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0x23A03303,	//0x238e		VoC_bez32_r(HufBlock_103,REG67)
0x61FA0A84,	//0x2390		VoC_lw16i(REG4,0x61fa)
0xF78540FB,	//0x2392		VoC_movreg16(REG5,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xC11FC0ED,	//0x2394		VoC_add16_rr(REG7,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG3,REG5,DEFAULT)
0x003F89AD,	//0x2396		VoC_add16_pd(REG7,REG7,0xf3b)(lo)	|	VoC_mult16_rp(REG5,REG6,REG5,DEFAULT)
0xFFC00F3B,	//0x2398		VoC_NOP	|	VoC_add16_pd(REG7,REG7,0xf3b)(hi)
0x4C2BDC75,	//0x239a		VoC_bnlt16_rd(HufBlock_103,REG3,0x5d71)(lo)	|	VoC_sw16_p(REG5,REG7,DEFAULT)
0xDE185D71,	//0x239c		VoC_inc_p(REG3,DEFAULT)	|	VoC_bnlt16_rd(HufBlock_103,REG3,0x5d71)(hi)
0x23082B00,	//0x239e		VoC_jump_lg(HufBlock_101)
		//0x23a0		HufBlock_103
0xFFC0DFA9,	//0x23a0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFF46E580,	//0x23a2		VoC_lw32z(RL6,DEFAULT)	|	VoC_return
		//0x23a3		CII_ReadByte
0x63820A82,	//0x23a4		VoC_lw16i(REG2,0x6382)
0xF4034214,	//0x23a6		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG0,REG2,DEFAULT)
0x5D7E4894,	//0x23a8		VoC_blt16_rd(ReadByte_begin,REG4,0x5d7e)
0xFFC05FE9,	//0x23aa		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x21402B80,	//0x23ac		VoC_jal(CII_DMAI_READDATA)
0x63820A80,	//0x23ae		VoC_lw16i(REG0,0x6382)
0xFFC05FA9,	//0x23b0		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
		//0x23b2		ReadByte_begin
0x23081404,	//0x23b2		VoC_lw16_d(REG4,0x2308)
0x7022E240,	//0x23b4		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_lbinc_p(REG0)
0x443CEF83,	//0x23b6		VoC_bne16_rd(ReadByte_100,REG4,0x5d99)(lo)	|	VoC_lw16i_short(REG3,0xfffffff8,IN_PARALLEL)
0xE2805D99,	//0x23b8		VoC_rbinc_i(REG4,0x10,DEFAULT)	|	VoC_bne16_rd(ReadByte_100,REG4,0x5d99)(hi)
0x5D7340B4,	//0x23ba		VoC_be16_rd(ReadByte_1022,REG4,0x5d73)
0xE5CBF002,	//0x23bc		VoC_jump(ReadByte_1022)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x23be		ReadByte_100
0xE2A1E2A0,	//0x23be		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0x5D734424,	//0x23c0		VoC_bne16_rd(ReadByte_101,REG4,0x5d73)
0xE5C7E08C,	//0x23c2		VoC_jump(ReadByte_102)	|	VoC_movreg16(RL6_LO,REG4,DEFAULT)
		//0x23c4		ReadByte_101
0x442DF603,	//0x23c4		VoC_bne16_rd(ReadByte_102,REG5,0x5d73)(lo)	|	VoC_lw16i_short(REG3,0xfffffff0,DEFAULT)
0xFFC05D73,	//0x23c6		VoC_NAD	|	VoC_bne16_rd(ReadByte_102,REG5,0x5d73)(hi)
		//0x23c8		ReadByte_1022
0x23081502,	//0x23c8		VoC_sw16_d(REG2,0x2308)
		//0x23ca		ReadByte_102
0xFEDFC259,	//0x23ca		VoC_shru32_rr(RL7,REG3,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0xE580E537,	//0x23cc		VoC_return	|	VoC_or32_rr(RL7,RL6,DEFAULT)
		//0x23ce		CII_IDCT_11_C
0x0F3B1401,	//0x23ce		VoC_lw16_d(REG1,0xf3b)
0x808AF082,	//0x23d0		VoC_add16_rp(REG2,REG2,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xF83AF8E2,	//0x23d2		VoC_shr16_ri(REG2,0x7,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffc,DEFAULT)
0xEC01E043,	//0x23d4		VoC_loop_i_short(0x20,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
		//0x23d6		VoC_endloop0
0xE580DDC9,	//0x23d6		VoC_return	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
		//0x23d8		CII_IDCT_44_C
0x77F3DFE9,	//0x23d8		VoC_lw16i_short(INC3,0xffffffff,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2009F401,	//0x23da		VoC_lw16d_set_inc(REG1,0xf3b,0x2)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xFFC00F3B,	//0x23dc		VoC_NAD	|	VoC_lw16d_set_inc(REG1,0xf3b,0x2)(hi)
0x23E22C09,	//0x23de		VoC_loop_i(0x1,0x4)
0x25132B80,	//0x23e0		VoC_jal(CII_idctrow4)
		//0x23e2		VoC_endloop1
0x2021FFC0,	//0x23e2		VoC_lw16d_set_inc(REG1,0xf3b,0x8)(lo)	|	VoC_NAD
0xFFC00F3B,	//0x23e4		VoC_NAD	|	VoC_lw16d_set_inc(REG1,0xf3b,0x8)(hi)
0x23EA2C11,	//0x23e6		VoC_loop_i(0x1,0x8)
0x25772B80,	//0x23e8		VoC_jal(CII_idctcol4)
		//0x23ea		VoC_endloop1
0xDFA9FFC0,	//0x23ea		VoC_pop16(RA,DEFAULT)	|	VoC_NAD
0xE580F019,	//0x23ec		VoC_return	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
		//0x23ee		CII_IDCT_88_C
0xF3FF5FE9,	//0x23ee		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0F3B2009,	//0x23f0		VoC_lw16d_set_inc(REG1,0xf3b,0x2)
0x23F62C11,	//0x23f2		VoC_loop_i(0x1,0x8)
0x24022B80,	//0x23f4		VoC_jal(CII_idctrow)
		//0x23f6		VoC_endloop1
0x2021FFC0,	//0x23f6		VoC_lw16d_set_inc(REG1,0xf3b,0x8)(lo)	|	VoC_NAD
0xFFC00F3B,	//0x23f8		VoC_NAD	|	VoC_lw16d_set_inc(REG1,0xf3b,0x8)(hi)
0x23FE2C11,	//0x23fa		VoC_loop_i(0x1,0x8)
0x247F2B80,	//0x23fc		VoC_jal(CII_idctcol)
		//0x23fe		VoC_endloop1
0xDFA9FFC0,	//0x23fe		VoC_pop16(RA,DEFAULT)	|	VoC_NAD
0xE580F019,	//0x2400		VoC_return	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
		//0x2402		CII_idctrow
0xDFC1F051,	//0x2402		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x59CAD9C9,	//0x2404		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x59CBFF46,	//0x2406		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x59CDFF44,	//0x2408		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x7A2EF6CD,	//0x240a		VoC_shr32_ri(RL6,0x5,DEFAULT)	|	VoC_movreg16(RL6_HI,REG6,IN_PARALLEL)
0x31C3F649,	//0x240c		VoC_bnez16_r(idctrow_100,REG3)(lo)	|	VoC_movreg16(ACC0_HI,REG2,IN_PARALLEL)
0x3342241D,	//0x240e		VoC_bnez32_r(idctrow_100,REG45)(lo)	|	VoC_bnez16_r(idctrow_100,REG3)(hi)
0x3346241D,	//0x2410		VoC_bnez32_r(idctrow_100,RL6)(lo)	|	VoC_bnez32_r(idctrow_100,REG45)(hi)
0x31C7241D,	//0x2412		VoC_bnez16_r(idctrow_100,REG7)(lo)	|	VoC_bnez32_r(idctrow_100,RL6)(hi)
0x3345241D,	//0x2414		VoC_bnez32_r(idctrow_100,ACC1)(lo)	|	VoC_bnez16_r(idctrow_100,REG7)(hi)
0xF8EA241D,	//0x2416		VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)	|	VoC_bnez32_r(idctrow_100,ACC1)(hi)
0xF6435F81,	//0x2418		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDDC9E881,	//0x241a		VoC_sw32inc_p(REG23,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x241b		VoC_endloop0
0xFF28E580,	//0x241c		VoC_movreg32(REG01,ACC1,DEFAULT)	|	VoC_return
		//0x241d		idctrow_100
0xC1067A2C,	//0x241e		VoC_add16_rr(REG6,REG4,REG0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0x5DAE0924,	//0x2420		VoC_add32_rd(ACC0,ACC0,0x5dae)
0xCB374936,	//0x2422		VoC_sub32_rr(RL7,ACC0,RL6,IN_PARALLEL)	|	VoC_add32_rr(RL6,ACC0,RL6,DEFAULT)
0x5D930A34,	//0x2424		VoC_multf32_rd(ACC0,REG6,0x5d93)
0x5D940F00,	//0x2426		VoC_msu32_rd(REG0,0x5d94)
0x7F25FF25,	//0x2428		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x0E20FF2C,	//0x242a		VoC_mac32_rd(REG4,0x5d95)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x180A5D95,	//0x242c		VoC_lw16i_set_inc(REG2,0x23ce,0x2)(lo)	|	VoC_mac32_rd(REG4,0x5d95)(hi)
0x49A423CE,	//0x242e		VoC_add32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x23ce,0x2)(hi)
0x49EFCBA6,	//0x2430		VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0x5DD4CBED,	//0x2432		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0xDDD7C0CE,	//0x2434		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG1,IN_PARALLEL)
0x0A34DDD5,	//0x2436		VoC_multf32_rd(ACC0,REG6,0x5d8d)(lo)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x0E185D8D,	//0x2438		VoC_mac32_rd(REG3,0x5d8f)(lo)	|	VoC_multf32_rd(ACC0,REG6,0x5d8d)(hi)
0x7F255D8F,	//0x243a		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32_rd(REG3,0x5d8f)(hi)
0x7F27C1EB,	//0x243c		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG5,IN_PARALLEL)
0x0F08FF2C,	//0x243e		VoC_msu32_rd(REG1,0x5d8e)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x0A1C5D8E,	//0x2440		VoC_multf32_rd(ACC0,REG3,0x5d90)(lo)	|	VoC_msu32_rd(REG1,0x5d8e)(hi)
0x7F265D90,	//0x2442		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_multf32_rd(ACC0,REG3,0x5d90)(hi)
0xFF25DDD6,	//0x2444		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,IN_PARALLEL)
0x5D910F38,	//0x2446		VoC_msu32_rd(REG7,0x5d91)
0x637A180A,	//0x2448		VoC_lw16i_set_inc(REG2,0x637a,0x2)
0xFF2C7F23,	//0x244a		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x5D920F28,	//0x244c		VoC_msu32_rd(REG5,0x5d92)
0xCBDF49DB,	//0x244e		VoC_sub32_rr(RL7,RL7,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG67,RL7,REG67,DEFAULT)
0xCBA549A2,	//0x2450		VoC_sub32_rr(ACC1,RL6,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)
0xCBED49E8,	//0x2452		VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG01,RL7,ACC1,DEFAULT)
0x0A0CF639,	//0x2454		VoC_multf32_rd(ACC0,REG1,0x5d96)(lo)	|	VoC_lw16i_short(FORMAT32,0xfffffff1,DEFAULT)
0x79085D96,	//0x2456		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x5d96)(hi)
0x0E00F401,	//0x2458		VoC_mac32_rd(REG0,0x5d96)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x5DD35D96,	//0x245a		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_mac32_rd(REG0,0x5d96)(hi)
0x0923F589,	//0x245c		VoC_add32_rd(REG67,ACC0,0x5db0)(lo)	|	VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)
0x7A3B5DB0,	//0x245e		VoC_shr32_ri(REG67,0x7,DEFAULT)	|	VoC_add32_rd(REG67,ACC0,0x5db0)(hi)
0x0A0CFF28,	//0x2460		VoC_multf32_rd(ACC0,REG1,0x5d96)(lo)	|	VoC_movreg32(REG01,ACC1,IN_PARALLEL)
0x79085D96,	//0x2462		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x5d96)(hi)
0x0E00F401,	//0x2464		VoC_mac32_rd(REG0,0x5d96)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x18085D96,	//0x2466		VoC_lw16i_set_inc(REG0,0x637a,0x2)(lo)	|	VoC_mac32_rd(REG0,0x5d96)(hi)
0x0927637A,	//0x2468		VoC_add32_rd(RL7,ACC0,0x5db0)(lo)	|	VoC_lw16i_set_inc(REG0,0x637a,0x2)(hi)
0x7A3F5DB0,	//0x246a		VoC_shr32_ri(RL7,0x7,DEFAULT)	|	VoC_add32_rd(RL7,ACC0,0x5db0)(hi)
0x5DD3E073,	//0x246c		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw16i_short(REG3,0x7,IN_PARALLEL)
0x5DD7DF81,	//0x246e		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_pop16(REG1,IN_PARALLEL)
0x5DD2F005,	//0x2470		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x180AC05B,	//0x2472		VoC_lw16i_set_inc(REG2,0x23ce,0x2)(lo)	|	VoC_add16_rr(REG3,REG1,REG3,IN_PARALLEL)
0xE88623CE,	//0x2474		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x23ce,0x2)(hi)
0xB4833282,	//0x2476		VoC_sub32_pp(REG67,REG2,REG0,IN_PARALLEL)	|	VoC_add32inc_pp(REG45,REG2,REG0,DEFAULT)
0xFA43FA42,	//0x2478		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_shr32_ri(REG45,0x8,DEFAULT)
0xDCB6DC94,	//0x247a		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x247b		VoC_endloop0
0x5D9C0709,	//0x247c		VoC_add16_rd(REG1,REG1,0x5d9c)
0xDFC1E580,	//0x247e		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x247f		CII_idctcol
0xFF465892,	//0x2480		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xFF445893,	//0x2482		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xD895D894,	//0x2484		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x7A46D89D,	//0x2486		VoC_shr32_ri(RL6,0x8,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)
0xD89AD897,	//0x2488		VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x31C3D89B,	//0x248a		VoC_bnez16_r(idctcol_100,REG3)(lo)	|	VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)
0x334224A0,	//0x248c		VoC_bnez32_r(idctcol_100,REG45)(lo)	|	VoC_bnez16_r(idctcol_100,REG3)(hi)
0x334624A0,	//0x248e		VoC_bnez32_r(idctcol_100,RL6)(lo)	|	VoC_bnez32_r(idctcol_100,REG45)(hi)
0x31C724A0,	//0x2490		VoC_bnez16_r(idctcol_100,REG7)(lo)	|	VoC_bnez32_r(idctcol_100,RL6)(hi)
0x334524A0,	//0x2492		VoC_bnez32_r(idctcol_100,ACC1)(lo)	|	VoC_bnez16_r(idctcol_100,REG7)(hi)
0x071224A0,	//0x2494		VoC_add16_rd(REG2,REG2,0x5da6)(lo)	|	VoC_bnez32_r(idctcol_100,ACC1)(hi)
0xF8FA5DA6,	//0x2496		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x5da6)(hi)
0xDF81783A,	//0x2498		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x7,DEFAULT)
0xDC92E901,	//0x249a		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x249b		VoC_endloop0
0x5D710789,	//0x249c		VoC_sub16_rd(REG1,REG1,0x5d71)
0xFFC06580,	//0x249e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x24a0		idctcol_100
0xFF286049,	//0x24a0		VoC_movreg32(REG01,ACC1,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
0xF4017A44,	//0x24a2		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x5DB20924,	//0x24a4		VoC_add32_rd(ACC0,ACC0,0x5db2)
0xCB374936,	//0x24a6		VoC_sub32_rr(RL7,ACC0,RL6,IN_PARALLEL)	|	VoC_add32_rr(RL6,ACC0,RL6,DEFAULT)
0xE0097088,	//0x24a8		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x4,DEFAULT)
0xDF44C106,	//0x24aa		VoC_push32(ACC0,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG0,DEFAULT)
0x5D930E30,	//0x24ac		VoC_mac32_rd(REG6,0x5d93)
0x5D940F00,	//0x24ae		VoC_msu32_rd(REG0,0x5d94)
0x7F25FF25,	//0x24b0		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x0E20FF2C,	//0x24b2		VoC_mac32_rd(REG4,0x5d95)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x180A5D95,	//0x24b4		VoC_lw16i_set_inc(REG2,0x23ce,0x2)(lo)	|	VoC_mac32_rd(REG4,0x5d95)(hi)
0x7A1D23CE,	//0x24b6		VoC_shr32_ri(ACC1,0x3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x23ce,0x2)(hi)
0x49A4FA1C,	//0x24b8		VoC_add32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x3,IN_PARALLEL)
0x49EFCBA6,	//0x24ba		VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xDDD4CBED,	//0x24bc		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0xD90C5DD7,	//0x24be		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x60E4DDD5,	//0x24c0		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x0E30C0CE,	//0x24c2		VoC_mac32_rd(REG6,0x5d8d)(lo)	|	VoC_add16_rr(REG6,REG3,REG1,IN_PARALLEL)
0x0E185D8D,	//0x24c4		VoC_mac32_rd(REG3,0x5d8f)(lo)	|	VoC_mac32_rd(REG6,0x5d8d)(hi)
0x7F255D8F,	//0x24c6		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32_rd(REG3,0x5d8f)(hi)
0x7F27C12B,	//0x24c8		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)
0x0F08FF2C,	//0x24ca		VoC_msu32_rd(REG1,0x5d8e)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0xDDD65D8E,	//0x24cc		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_msu32_rd(REG1,0x5d8e)(hi)
0xDF047F23,	//0x24ce		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x5D900E18,	//0x24d0		VoC_mac32_rd(REG3,0x5d90)
0xFA1B7A1F,	//0x24d2		VoC_shr32_ri(REG67,0x3,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x3,DEFAULT)
0x0F20FF25,	//0x24d4		VoC_msu32_rd(REG4,0x5d91)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x180A5D91,	//0x24d6		VoC_lw16i_set_inc(REG2,0x637a,0x2)(lo)	|	VoC_msu32_rd(REG4,0x5d91)(hi)
0x7F26637A,	//0x24d8		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x637a,0x2)(hi)
0x0F28FF2C,	//0x24da		VoC_msu32_rd(REG5,0x5d92)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0xFA1E5D92,	//0x24dc		VoC_shr32_ri(RL6,0x3,DEFAULT)	|	VoC_msu32_rd(REG5,0x5d92)(hi)
0xF5897A1C,	//0x24de		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x3,DEFAULT)
0xCBF749F6,	//0x24e0		VoC_sub32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0xCAE548E2,	//0x24e2		VoC_sub32_rr(ACC1,REG67,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG67,ACC0,DEFAULT)
0xCBED49E8,	//0x24e4		VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG01,RL7,ACC1,DEFAULT)
0x5D960A0C,	//0x24e6		VoC_multf32_rd(ACC0,REG1,0x5d96)
0xF4017908,	//0x24e8		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x5D960E00,	//0x24ea		VoC_mac32_rd(REG0,0x5d96)
0x0923DDD6,	//0x24ec		VoC_add32_rd(REG67,ACC0,0x5db0)(lo)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0x7A3B5DB0,	//0x24ee		VoC_shr32_ri(REG67,0x7,DEFAULT)	|	VoC_add32_rd(REG67,ACC0,0x5db0)(hi)
0xFF28F589,	//0x24f0		VoC_movreg32(REG01,ACC1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)
0x5D960A0C,	//0x24f2		VoC_multf32_rd(ACC0,REG1,0x5d96)
0xF4017908,	//0x24f4		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x5D960E00,	//0x24f6		VoC_mac32_rd(REG0,0x5d96)
0x0927DDD3,	//0x24f8		VoC_add32_rd(RL7,ACC0,0x5db0)(lo)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
0x7A3F5DB0,	//0x24fa		VoC_shr32_ri(RL7,0x7,DEFAULT)	|	VoC_add32_rd(RL7,ACC0,0x5db0)(hi)
0x1808DF81,	//0x24fc		VoC_lw16i_set_inc(REG0,0x23ce,0x2)(lo)	|	VoC_pop16(REG1,IN_PARALLEL)
0x5DD723CE,	//0x24fe		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x23ce,0x2)(hi)
0xDDD2F3E3,	//0x2500		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xfffffff8,IN_PARALLEL)
0x637A180A,	//0x2502		VoC_lw16i_set_inc(REG2,0x637a,0x2)
0x5D6A070B,	//0x2504		VoC_add16_rd(REG3,REG1,0x5d6a)
0xB0126889,	//0x2506		VoC_add32_pp(REG45,REG0,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFBBA3613,	//0x2508		VoC_shr32_ri(REG45,0xfffffff7,IN_PARALLEL)	|	VoC_sub32inc_pp(REG67,REG0,REG2,DEFAULT)
0xFBBB783D,	//0x250a		VoC_shr32_ri(REG67,0xfffffff7,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x7,DEFAULT)
0xB012783F,	//0x250c		VoC_add32_pp(REG45,REG0,REG2,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x7,DEFAULT)
0xDCB7DC95,	//0x250e		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x250f		VoC_endloop0
0x5DA50789,	//0x2510		VoC_sub16_rd(REG1,REG1,0x5da5)
0xDFC1E580,	//0x2512		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x2513		CII_idctrow4
0xF40159C9,	//0x2514		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0xFF4459CA,	//0x2516		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x252231C3,	//0x2518		VoC_bnez16_r(idctrow4_100,REG3)
0x25223342,	//0x251a		VoC_bnez32_r(idctrow4_100,REG45)
0x5F81F8EA,	//0x251c		VoC_pop16(REG1,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)
0xE881F643,	//0x251e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_movreg16(REG3,REG2,IN_PARALLEL)
		//0x2520		VoC_endloop0
0xE580DDC9,	//0x2520		VoC_return	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
		//0x2522		idctrow4_100
0xFA2CE049,	//0x2522		VoC_shr32_ri(ACC0,0x5,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
0x5DAE0927,	//0x2524		VoC_add32_rd(RL7,ACC0,0x5dae)
0x5D930A24,	//0x2526		VoC_multf32_rd(ACC0,REG4,0x5d93)
0x5D950E20,	//0x2528		VoC_mac32_rd(REG4,0x5d95)
0x180AFF25,	//0x252a		VoC_lw16i_set_inc(REG2,0x23ce,0x2)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x49E423CE,	//0x252c		VoC_add32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x23ce,0x2)(hi)
0x49EFCBE6,	//0x252e		VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(RL6,RL7,ACC0,IN_PARALLEL)
0xDDD4CBED,	//0x2530		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0x0A1CDDD7,	//0x2532		VoC_multf32_rd(ACC0,REG3,0x5d8d)(lo)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x0E185D8D,	//0x2534		VoC_mac32_rd(REG3,0x5d8f)(lo)	|	VoC_multf32_rd(ACC0,REG3,0x5d8d)(hi)
0x7F255D8F,	//0x2536		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32_rd(REG3,0x5d8f)(hi)
0x7F27DDD5,	//0x2538		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)
0x0A2CDDD6,	//0x253a		VoC_multf32_rd(ACC0,REG5,0x5d90)(lo)	|	VoC_sw32inc_p(RL6,REG2,IN_PARALLEL)
0x0F285D90,	//0x253c		VoC_msu32_rd(REG5,0x5d92)(lo)	|	VoC_multf32_rd(ACC0,REG5,0x5d90)(hi)
0x7F265D92,	//0x253e		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_msu32_rd(REG5,0x5d92)(hi)
0x180AF589,	//0x2540		VoC_lw16i_set_inc(REG2,0x637a,0x2)(lo)	|	VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)
0x49F6637A,	//0x2542		VoC_add32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x637a,0x2)(hi)
0x4962CBF7,	//0x2544		VoC_add32_rr(REG45,ACC1,ACC0,DEFAULT)	|	VoC_sub32_rr(RL7,RL7,RL6,IN_PARALLEL)
0x49E8CB65,	//0x2546		VoC_add32_rr(REG01,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,IN_PARALLEL)
0x0A0CCBED,	//0x2548		VoC_multf32_rd(ACC0,REG1,0x5d96)(lo)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0x79085D96,	//0x254a		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x5d96)(hi)
0x0E00F401,	//0x254c		VoC_mac32_rd(REG0,0x5d96)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xDDD65D96,	//0x254e		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_mac32_rd(REG0,0x5d96)(hi)
0x5DB00923,	//0x2550		VoC_add32_rd(REG67,ACC0,0x5db0)
0xF5897A3B,	//0x2552		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x7,DEFAULT)
0x0A0CFF28,	//0x2554		VoC_multf32_rd(ACC0,REG1,0x5d96)(lo)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x79085D96,	//0x2556		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x5d96)(hi)
0x0E00F401,	//0x2558		VoC_mac32_rd(REG0,0x5d96)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xDDD35D96,	//0x255a		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_mac32_rd(REG0,0x5d96)(hi)
0x5DB00927,	//0x255c		VoC_add32_rd(RL7,ACC0,0x5db0)
0x1808FA3F,	//0x255e		VoC_lw16i_set_inc(REG0,0x637a,0x2)(lo)	|	VoC_shr32_ri(RL7,0x7,DEFAULT)
0x5DD7637A,	//0x2560		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x637a,0x2)(hi)
0x5DD2DF81,	//0x2562		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_pop16(REG1,IN_PARALLEL)
0x180AF005,	//0x2564		VoC_lw16i_set_inc(REG2,0x23ce,0x2)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x070B23CE,	//0x2566		VoC_add16_rd(REG3,REG1,0x5d9f)(lo)	|	VoC_lw16i_set_inc(REG2,0x23ce,0x2)(hi)
0x32825D9F,	//0x2568		VoC_add32inc_pp(REG45,REG2,REG0,DEFAULT)	|	VoC_add16_rd(REG3,REG1,0x5d9f)(hi)
0x6886B483,	//0x256a		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sub32_pp(REG67,REG2,REG0,IN_PARALLEL)
0xFA43FA42,	//0x256c		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_shr32_ri(REG45,0x8,IN_PARALLEL)
0x3282DC94,	//0x256e		VoC_add32inc_pp(REG45,REG2,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x5CB6B483,	//0x2570		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sub32_pp(REG67,REG2,REG0,IN_PARALLEL)
		//0x2571		VoC_endloop0
0xF051FA42,	//0x2572		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_shr32_ri(REG45,0x8,IN_PARALLEL)
0x5D9C0709,	//0x2574		VoC_add16_rd(REG1,REG1,0x5d9c)
0xDFC1E580,	//0x2576		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x2577		CII_idctcol4
0xFF447019,	//0x2578		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xD896D892,	//0x257a		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0x5895D894,	//0x257c		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x31C6F649,	//0x257e		VoC_bnez16_r(idctcol4_100,REG6)(lo)	|	VoC_movreg16(ACC0_HI,REG2,IN_PARALLEL)
0x3342258D,	//0x2580		VoC_bnez32_r(idctcol4_100,REG45)(lo)	|	VoC_bnez16_r(idctcol4_100,REG6)(hi)
0x0712258D,	//0x2582		VoC_add16_rd(REG2,REG2,0x5da6)(lo)	|	VoC_bnez32_r(idctcol4_100,REG45)(hi)
0xF8FA5DA6,	//0x2584		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x5da6)(hi)
0xDF81783A,	//0x2586		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x7,DEFAULT)
0xDC92E901,	//0x2588		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x2589		VoC_endloop0
0x5D710789,	//0x258a		VoC_sub16_rd(REG1,REG1,0x5d71)
0xFA44E580,	//0x258c		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_return
		//0x258d		idctcol4_100
0x5DB20927,	//0x258e		VoC_add32_rd(RL7,ACC0,0x5db2)
0x5D930A24,	//0x2590		VoC_multf32_rd(ACC0,REG4,0x5d93)
0x5D950E20,	//0x2592		VoC_mac32_rd(REG4,0x5d95)
0x7A1CFF25,	//0x2594		VoC_shr32_ri(ACC0,0x3,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x180AFA1D,	//0x2596		VoC_lw16i_set_inc(REG2,0x23ce,0x2)(lo)	|	VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)
0x49E423CE,	//0x2598		VoC_add32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x23ce,0x2)(hi)
0x49EFCBE6,	//0x259a		VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(RL6,RL7,ACC0,IN_PARALLEL)
0xDDD4CBED,	//0x259c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0x0A34DDD7,	//0x259e		VoC_multf32_rd(ACC0,REG6,0x5d8d)(lo)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x0E305D8D,	//0x25a0		VoC_mac32_rd(REG6,0x5d8f)(lo)	|	VoC_multf32_rd(ACC0,REG6,0x5d8d)(hi)
0x7F255D8F,	//0x25a2		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32_rd(REG6,0x5d8f)(hi)
0x7F27DDD5,	//0x25a4		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)
0x7A1DDDD6,	//0x25a6		VoC_shr32_ri(ACC1,0x3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,IN_PARALLEL)
0x0A2CFA1F,	//0x25a8		VoC_multf32_rd(ACC0,REG5,0x5d90)(lo)	|	VoC_shr32_ri(RL7,0x3,IN_PARALLEL)
0x0F285D90,	//0x25aa		VoC_msu32_rd(REG5,0x5d92)(lo)	|	VoC_multf32_rd(ACC0,REG5,0x5d90)(hi)
0x7F265D92,	//0x25ac		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_msu32_rd(REG5,0x5d92)(hi)
0x7A1EF589,	//0x25ae		VoC_shr32_ri(RL6,0x3,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)
0x180AFA1C,	//0x25b0		VoC_lw16i_set_inc(REG2,0x637a,0x2)(lo)	|	VoC_shr32_ri(ACC0,0x3,IN_PARALLEL)
0x49F6637A,	//0x25b2		VoC_add32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x637a,0x2)(hi)
0x4962CBF7,	//0x25b4		VoC_add32_rr(REG45,ACC1,ACC0,DEFAULT)	|	VoC_sub32_rr(RL7,RL7,RL6,IN_PARALLEL)
0x49E8CB65,	//0x25b6		VoC_add32_rr(REG01,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,IN_PARALLEL)
0x0A0CCBED,	//0x25b8		VoC_multf32_rd(ACC0,REG1,0x5d96)(lo)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0x79085D96,	//0x25ba		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x5d96)(hi)
0x0E00F401,	//0x25bc		VoC_mac32_rd(REG0,0x5d96)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xDDD65D96,	//0x25be		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_mac32_rd(REG0,0x5d96)(hi)
0x5DB00923,	//0x25c0		VoC_add32_rd(REG67,ACC0,0x5db0)
0xF5897A3B,	//0x25c2		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x7,DEFAULT)
0x0A0CFF28,	//0x25c4		VoC_multf32_rd(ACC0,REG1,0x5d96)(lo)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x79085D96,	//0x25c6		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x5d96)(hi)
0x0E00F401,	//0x25c8		VoC_mac32_rd(REG0,0x5d96)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xDDD35D96,	//0x25ca		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_mac32_rd(REG0,0x5d96)(hi)
0x5DB00927,	//0x25cc		VoC_add32_rd(RL7,ACC0,0x5db0)
0x1808FA3F,	//0x25ce		VoC_lw16i_set_inc(REG0,0x23ce,0x2)(lo)	|	VoC_shr32_ri(RL7,0x7,DEFAULT)
0x5DD723CE,	//0x25d0		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x23ce,0x2)(hi)
0x5DD2F3E3,	//0x25d2		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xfffffff8,IN_PARALLEL)
0x180ADF81,	//0x25d4		VoC_lw16i_set_inc(REG2,0x637a,0x2)(lo)	|	VoC_pop16(REG1,IN_PARALLEL)
0x070B637A,	//0x25d6		VoC_add16_rd(REG3,REG1,0x5d6a)(lo)	|	VoC_lw16i_set_inc(REG2,0x637a,0x2)(hi)
0xFFC05D6A,	//0x25d8		VoC_NAD	|	VoC_add16_rd(REG3,REG1,0x5d6a)(hi)
0xB0126889,	//0x25da		VoC_add32_pp(REG45,REG0,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xB6137BBA,	//0x25dc		VoC_sub32inc_pp(REG67,REG0,REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff7,DEFAULT)
0xFBBB783D,	//0x25de		VoC_shr32_ri(REG67,0xfffffff7,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x7,DEFAULT)
0xB012783F,	//0x25e0		VoC_add32_pp(REG45,REG0,REG2,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x7,DEFAULT)
0xDCB7DC95,	//0x25e2		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x25e3		VoC_endloop0
0x5DA50789,	//0x25e4		VoC_sub16_rd(REG1,REG1,0x5da5)
0xFFC0E580,	//0x25e6		VoC_NAD	|	VoC_return
